% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/init.cache.r
\name{init.cache}
\alias{init.cache}
\title{Initialize caching for expensive biom operations.}
\usage{
init.cache(cm = 50 * 1024^2, ...)
}
\arguments{
\item{cm}{A memoise-compatible cache object. 
E.g. \code{cachem::cache_mem()}, \code{cachem::cache_disk()}, or 
\code{cachem::cache_layered()}. If \code{cm} is numeric, it will
be maximum cache size, in bytes for an in-memory cache.
Default: \code{50 * 1024^2} \emph{(50 MB)}}

\item{...}{Other arguments passed on to \code{cachem::cache_mem}. 
For example: \code{max_size = 512 * 1024^2}, 
\code{max_age = Inf}, \code{max_n = Inf}, etc.}
}
\value{
\code{NULL}, invisibly.
}
\description{
\code{init.cache()} can only be called once. Subsequent calls return an 
error. Speeds up repetitive computations by storing results of calls to 
functions. Applies to \code{alpha.div}, \code{apcoa}, \code{bdply}, 
\code{beta.div}, \code{distill}, \code{ordinate}, \code{plot}, 
\code{rarefy}, \code{select}, \code{stats.table}, \code{subtree}, 
\code{taxa.rollup}, and \code{unifrac}.
}
\examples{
    library(rbiom)
    
    init.cache()
    system.time(x <- alpha.div(hmp50, "multi"))
    system.time(y <- alpha.div(hmp50, "multi"))
    identical(x, y)

}
