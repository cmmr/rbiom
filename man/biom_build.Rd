% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biom_build.r
\name{biom_build}
\alias{biom_build}
\title{Create a BIOM object.}
\usage{
biom_build(
  counts,
  metadata = NULL,
  taxonomy = NULL,
  tree = NULL,
  sequences = NULL,
  id = NULL,
  comment = NULL
)
}
\arguments{
\item{counts}{The count data as a numeric matrix, where column names are
the sample names and row names are the OTU names. A BIOM object or
a filename/URL compatible with \code{\link[=read_biom]{read_biom()}} is also acceptable.}

\item{metadata}{A data.frame with sample names as the row names and
metadata names as the column names. Or a filename/URL with comma- or
tab-separated data.}

\item{taxonomy}{A character matrix with OTU names as the row names. Or a
filename/URL with comma- or tab-separated data.}

\item{tree}{A \code{phylo} object with tip labels matching the OTU names.
(E.g. from \code{\link[=read_tree]{read_tree()}}). Or a filename/URL with newick formatted
data.}

\item{sequences}{A named character vector of DNA sequences. Or a
filename/URL with fasta format data.
(Currently not used by \code{rbiom}.)}

\item{id, comment}{A character vector of length one with text of the user's
choosing.}
}
\value{
A \code{BIOM} class object containing the parsed data. This object
can be treated as a list with the following named elements:
\itemize{
\item{\code{$counts} - }{
A numeric \code{slam} sparse matrix of observation counts. Taxa
(OTUs) as rows and samples as columns. }
\item{\code{$metadata} - }{
A data frame containing any embedded metadata. Row names are
sample IDs. }
\item{\code{$taxonomy} - }{
Character matrix of taxonomic names, if given. Row names are taxa
(OTU) IDs. Column rows are named Kingdom, Phylum, Class, Order,
Family, Genus, Species, and Strain, or TaxLvl.1, TaxLvl.2, ... ,
TaxLvl.N when more than 8 levels of taxonomy are encoded in the
biom file. }
\item{\code{$phylogeny} - }{
An object of class \code{phylo} defining the phylogenetic
relationships between the taxa. Although the official
specification for BIOM only includes phylogenetic trees in BIOM
version 2.1, if a BIOM version 1.0 file includes a
\code{phylogeny} entry with newick data, then it will be loaded
here as well. The \pkg{ape} package has additional functions for
working with \code{phylo} objects.}
\item{\code{$sequences} - }{
A named character vector, where the names are taxonomic
identifiers and the values are the sequences they represent.
These values are not part of the official BIOM specification, but
will be read and written when defined. }
\item{\code{$info} - }{
A list of other attributes defined in the BIOM file, such as
\code{id}, \code{type}, \code{format}, \code{format_url},
\code{generated_by}, \code{date}, \code{matrix_type},
\code{matrix_element_type}, \code{Comment}, and \code{shape}. }
}
\code{metadata}, \code{taxonomy}, and \code{phylogeny} are optional
components of the BIOM file specification and therefore will be empty
in the returned object when they are not provided by the BIOM file.
}
\description{
Create a BIOM object.
}
\examples{
    library(rbiom)
    
    biom <- sample_select(hmp50, 1:5)
    
    # Save components to separate files.
    ct  <- write_counts(biom, tempfile())
    md  <- write_metadata(biom, tempfile())
    tax <- write_taxonomy(biom, tempfile())
    tre <- write_tree(biom, tempfile())
    fas <- write_fasta(biom, tempfile())
    
    # Peek at the file structures.
    cat(readLines(ct, n = 2L),  '', sep="\n")
    cat(readLines(md, n = 2L),  '', sep="\n")
    cat(readLines(tax, n = 2L), '', sep="\n")
    cat(readChar(tre, nchars = 50L), "\n\n")
    cat(readChar(fas, nchars = 50L), "\n\n")
    
    # Re-assemble the BIOM object.
    biom <- biom_build(ct, md, tax, tre, id = "New BIOM")
    print(biom)
    
    # Remove temporary files.
    invisible(file.remove(c(ct, md, tax, fas, tre)))
}
