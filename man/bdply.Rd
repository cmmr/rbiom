% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bdply.r
\name{bdply}
\alias{bdply}
\title{Split BIOM by metadata, apply function, and return results in a data frame.}
\usage{
bdply(biom, vars, FUN, ..., fast = TRUE)
}
\arguments{
\item{biom}{A BIOM object, as returned from \link{read_biom}.}

\item{vars}{A character vector of metadata fields. Each unique combination
of values in these columns will be used to create a subsetted BIOM
object to pass to \code{FUN}. If \code{NULL}, \code{biom} will be
passed to \code{FUN} unaltered. Unambiguous abbreviations of metadata
fields are also accepted.}

\item{FUN}{The function to execute on each BIOM subset. \code{FUN} should
return a data.frame, all of which will be \code{rbind}-ed together
before being returned from \code{bdply}.}

\item{...}{Additional arguments to pass on to \code{FUN}.}

\item{fast}{If \code{TRUE} (the default), the subsetted BIOM objects will
still contain the full taxa table and phylogenetic tree. Set 
\code{fast = FALSE} to run the slow steps of subsetting these 
elements as well.}
}
\value{
A data.frame comprising the merged outputs of \code{FUN}, along with
        the columns specified by \code{vars}.
}
\description{
Calls \code{plyr::ddply} internally.
}
\examples{
    library(rbiom)
    
    bdply(hmp50, "Sex", nsamples)
    
    bdply(hmp50, c("Body Site", "Sex"), function (b) {
      ad <- adiv_table(b)[,c("Shannon", "Simpson")]
      apply(ad, 2L, mean)
    })
    
    bdply(hmp50, "Body Site", function (b) {
      r <- range(bdiv_dist(b, "bray"))
      data.frame(bray.min = r[[1]], bray.max = r[[2]])
    })
    
    

}
