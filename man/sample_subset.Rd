% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_subset.r
\name{sample_subset}
\alias{sample_subset}
\title{Subset samples using the BIOM's metadata or taxonomy.}
\usage{
sample_subset(
  biom,
  expr,
  env = parent.frame(),
  drop.na = TRUE,
  refactor = TRUE,
  fast = FALSE
)
}
\arguments{
\item{biom, x}{A BIOM object, as returned from \code{\link[=read_biom]{read_biom()}}.}

\item{expr}{Logical expression to run on the metadata or taxonomy (not both)
to identify samples or taxa to retain.}

\item{env}{The environment to search for variables used in \code{expr}.
Default: \code{parent.frame()}}

\item{drop.na}{When \code{expr} is e.g. \code{Age > 30}, should
\code{!is.na(Age)} be automatically applied too?
Default: \code{TRUE}}

\item{refactor}{When \code{expr} is e.g.
\code{`Body Site` \%in\% c("Stool", "Saliva")}, should
\code{`Body Site`} be redefined as
\code{factor(`Body Site`, levels=c('Stool', 'Saliva'))}?
Applies to categorical metadata only.
Default: \code{TRUE}}

\item{fast}{Should subsetting the phylogenetic tree and sequences be
skipped? These slow steps are often not necessary.
Default: \code{FALSE}}
}
\value{
A \code{BIOM} object.
}
\description{
Subset samples using the BIOM's metadata or taxonomy.
}
\section{Taxonomic abundance filtering}{


For taxonomic subsetting, several functions are added or overridden to
behave as expected within the subsetting expression. They are:

\code{mean()}, \code{median()}, \code{min()}, \code{max()}, \code{n()},
\code{count()}, \code{percent()}, \code{rank()}, and \code{apply()}.

Therefore you can write
\code{sample_subset(hmp50, mean(Genus) >= 0.1)} and the returned BIOM object will
contain only the genera that average at least 10\% relative abundance across
all the samples.

If you want only orders that are present in three or more samples, you can
do: \code{sample_subset(hmp50, count(Order) >= 3)}. To require presence in 25\% of
samples, you'd use: \code{sample_subset(hmp50, percent(Order) >= 0.25)}.

Both \code{count()} and \code{percent()} have default arguments of
\code{gt=0, le=1, ge=NULL, lt=NULL}, which can be overridden to find, e.g.,
which genera comprise at least 2\% of the community in 10\% or more of the
samples: \code{sample_subset(hmp50, percent(Genus, ge=0.02) >= 0.10)}.

\emph{gt = greater than, ge = greater than or equal to. lt/le similarly with
'less than'.}

To keep only the top 5 most abundant genera (based on mean), run:
\code{sample_subset(hmp50, rank(Genus) <= 5)}.

\code{apply()} allows you to run any function on a per-taxon basis. For
example, to filter genera by the root mean square of their relative abundances:
\code{rms <- function(x) sqrt(mean(x^2)); sample_subset(hmp50, apply(Genus, rms) >= 0.1)}.

If you prefer to work on the raw values (e.g. read counts) instead of
relative abundances, set \code{apply(..., raw = TRUE)}. For instance:
\code{sample_subset(hmp50, apply(Genus, mean, raw=TRUE) >= 100)}.
}

\examples{
  \dontrun{
    library(rbiom) 
    
    sample_subset(hmp50, `Body Site` \%in\% c("Saliva", "Stool"))
    sample_subset(hmp50, Age < 25 & BMI > 22)
    sample_subset(hmp50, Phylum \%in\% c("Firmicutes", "Actinobacteria"))
    sample_subset(hmp50, mean(Genus) > 0.1)
    sample_subset(hmp50, rank(Genus) <= 5)
    sample_subset(hmp50, a == b, list(a = as.name("Body Site"), b ="Saliva"))
 }

}
\seealso{
\code{\link[=sample_select]{sample_select()}}
}
