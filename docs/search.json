[{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"syntax-examples","dir":"Articles","previous_headings":"","what":"Syntax examples","title":"Mapping Metadata to Aesthetics","text":"","code":"## Colors ---------------------------- color.by = \"Body Site\" color.by = list('Body Site' = \"bright\") color.by = list('Body Site' = c(\"Stool\", \"Saliva\")) color.by = list('Body Site' = list('values' = c(\"Stool\", \"Saliva\"), 'colors' = \"tol\")) color.by = list('Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"))  ## Patterns -------------------------- pattern.by = \"Body Site\" pattern.by = list('Body Site' = c(\"Stool\", \"Saliva\")) pattern.by = list('Body Site' = c('Stool' = \"left45\", 'Saliva' = \"hs_cross\"))  ## Shapes ---------------------------- shape.by = \"Body Site\" shape.by = list('Body Site' = c(\"Stool\", \"Saliva\")) shape.by = list('Body Site' = c('Stool' = 7, 'Saliva' = 8))  ## Facets ---------------------------- facet.by = \"Body Site\" facet.by = c(\"Body Site\", \"Sex\") facet.by = list('Body Site' = c(\"Stool\", \"Saliva\"), \"Sex\")  ## Limits ---------------------------- limit.by = list('Sex' = \"Male\", 'Age' = c(20,40)) limit.by = list('Body Site' = c(\"Saliva\", \"Anterior nares\"), 'Age' = c(NA,35))"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"automatic-colors","dir":"Articles","previous_headings":"Colors","what":"Automatic colors","title":"Mapping Metadata to Aesthetics","text":"color.needs name metadata field ’d like color . Specifying subset can done . cases, rbiom select appropriate color-blind safe palette use.","code":"color.by = \"Sex\" color.by = list('Body Site' = c(\"Saliva\", \"Stool\"))"},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"custom-colors","dir":"Articles","previous_headings":"Colors","what":"Custom colors","title":"Mapping Metadata to Aesthetics","text":"can map metadata values color ’d like using syntax following examples. can use hexadecimal codes 657 named R colors (type colors() list).","code":"color.by = list('Sex' = c('Male' = \"cyan\", 'Female' = \"#FFC83D\")) color.by = list('Age' = c(\"lightblue\", \"darkblue\")) color.by = list('Age' = list(colors = c(\"red\", \"blue\"), range = c(30, NA)))"},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"built-in-palettes","dir":"Articles","previous_headings":"Colors","what":"Built-in palettes","title":"Mapping Metadata to Aesthetics","text":"collection color-blind friendly palettes pre-defined rbiom. compiled multiple sources: Crameri, Fabio (2023). Scientific colour maps. website   doi Frerebeau, Nicolas (2023). khroma: Colour Schemes Scientific Data Visualization. website   doi Neuwirth, Erich (2022). ColorBrewer Palettes. website Okabe, Masataka, Ito, Key (2008). Color Universal Design (CUD): Make Figures Presentations Friendly Colorblind People. website Tol, Paul (2021). Colour Schemes. pdf use specific one, assign name metadata column.","code":"# Most plots expect `color.by` to be a single categorical metadata field. color.by = list('Body Site' = \"bright\") color.by = list(   'Body Site' = list('colors' = \"bright\", 'values' = c(\"Stool\", \"Saliva\")) )  # Heatmap plots allow multiple metadata fields of any type. color.by = list('Body Site' = \"okabe\", 'Age' = \"bamako\") color.by = list(   'Body Site' = list('colors' = \"okabe\", 'values' = c(\"Stool\", \"Saliva\")),   'Age'       = list('colors' = \"bamako\", 'range' = c(NA, 50)) )"},{"path":[]},{"path":[]},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"reversing-a-palette","dir":"Articles","previous_headings":"Colors > Built-in palettes","what":"Reversing a palette","title":"Mapping Metadata to Aesthetics","text":"Prefix palette name dash (-) reverse color order. also helpful assigning colors heatmap’s main grid.","code":"color.by = list('Age' = \"-bamako\") grid = \"-imola\""},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"patterns","dir":"Articles","previous_headings":"","what":"Patterns","title":"Mapping Metadata to Aesthetics","text":"patterned fills available rbiom plots made possible ggpattern R package. 54 pattern names defined gridpattern::names_magick, however, 20 good collection purposes. can allow rbiom choose set patterns, can explicitly define mappings.","code":"# One categorical metadata field may be specified. pattern.by = \"Body Site\" pattern.by = list('Body Site' = c(\"Stool\", \"Saliva\")) pattern.by = list('Body Site' = c('Stool' = \"left45\", 'Saliva' = \"hs_cross\"))  # Assign the same metadata field to color.by for colored patterns. pattern.by = \"Body Site\", color.by = \"Body Site\""},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"shapes","dir":"Articles","previous_headings":"","what":"Shapes","title":"Mapping Metadata to Aesthetics","text":"Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. 65:90 = -Z; 97:122 = -z use letters instead shapes plot. Text strings may used well.","code":"# One categorical metadata field may be specified. shape.by = \"Body Site\" shape.by = list('Body Site' = c(\"Stool\", \"Saliva\")) shape.by = list('Body Site' = c('Stool' = 7, 'Saliva' = 8))  # Assign the same metadata field to color.by for colored shapes. shape.by = \"Body Site\", color.by = \"Body Site\""},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"facets","dir":"Articles","previous_headings":"","what":"Facets","title":"Mapping Metadata to Aesthetics","text":"Faceting allows split dataset multiple sub-plots one categorical metadata fields. example:","code":"biom <- rarefy(hmp50)  adiv_boxplot(biom, color.by=\"Body Site\", facet.by=\"Sex\") adiv_boxplot(   biom     = biom,    color.by = \"Sex\",    facet.by = list('Body Site' = c(\"Saliva\", \"Stool\")) )"},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"auto-generated-facets","dir":"Articles","previous_headings":"Facets","what":"Auto-generated facets","title":"Mapping Metadata to Aesthetics","text":"Plotting functions often allow specify multiple ranks, taxa, metrics, etc automatically assigned facet dimension. can still add facets plots.","code":"bdiv_ord_plot(biom, layers = \"p\", bdiv = c(\"Bray-Curtis\", \"Euclidean\")) bdiv_ord_plot(biom, layers = \"p\", bdiv = c(\"bray\", \"euc\"), facet.by = \"Sex\")"},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"limits","dir":"Articles","previous_headings":"","what":"Limits","title":"Mapping Metadata to Aesthetics","text":"*.parameters allow specifying subset samples plot. limit.without setting aesthetics. multiple subsets defined, intersection used plot.","code":"# Only show samples from males whose age is >= 20 and <= 40. limit.by = list('Sex' = \"Male\", 'Age' = c(20,40))  # Limit to these two body sites and age <= 35. limit.by = list('Body Site' = c(\"Saliva\", \"Anterior nares\"), 'Age' = c(NA,35))"},{"path":"https://cmmr.github.io/rbiom/articles/importing.html","id":"create-an-rbiom-object","dir":"Articles","previous_headings":"","what":"Create an rbiom object","title":"Importing Datasets","text":"fastest way make rbiom object as_rbiom(), accepts: filepath URL BIOM file. abundance matrix OTUs rows samples columns. phyloseq-class object, phyloseq Bioconductor R package. list counts optionally metadata, taxonomy, tree, etc (see [as_rbiom()]). Now biom, rbiom-class object can used package’s functions. loaded data BIOM file phyloseq object, might already include metadata, ranks, tree. attributes technically optional, however, analyses possible extra information samples OTUs present.","code":"library(rbiom)  # create a simple matrix ------------------------ mtx <- matrix(   data     = floor(runif(24) * 1000),    nrow     = 6,    dimnames = list(paste0(\"OTU\", 1:6), paste0(\"Sample\", 1:4)) ) mtx #>      Sample1 Sample2 Sample3 Sample4 #> OTU1     689     958     359     729 #> OTU2     150     587     537     841 #> OTU3     875     399     593     464 #> OTU4     752     155     824     343 #> OTU5     335     910     991     814 #> OTU6      55     316     840     178  # convert matrix to rbiom ----------------------- biom <- as_rbiom(biom = mtx) biom #> An rbiom object (2023-12-14) #>       4 Samples:  Sample1, Sample2, Sample3, and Sample4 #>       6 OTUs:     OTU1, OTU2, OTU3, OTU4, OTU5, and OTU6 #>       1 Ranks:    .otu #>       1 Metadata: .sample #>         Tree:     <absent>   # convert from phyloseq to rbiom ---------------- file <- system.file(\"extdata\", \"rich_sparse_otu_table.biom\", package=\"phyloseq\") phy  <- phyloseq::import_biom(file) phy #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 5 taxa and 6 samples ] #> sample_data() Sample Data:       [ 6 samples by 4 sample variables ] #> tax_table()   Taxonomy Table:    [ 5 taxa by 7 taxonomic ranks ]  biom <- as_rbiom(biom = phy) biom #> Imported PhyloSeq Data (2023-12-14) #>       6 Samples:  Sample1, Sample2, ..., and Sample6 #>       5 OTUs:     GG_OTU_2, GG_OTU_3, GG_OTU_4, ... #>       8 Ranks:    .otu, Rank1, Rank2, ..., and Rank7 #>       5 Metadata: .sample, BarcodeSequence, ... #>         Tree:     <absent>   # @export # @examples #     library(rbiom) #      #     biom <- hmp50$clone() #     taxa <- c('Unc53100', 'Unc00c7g', 'Unc25731') #      #     biom$counts[taxa,1:5] #      #     biom$counts %<>% rarefy(depth = 100) #     biom$counts[taxa,1:5] #      #     biom$counts <- biom$counts / 100 #     biom$counts[taxa,1:5] #"},{"path":"https://cmmr.github.io/rbiom/articles/importing.html","id":"attach-metadata","dir":"Articles","previous_headings":"","what":"Attach metadata","title":"Importing Datasets","text":"$metadata lets set arbitrary data sample. quick rules: .sample first column. column names start dot (.). Sample names need match sample_names(biom).","code":"# create example metadata ----------------------- md <- data.frame(   .sample   = paste0(\"Sample\", 1:4),   state     = c(\"TX\", \"TX\", \"WA\", \"WA\"),   age       = c(32, 19, 36, 40),   treatment = c(1, 2, 1, 2) ) md #>   .sample state age treatment #> 1 Sample1    TX  32         1 #> 2 Sample2    TX  19         2 #> 3 Sample3    WA  36         1 #> 4 Sample4    WA  40         2  # add metadata to rbiom object ------------------ biom <- as_rbiom(biom = mtx) biom$metadata <- md biom #> An rbiom object (2023-12-14) #>       4 Samples:  Sample1, Sample2, Sample3, and Sample4 #>       6 OTUs:     OTU5, OTU1, OTU3, OTU2, OTU4, and OTU6 #>       1 Ranks:    .otu #>       4 Metadata: .sample, state, age, and treatment #>         Tree:     <absent>  # or in a single step --------------------------- biom <- as_rbiom(biom = list(counts = mtx, metadata = md)) biom #> An rbiom object (2023-12-14) #>       4 Samples:  Sample1, Sample2, Sample3, and Sample4 #>       6 OTUs:     OTU5, OTU1, OTU3, OTU2, OTU4, and OTU6 #>       1 Ranks:    .otu #>       4 Metadata: .sample, state, age, and treatment #>         Tree:     <absent>"},{"path":"https://cmmr.github.io/rbiom/articles/importing.html","id":"setting-categorical-variables","dir":"Articles","previous_headings":"Attach metadata","what":"Setting categorical variables","title":"Importing Datasets","text":"categorical metadata variable looks numerical, “treatment” example, need manually changed categorical variable.","code":"class(pull(biom, 'treatment')) #> [1] \"numeric\"  biom$metadata$treatment %<>% as.factor()  class(pull(biom, 'treatment')) #> [1] \"factor\" pull(biom, 'treatment') #> Sample1 Sample2 Sample3 Sample4  #>       1       2       1       2  #> Levels: 1 2"},{"path":"https://cmmr.github.io/rbiom/articles/importing.html","id":"attach-a-tree","dir":"Articles","previous_headings":"","what":"Attach a tree","title":"Importing Datasets","text":"Use $tree set tree. can specify phylo object directly, newick file/string.","code":"# define a random tree -------------------------- biom$tree <- \"(((OTU6,(OTU5,OTU4)),OTU3),(OTU2,OTU1));\" biom #> An rbiom object (2023-12-14) #>       4 Samples:  Sample1, Sample2, Sample3, and Sample4 #>       6 OTUs:     OTU5, OTU1, OTU3, OTU2, OTU4, and OTU6 #>       1 Ranks:    .otu #>       4 Metadata: .sample, state, age, and treatment #>         Tree:     <present>"},{"path":"https://cmmr.github.io/rbiom/articles/importing.html","id":"attach-taxonomy","dir":"Articles","previous_headings":"","what":"Attach taxonomy","title":"Importing Datasets","text":"Use $taxonomy define taxonomic clades OTU.","code":"# .otu must match otu_names(biom) --------------- map <- data.frame(   .otu   = paste0(\"OTU\", 1:6),   Phylum = c(\"Bacteroidetes\", \"Firmicutes\", \"Firmicutes\"),   Order  = c(\"Bacteroidia\", \"Clostridiales\", \"Bacillales\") ) map #>   .otu        Phylum         Order #> 1 OTU1 Bacteroidetes   Bacteroidia #> 2 OTU2    Firmicutes Clostridiales #> 3 OTU3    Firmicutes    Bacillales #> 4 OTU4 Bacteroidetes   Bacteroidia #> 5 OTU5    Firmicutes Clostridiales #> 6 OTU6    Firmicutes    Bacillales  biom$taxonomy <- map biom #> An rbiom object (2023-12-14) #>       4 Samples:  Sample1, Sample2, Sample3, and Sample4 #>       6 OTUs:     OTU5, OTU1, OTU3, OTU2, OTU4, and OTU6 #>       3 Ranks:    .otu, Phylum, and Order #>       4 Metadata: .sample, state, age, and treatment #>         Tree:     <present>"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"create","dir":"Articles","previous_headings":"","what":"Create","title":"rbiom","text":"general purpose as_rbiom() function can convert data types rbiom object - see importing details. ’ll import dataset BIOM file.","code":"library(rbiom)  file <- system.file(package = \"rbiom\", \"extdata\", \"hmp50.bz2\") biom <- as_rbiom(file)  biom #> Human Microbiome Project - 50 Sample Demo (2023-12-14) #>      50 Samples:  HMP01, HMP02, HMP03, ..., and HMP50 #>     490 OTUs:     Unc01yki, Unc53100, LtbAci52, ... #>       7 Ranks:    .otu, Kingdom, Phylum, ..., and Genus #>       5 Metadata: .sample, Age, BMI, Body Site, and Sex #>         Tree:     <present>"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"inspect","dir":"Articles","previous_headings":"","what":"Inspect","title":"rbiom","text":"rbiom object many helpful accessors. pull(), sample_sums(), taxa_matrix(), taxa_means(), taxa_sums()","code":"biom$counts[1:4,1:8] %>% as.matrix() #>          HMP01 HMP02 HMP03 HMP04 HMP05 HMP06 HMP07 HMP08 #> Unc01yki     0     0     0     0     0     0     0     0 #> Unc53100  1083   543   301   223  2672   748  2436   321 #> LtbAci52     0     0     0     0     0     0     0     0 #> CnbTube3     0     0     0     0     0     0     0     0  biom$fields #> [1] \".sample\"   \"Age\"       \"BMI\"       \"Body Site\" \"Sex\"  # Use pull() to automatically setNames(). pull(biom, 'Age') %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>    22    24    28    25    27    32"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"clone","dir":"Articles","previous_headings":"","what":"Clone","title":"rbiom","text":"Rbiom objects passed reference. common <- assignment operator creates second reference object - create second object. create copy rbiom object, use object’s $clone() method.","code":"a <- as_rbiom(file) b <- a$clone()  # Correct  a$n_samples #> [1] 50 b$metadata %<>% head() a$n_samples #> [1] 50 a <- as_rbiom(file) b <- a  # Wrong  a$n_samples #> [1] 50 b$metadata %<>% head() a$n_samples #> [1] 6"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"modify","dir":"Articles","previous_headings":"","what":"Modify","title":"rbiom","text":"seven components rbiom object can modify directly. Assigning new values components trigger validation checks inter-component OTU/sample synchronization. See Working rbiom Objects additional details.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"rarefy-counts","dir":"Articles","previous_headings":"Modify","what":"Rarefy Counts","title":"rbiom","text":"common way normalize microbiome count data rarefy . process drops samples observations, randomly removes observations samples rest, samples “rarefaction depth”.","code":"sample_sums(biom) %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>  1660  1371  1353  1895  3939  4150  biom <- rarefy(biom)  sample_sums(biom) %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>  1183  1183  1183  1183  1183  1183"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"add-metadata","dir":"Articles","previous_headings":"Modify","what":"Add Metadata","title":"rbiom","text":"Additional sample metadata columns can added biom$metadata (tibble data.frame). first column, '.sample', used rbiom link sample metadata samples abundance table.","code":"biom$metadata$treatment <- sample(c(\"control\", \"test\"), biom$n_samples, TRUE) biom$metadata #> # A tibble: 49 × 6 #>   .sample   Age   BMI `Body Site`   Sex    treatment #>   <chr>   <dbl> <dbl> <fct>         <fct>  <fct>     #> 1 HMP01      22    20 Buccal mucosa Female control   #> 2 HMP02      24    23 Buccal mucosa Male   test      #> 3 HMP03      28    26 Saliva        Male   test      #> 4 HMP04      25    23 Saliva        Male   test      #> 5 HMP05      27    24 Buccal mucosa Female test      #> # ℹ 44 more rows"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"subset-samples","dir":"Articles","previous_headings":"Modify","what":"Subset Samples","title":"rbiom","text":"Removing samples metadata remove samples entire rbiom object. base R subset() function works well , dplyr verbs dplyr::filter() dplyr::slice().","code":"biom <- subset(biom, `Body Site` == \"Anterior nares\") biom$metadata #> # A tibble: 10 × 6 #>   .sample   Age   BMI `Body Site`    Sex    treatment #>   <chr>   <dbl> <dbl> <fct>          <fct>  <fct>     #> 1 HMP10      22    20 Anterior nares Female test      #> 2 HMP15      25    21 Anterior nares Female test      #> 3 HMP16      24    19 Anterior nares Female test      #> 4 HMP25      33    32 Anterior nares Male   control   #> 5 HMP31      31    20 Anterior nares Male   test      #> # ℹ 5 more rows biom #> Human Microbiome Project - 50 Sample Demo (2023-12-14) #>      10 Samples:  HMP10, HMP15, HMP16, ..., and HMP48 #>     126 OTUs:     CnbTube3, PpbAcne6, Unc02qsf, ... #>       7 Ranks:    .otu, Kingdom, Phylum, ..., and Genus #>       6 Metadata: .sample, Age, BMI, ..., and treatment #>         Tree:     <present>"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"compute","dir":"Articles","previous_headings":"","what":"Compute","title":"rbiom","text":"Functions end _table _matrix return calculation results use outside rbiom. _table suffix indicates returned object tibble data.frame one computed value per row. Alternatively, _matrix return base R matrix. Functions taxa abundance (like taxa_table()) prefixed taxa_. Similarly, adiv_ used alpha diversity bdiv_ beta diversity. adiv_matrix(), adiv_table(), bdiv_table(), bdiv_ord_table(), taxa_table(), taxa_matrix()","code":"taxa_table(biom, rank = \"Phylum\") #> # A tibble: 80 × 9 #>   .rank  .sample .taxa        .abundance   Age   BMI `Body Site` Sex   treatment #>   <fct>  <chr>   <fct>             <dbl> <dbl> <dbl> <fct>       <fct> <fct>     #> 1 Phylum HMP10   Actinobacte…        676    22    20 Anterior n… Fema… test      #> 2 Phylum HMP10   Bacteroidet…          7    22    20 Anterior n… Fema… test      #> 3 Phylum HMP10   Cyanobacter…          0    22    20 Anterior n… Fema… test      #> 4 Phylum HMP10   Deinococcus…          0    22    20 Anterior n… Fema… test      #> 5 Phylum HMP10   Firmicutes          496    22    20 Anterior n… Fema… test      #> # ℹ 75 more rows  taxa_matrix(biom, rank = \"Phylum\")[1:4, 1:8] #>                     HMP10 HMP15 HMP16 HMP25 HMP31 HMP32 HMP34 HMP40 #> Actinobacteria        676   862   648   442   670   606  1031   879 #> Bacteroidetes           7     2     2     0    79    20    15     0 #> Cyanobacteria           0     0     2     0     0    23     0     0 #> Deinococcus Thermus     0     0     0     0     0     1     0     0"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"visualize","dir":"Articles","previous_headings":"","what":"Visualize","title":"rbiom","text":"plotting functions rbiom make easy produce informative visualizations alpha diversity, beta diversity, taxa abundance, explore associations metrics sample metadata. See Plot Types article overview different plot options, Mapping Metadata Aesthetics guidance using colors, shapes, patterns represent metadata values. example, display ordination colored body site:  adiv_boxplot(), adiv_corrplot(), bdiv_boxplot(), bdiv_heatmap(), bdiv_ord_plot(), rare_barplot(), rare_corrplot(), rare_multiplot(), taxa_barplot(), taxa_boxplot(), taxa_corrplot(), taxa_heatmap()","code":"bdiv_ord_plot(biom = hmp50, color.by = \"Body Site\")"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"analyze","dir":"Articles","previous_headings":"","what":"Analyze","title":"rbiom","text":"Visualizations excellent way observe differences sample groups. color.set, boxplots, corrplots, ord_plots include following: p-values brief methodology plot . $stats attribute detailed statistics table. $stats$code attribute R code used generate table. Statistics article reviews topic greater detail.  adiv_stats(), bdiv_stats(), distmat_stats(), stats_table(), taxa_stats()","code":"p <- adiv_boxplot(hmp50, color.by = \"Body Site\", facet.by = \"Sex\") p p$stats #> # Test:     kruskal.test(.y ~ `Body Site`). #> # A tibble: 2 × 6 #>   Sex       .n .stat   .df    .p.val   .adj.p #>   <fct>  <int> <dbl> <int>     <dbl>    <dbl> #> 1 Female    30  24.1     4 0.0000761 0.000152 #> 2 Male      20  13.9     3 0.00302   0.00302  p$stats$code #> stats <- plyr::ddply(df, \"Sex\", function (d) { #>    #>   stats::kruskal.test( #>       formula = .y ~ `Body Site`,  #>       data    = d ) %>% #>        #>     with(data.frame( #>       row.names = NULL,  #>       .n     = nrow(d),  #>       .stat  = statistic,  #>       .df    = parameter,  #>       .p.val = p.value )) %>% #>        #>     tryCatch(error = function (e) data.frame()[1,]) #>    #> }) %>% as_tibble() #> stats %<>% plyr::arrange(.p.val) #> stats %<>% dplyr::relocate(.p.val, .after = last_col()) #> stats[['.adj.p']] <- stats::p.adjust(stats[['.p.val']], 'fdr')"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"share","dir":"Articles","previous_headings":"","what":"Share","title":"rbiom","text":"Plots essentially ggplot objects, ggplot2::ggsave() can save PNG, PDF, SVG, many image file types. save rbiom object BIOM file, use write_biom(). sharing dataset someone unfamiliar accessing BIOM files, write_xlsx() also option. additional resources know : R Markdown - reproducible analyses/reports. flexdashboard - interactive dashboards. atima - rbiom website form. ggplot2::ggsave(), patchwork::wrap_plots(), write_biom(), write_xlsx()","code":""},{"path":"https://cmmr.github.io/rbiom/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel P. Smith. Author, maintainer, copyright holder.","code":""},{"path":"https://cmmr.github.io/rbiom/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith D (2023). rbiom: Read/Write, Analyze, Visualize 'BIOM' Data. R package version 2.0.0.9109, https://github.com/cmmr/rbiom, https://cmmr.github.io/rbiom.","code":"@Manual{,   title = {rbiom: Read/Write, Analyze, and Visualize 'BIOM' Data},   author = {Daniel P. Smith},   year = {2023},   note = {R package version 2.0.0.9109, https://github.com/cmmr/rbiom},   url = {https://cmmr.github.io/rbiom}, }"},{"path":"https://cmmr.github.io/rbiom/index.html","id":"rbiom","dir":"","previous_headings":"","what":"Read/Write, Analyze, and Visualize BIOM Data","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"package toolkit working Biological Observation Matrix (BIOM) files. Features include reading/writing ‘BIOM’ formats, rarefaction, alpha diversity, beta diversity (including ‘UniFrac’), summarizing counts taxonomic level, subsetting, visualizations, statistical analysis. CPU intensive operations written C. Reference material available online https://cmmr.github.io/rbiom/index.html Source code can found https://github.com/cmmr/rbiom","code":""},{"path":"https://cmmr.github.io/rbiom/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"latest stable version can installed CRAN. development version available GitHub.","code":"install.packages(\"rbiom\") install.packages(\"remotes\") remotes::install_github(\"cmmr/rbiom\")"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/index.html","id":"import-and-rarefy-abundance-counts","dir":"","previous_headings":"Usage","what":"Import and rarefy abundance counts.","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"","code":"library(rbiom)  infile <- system.file(package = \"rbiom\", \"extdata\", \"hmp50.bz2\") biom   <- rarefy(infile)"},{"path":"https://cmmr.github.io/rbiom/index.html","id":"explore-associations-with-metadata","dir":"","previous_headings":"Usage","what":"Explore associations with metadata.","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"","code":"bdiv_ord_plot(biom, color.by = \"Body Site\", facet.by = \"Sex\") adiv_boxplot(biom, x = \"Sex\", adiv = c(\"otu\", \"shan\"), color.by = \"Body Site\")"},{"path":"https://cmmr.github.io/rbiom/index.html","id":"compute-statistics-for-correlation-models","dir":"","previous_headings":"Usage","what":"Compute statistics for correlation models.","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"","code":"taxa_corrplot(biom, x = \"Age\", layers = \"stc\", taxa = .01, p.top = 4, color.by = \"bod\") taxa_stats(biom, regr = \"Age\", stat.by = \"Body Site\", taxa = 0.01) #> # Test:     Estimated marginal means of linear trends. #> # Model:    stats::lm(.abundance ~ Age * `Body Site`) #> # A tibble: 80 × 10 #>    .taxa   `Body Site` .trend   .se   .df .lower .upper .t.ratio  .p.val  .adj.p #>    <fct>   <fct>        <dbl> <dbl> <dbl>  <dbl>  <dbl>    <dbl>   <dbl>   <dbl> #>  1 Gemella Buccal muc…  15.5   2.45    39  10.6   20.4      6.34 1.76e-7 1.41e-5 #>  2 Alisti… Stool       -14.1   2.49    39 -19.2   -9.10    -5.68 1.46e-6 5.86e-5 #>  3 Haemop… Buccal muc…  38.2   7.97    39  22.1   54.3      4.79 2.40e-5 6.40e-4 #>  4 Strept… Buccal muc… -53.3  12.8     39 -79.2  -27.3     -4.16 1.71e-4 3.43e-3 #>  5 Shuttl… Mid vagina   16.7   4.27    39   8.11  25.4      3.92 3.43e-4 5.49e-3 #>  6 Lactob… Mid vagina  -31.3   8.42    39 -48.4  -14.3     -3.72 6.19e-4 8.26e-3 #>  7 Veillo… Saliva      -10.8   3.09    39 -17.0   -4.52    -3.49 1.23e-3 1.40e-2 #>  8 Prevot… Saliva        5.23  1.69    39   1.82   8.65     3.10 3.58e-3 3.58e-2 #>  9 Neisse… Saliva        9.70  3.42    39   2.78  16.6      2.83 7.23e-3 6.43e-2 #> 10 Fusoba… Saliva        4.95  1.82    39   1.27   8.64     2.72 9.69e-3 7.75e-2 #> # ℹ 70 more rows"},{"path":"https://cmmr.github.io/rbiom/index.html","id":"summarize-counts-by-taxonomic-rank","dir":"","previous_headings":"Usage","what":"Summarize counts by taxonomic rank.","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"","code":"taxa_heatmap(biom, taxa = 30, color.by = c(\"body\", \"age\"), limit.by = c(sex = \"Male\")) taxa_barplot(biom, rank = \"Phylum\") taxa_table(biom, 'Phylum') #> # A tibble: 637 × 8 #>    .rank  .sample .taxa               .abundance   Age   BMI `Body Site`   Sex   #>    <fct>  <chr>   <fct>                    <dbl> <dbl> <dbl> <fct>         <fct> #>  1 Phylum HMP01   Actinobacteria              13    22    20 Buccal mucosa Fema… #>  2 Phylum HMP01   Bacteroidetes              192    22    20 Buccal mucosa Fema… #>  3 Phylum HMP01   Cyanobacteria                0    22    20 Buccal mucosa Fema… #>  4 Phylum HMP01   Deinococcus Thermus          0    22    20 Buccal mucosa Fema… #>  5 Phylum HMP01   Firmicutes                 854    22    20 Buccal mucosa Fema… #>  6 Phylum HMP01   Fusobacteria                37    22    20 Buccal mucosa Fema… #>  7 Phylum HMP01   Gracilibacteria             13    22    20 Buccal mucosa Fema… #>  8 Phylum HMP01   Proteobacteria              74    22    20 Buccal mucosa Fema… #>  9 Phylum HMP01   Saccharibacteria             0    22    20 Buccal mucosa Fema… #> 10 Phylum HMP01   Spirochaetae                 0    22    20 Buccal mucosa Fema… #> # ℹ 627 more rows"},{"path":"https://cmmr.github.io/rbiom/index.html","id":"parallel-processing","dir":"","previous_headings":"","what":"Parallel Processing","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"Computation beta diversity metrics (UniFrac, Bray-Curtis, etc) use available CPU cores default. limit number cores used, can set numThreads option:","code":"RcppParallel::setThreadOptions(numThreads = 4)"},{"path":"https://cmmr.github.io/rbiom/index.html","id":"caching","dir":"","previous_headings":"","what":"Caching","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"Caching enabled default. rbiom store maximum 200MB temporary directory given file.path(tempdir(), \"rbiom\", \"cache\"). following commands can used change cache directory, storage limit (given bytes), key hashing function: Setting cache directory \"FALSE\" disable caching. R options override environment variables.","code":"options(rbiom.cache_dir=\"/tmp/rbiom_cache\") options(rbiom.cache_size=5 * 1024 ^ 2) # 5MB options(rbiom.cache_hash=rlang::hash)  Sys.setenv(RBIOM_CACHE_DIR=\"/tmp/rbiom_cache\") Sys.setenv(RBIOM_CACHE_SIZE=1024 ^ 2) # 1GB"},{"path":"https://cmmr.github.io/rbiom/index.html","id":"building-from-source","dir":"","previous_headings":"","what":"Building from source","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"rbiom requires following system libraries can installed operating system’s package manager. deb (Debian, Ubuntu): libudunits2-dev libssl-dev libxml2-dev libcurl4-openssl-dev libgdal-dev rpm (Fedora, CentOS, RHEL): udunits2-devel openssl-devel libxml2-devel libcurl-devel gdal-devel csw (Solaris): libssl_dev openssl@1.1 libxml2_dev gdal_dev brew (OSX): udunits","code":""},{"path":"https://cmmr.github.io/rbiom/paper.html","id":null,"dir":"","previous_headings":"","what":"Summary","title":"Summary","text":"Microbes live around us, us, even inside bodies. influence health disease profound, beginning fully understood. Studying microbial populations becoming easier modern DNA sequencing technology; examining trends across thousands samples today common. bottleneck longer collecting data, rather analyzing interpreting results. rbiom R package working abundance datasets, OTU ASV counts 16S amplicon sequencing. enables importing/exporting BIOM formats, subsetting, rarefying, manipulation metadata/taxonomy/phylogeny, computation alpha beta diversity metrics, summarizing counts per taxonomic rank. Computationally intensive tasks (including UniFrac [@unifrac]) implemented multithreaded C++ greatly reduce calculation time. Visualization key component rbiom. Rarefaction curves, taxa abundances, alpha diversity, beta diversity can plotted variety graphical formats, including correlation, heatmap, ordination, stacked bar, box plots. rbiom, box plots can combination box, bar, violin, dot, strip, /range layers. plot includes provenance modification history attributes, well ggplot2 [@ggplot2] call used render encourage downstream user customization. Correlations sample metadata microbiome structure can identified mapping one metadata variables interest plot’s axes, facets, /aesthetics. mappings can optionally define color/shape/pattern assignments, category ordering, subsetting parameters. metadata associated axis aesthetic, rbiom automatically run appropriate statistical test, correct multiple comparisons, display significant differences plot, captioning brief methodology. Currently, rbiom can perform four types significance testing. correlation plots numeric metadata variable x-axis (e.g., Age, BMI), linear regression computed R’s lm linear model function. plots two categories (e.g. Male vs Female), Mann-Whitney test [@Mann1947] run R’s wilcox.test. three categories compared, Kruskal-Wallis rank sum test [@Kruskal1952] used instead via R’s kruskal.test function. P-values ordinations derived using adonis2 function vegan R package [@vegan], randomly re-categorizes samples 1,000 times estimate significance observed clustering. P-values corrected multiple comparisons using method described @Benjamini1995 via R’s p.adjust function control false discovery rate. QIIME2 [@qiime2], mothur [@mothur], Phyloseq [@phyloseq] offer overlapping functionality rbiom, important distinctions. first two designed command-line interaction, making difficult integrate R projects. Phyloseq staple R bioinformatics decade, frustratingly slow studies thousands samples. package designed users experience levels. Novice R users appreciate couple commands produce publication-ready figures. Advanced R users can use rbiom complement existing pipelines faster flexible functions. rbiom cross-platform compatible available CRAN conda-forge. latest development version GitHub.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/adiv_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize alpha diversity with boxplots. — adiv_boxplot","title":"Visualize alpha diversity with boxplots. — adiv_boxplot","text":"Visualize alpha diversity boxplots.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize alpha diversity with boxplots. — adiv_boxplot","text":"","code":"adiv_boxplot(   biom,   x = NULL,   adiv = \"Shannon\",   layers = \"bld\",   color.by = NULL,   pattern.by = NULL,   shape.by = NULL,   facet.by = NULL,   limit.by = NULL,   flip = FALSE,   stripe = NULL,   p.adj = \"fdr\",   p.label = 0.05,   ci = \"ci\",   level = 0.95,   outliers = NULL,   xlab.angle = \"auto\",   caption = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize alpha diversity with boxplots. — adiv_boxplot","text":"biom rbiom-class object, data coercible as_rbiom(). x categorical metadata column name use x-axis. default, NULL, groups samples single category. adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Default: \"Shannon\"  Multiple values allowed. Non-ambiguous abbreviations allowed. layers \"bar\", \"box\" (\"x\"), \"violin\", \"dot\", \"strip\", \"crossbar\", \"errorbar\", \"linerange\", \"pointrange\". Single letter abbreviations also accepted. instance, c(\"box\", \"dot\") equivalent c(\"x\", \"d\") \"xd\". See vignette(\"boxplots\") examples . Default: \"bld\". color., pattern., shape., facet., limit.Metadata columns use aesthetics partitioning. Default: NULL flip Transpose axes, taxa present rows instead columns. Default: FALSE stripe Shade every x position. Default: flip p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" p.label Minimum adjusted p-value display plot bracket. p.label = 0.05 -  Show p-values <= 0.05. p.label = 0 -  show p-values plot. p.label = 1 -  Show p-values plot. numeric vector one value provided, used breaks asterisk notation. Default: 0.05 ci calculate min/max crossbar, errorbar, linerange, pointrange layers. Options : \"ci\" (confidence interval), \"range\", \"sd\" (standard deviation), \"se\" (standard error), \"mad\" (median absolute deviation). center mark crossbar pointrange represents mean, except code\"mad\" case represents median. Default: \"ci\" level confidence level calculating confidence interval. Default: 0.95 outliers Show boxplot outliers? TRUE always show. FALSE always hide. NULL hide overlaying dot strip chart.  Default: NULL xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". caption Add methodology caption beneath plot. Default: TRUE ... Parameters matched formal arguments ggplot2 functions. Prefixing parameter names layer name ensures particular parameter passed , , layer. instance, dot.size = 2 d.size = 2 ensures dotplot layer size set 2. special prefix pt. control dot strip layers.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize alpha diversity with boxplots. — adiv_boxplot","text":"ggplot2 plot.  computed data points, statistics, ggplot command available $data, $stats, $code, respectively.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/adiv_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize alpha diversity with boxplots. — adiv_boxplot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          adiv_boxplot(biom, x=\"Sex\", adiv=c(\"otu\", \"shan\"), color.by=\"Body Site\")           adiv_boxplot(biom, x=\"body\", adiv=\".all\", layers=\"p\", color.by=\"sex\", flip=TRUE)           adiv_boxplot(biom, x=\"Body Site\", color.by=\"Body Site\")                # Each plot object includes additional information.     fig <- adiv_boxplot(biom, x=\"Body Site\")          ## Computed Data Points -------------------     fig$data #> # A tibble: 49 × 6 #>    .sample .depth .adiv      .y `Body Site`    .group         #>  * <chr>    <dbl> <fct>   <dbl> <fct>          <chr>          #>  1 HMP01     1183 Shannon  1.76 Buccal mucosa  Buccal mucosa  #>  2 HMP02     1183 Shannon  2.60 Buccal mucosa  Buccal mucosa  #>  3 HMP03     1183 Shannon  2.92 Saliva         Saliva         #>  4 HMP04     1183 Shannon  3.26 Saliva         Saliva         #>  5 HMP05     1183 Shannon  1.40 Buccal mucosa  Buccal mucosa  #>  6 HMP06     1183 Shannon  3.03 Saliva         Saliva         #>  7 HMP07     1183 Shannon  1.24 Buccal mucosa  Buccal mucosa  #>  8 HMP08     1183 Shannon  2.49 Saliva         Saliva         #>  9 HMP09     1183 Shannon  3.56 Saliva         Saliva         #> 10 HMP10     1183 Shannon  1.72 Anterior nares Anterior nares #> # ℹ 39 more rows          ## Statistics Table -----------------------     fig$stats #> # Test:     wilcox.test(.y ~ `Body Site`). #> # A tibble: 10 × 8 #>    `Body Site`                  .n .stat .estimate .lower .upper  .p.val  .adj.p #>    <fct>                     <dbl> <dbl>     <dbl>  <dbl>  <dbl>   <dbl>   <dbl> #>  1 Anterior nares - Saliva      20     0   -1.54   -1.87  -1.31  1.08e-5 4.34e-5 #>  2 Mid vagina - Saliva          20     0   -2.71   -3.04  -2.41  1.08e-5 4.34e-5 #>  3 Anterior nares - Stool       19     0   -1.09   -1.35  -0.783 2.17e-5 4.34e-5 #>  4 Buccal mucosa - Saliva       20     1   -1.68   -2.19  -0.982 2.17e-5 4.34e-5 #>  5 Mid vagina - Stool           19     0   -2.23   -2.52  -1.93  2.17e-5 4.34e-5 #>  6 Buccal mucosa - Stool        19     8   -1.16   -1.7   -0.447 1.45e-3 1.87e-3 #>  7 Anterior nares - Mid vag…    20    90    1.16    0.771  1.56  1.5 e-3 1.87e-3 #>  8 Buccal mucosa - Mid vagi…    20    90    1.07    0.381  1.69  1.5 e-3 1.87e-3 #>  9 Saliva - Stool               19    80    0.526   0.186  0.824 2.99e-3 3.32e-3 #> 10 Anterior nares - Buccal …    20    51    0.0129 -0.515  0.584 9.71e-1 9.71e-1          ## ggplot2 Command ------------------------     fig$code #> Error in print.rbiom_code(x): object 'x' not found"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"Visualize alpha diversity scatterplots trendlines.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"","code":"adiv_corrplot(   biom,   x,   adiv = \"Shannon\",   layers = \"t\",   color.by = NULL,   facet.by = NULL,   limit.by = NULL,   test = \"trends\",   model = \"lm\",   p.adj = \"fdr\",   level = 0.95,   caption = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"biom rbiom-class object, data coercible as_rbiom(). x numeric metadata field use x-axis. Required. adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Default: \"Shannon\"  Multiple values allowed. Non-ambiguous abbreviations allowed. layers \"trend\", \"scatter\". Single letter abbreviations also accepted. instance, c(\"trend\", \"scatter\") equivalent c(\"t\", \"s\") \"ts\". See vignette(\"corrplots\") examples . Default: \"t\". color., facet., limit.Metadata columns use aesthetics partitioning. See details. Default: NULL test statistic interest. overview options can found \"Statistical Tests\" section . One \"predict\", \"terms\", \"fit\", \"means\", \"trends\", \"es_means\", \"es_trends\", \"pw_means\", \"pw_trends\". Default: \"trends\" model type trend model fit data. Options : \"lm\" (linear), \"log\" (logarithmic), \"gam\" (generalized additive). See \"Model Options\" section additional details. Default: \"lm\" p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" level confidence level calculating confidence interval. Default: 0.95 caption Add methodology caption beneath plot. Default: TRUE ... Additional parameters pass along ggplot2 functions. Prefix parameter name either t. s./pt. ensure gets passed () geom_smooth geom_point, respectively. instance, s.size = 2 ensures scatterplot points size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"ggplot2 plot.  computed data points, statistics, ggplot command available $data, $stats, $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"statistical-tests","dir":"Reference","previous_headings":"","what":"Statistical Tests","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"\"predict\" -  Augments original data fitted information. See broom::augment.lm(). \"terms\" -  Summary information model's terms, including p-value, r-squared, AIC, BIC, confidence interval level. See broom::tidy.lm(). \"fit\" -  Goodness fit measures, p-values, overall model. See broom::glance.lm(). \"means\" -  estimated marginal mean (EMM) stat.group, along confidence intervals (CI), standard errors (SE), t-ratios, p-values testing mean = zero. See emmeans::emmeans() emmeans::summary.emmGrid(). \"trends\" -  trendline slope stat.group, along CI SE p-value testing slope = zero. See emmeans::emtrends() emmeans::summary.emmGrid(). \"pw_means\" -  Pairwise means. stat.groups compared difference means estimated along SE, t-ratios, p-values testing two means . See emmeans::pairs.emmGrid(). \"pw_trends\" -  Pairwise trends. , comparing trendline slopes instead means. \"es_means\" -  Effect sizes pairwise differences means, including SE CI. See emmeans::eff_size(). \"es_trends\" -  Effect sizes pairwise differences slopes, including SE CI. See emmeans::eff_size().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"model-options","dir":"Reference","previous_headings":"","what":"Model Options","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"predefined options : \"lm\" -   Linear model: stats::lm(formula = y ~ x).) \"log\" -  Logarithmic model: stats::lm(formula = y ~ log(x)). \"gam\" -  Generalized additive model: mgcv::gam(formula = y ~ s(x, bs = \"cs\"), method = \"REML\"). can alternatively provide list length two first element character vector length 1 naming function, second element list arguments pass function. One function's arguments must named 'formula'. example, model = list(\"stats::lm\", list(formula = y ~ x)).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"aesthetics-and-partitions","dir":"Reference","previous_headings":"","what":"Aesthetics and Partitions","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"Metadata can used flexibly subset, partition, apply aesthetics creating plot. Common use cases provided . thorough documentation available https://cmmr.github.io/rbiom. color.- metadata column. (Max 1) facet.- categorical metadata column(s). limit.- metadata column(s). built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". available numeric palette names : \"reds\", \"oranges\", \"greens\", \"purples\", \"grays\", \"acton\", \"bamako\", \"batlow\", \"bilbao\", \"buda\", \"davos\", \"devon\", \"grayC\", \"hawaii\", \"imola\", \"lajolla\", \"lapaz\", \"nuuk\", \"oslo\", \"tokyo\", \"turku\", \"bam\", \"berlin\", \"broc\", \"cork\", \"lisbon\", \"roma\", \"tofino\", \"vanimo\", \"vik\"","code":"## Colors ----------------------------   color.by = \"Body Site\"   color.by = list('Body Site' = \"bright\")   color.by = list('Body Site' = c(\"Stool\", \"Saliva\"))   color.by = list('Body Site' = list('values' = c(\"Stool\", \"Saliva\"), 'colors' = \"bright\"))   color.by = list('Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"))      ## Facets ----------------------------   facet.by = \"Body Site\"   facet.by = c(\"Body Site\", \"Sex\")   facet.by = list('Body Site' = c(\"Stool\", \"Saliva\"), \"Sex\")      ## Limits ----------------------------   limit.by = list('Sex' = \"Male\", 'Age' = c(20,40))   limit.by = list('Body Site' = c(\"Saliva\", \"Anterior nares\"), 'Age' = c(NA,35))"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)     adiv_corrplot(biom, \"age\", color.by=\"body\", adiv=c(\"sha\", \"otu\"), facet.by=\"sex\")"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","title":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","text":"Create matrix samples x alpha diversity metrics.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","text":"","code":"adiv_matrix(biom, rarefy = FALSE)"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","text":"biom rbiom-class object, data coercible as_rbiom(). rarefy Control /whether rarefactions done prior alpha diversity computations. Options : FALSE -  Use sample's current set observations without applying rarefaction. TRUE -  Automatically select apply single rarefaction. integer -  Rarefy specified depth. Default: FALSE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","text":"numeric matrix samples rows columns named Depth, OTUs, Shannon, Chao1, Simpson, InvSimpson.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","text":"","code":"library(rbiom)           biom <- hmp50$clone()     biom$metadata %<>% head()          adiv_matrix(biom) #>       Depth OTUs  Shannon     Chao1   Simpson InvSimpson #> HMP01  1660   49 1.741153  59.08333 0.5668414   2.308623 #> HMP02  1371   75 2.587403 104.38889 0.8133914   5.358811 #> HMP03  1353   75 2.950982  90.04167 0.8936622   9.403996 #> HMP04  1895   83 3.255785  93.32143 0.9323645  14.785121 #> HMP05  3939   67 1.462651 127.75000 0.5252255   2.106263 #> HMP06  4150  105 3.087615 131.88889 0.9103916  11.159668"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Test alpha diversity differences for significance. — adiv_stats","title":"Test alpha diversity differences for significance. — adiv_stats","text":"Test alpha diversity differences significance.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test alpha diversity differences for significance. — adiv_stats","text":"","code":"adiv_stats(   biom,   stat.by = NULL,   regr = NULL,   adiv = \"Shannon\",   test = ifelse(is.null(regr), \"means\", \"trends\"),   model = \"lm\",   split.by = NULL,   level = 0.95,   p.adj = \"fdr\" )"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test alpha diversity differences for significance. — adiv_stats","text":"biom rbiom-class object, data coercible as_rbiom(). stat.categorical metadata field defining statistical groups. Required. regr run regression analysis, set regr numeric metadata field \"x-axis\" values. Leaving regr=NULL generate boxplot-like statistics; non-NULL, corrplot-like statistics returned. Default: NULL adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Default: \"Shannon\"  Multiple values allowed. Non-ambiguous abbreviations allowed. test statistic interest. overview options can found \"Statistical Tests\" section . One \"predict\", \"terms\", \"fit\", \"means\", \"trends\", \"es_means\", \"es_trends\", \"pw_means\", \"pw_trends\". Default: ifelse(.null(regr), \"means\", \"trends\") model type trend model fit data. Options : \"lm\" (linear), \"log\" (logarithmic), \"gam\" (generalized additive). See \"Model Options\" section additional details. Default: \"lm\" split.Name(s) metadata columns data split prior calculations. Default: NULL level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test alpha diversity differences for significance. — adiv_stats","text":"tibble data frame summary statistics. R code generating statistics $code.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":"statistical-tests","dir":"Reference","previous_headings":"","what":"Statistical Tests","title":"Test alpha diversity differences for significance. — adiv_stats","text":"regr NULL: \"means\" -  Considers groups using Kruskal-Wallis non-parametric test: stats::kruskal.test(). \"pw_means\" -  Pairwise comparison stat.groups using Wilcox rank sum (aka Mann-Whitney) non-parametric test: stats::wilcox.test(). regr NULL: \"predict\" -  Augments original data fitted information. See broom::augment.lm(). \"terms\" -  Summary information model's terms, including p-value, r-squared, AIC, BIC, confidence interval level. See broom::tidy.lm(). \"fit\" -  Goodness fit measures, p-values, overall model. See broom::glance.lm(). \"means\" -  estimated marginal mean (EMM) stat.group, along confidence intervals (CI), standard errors (SE), t-ratios, p-values testing mean = zero. See emmeans::emmeans() emmeans::summary.emmGrid(). \"trends\" -  trendline slope stat.group, along CI SE p-value testing slope = zero. See emmeans::emtrends() emmeans::summary.emmGrid(). \"pw_means\" -  Pairwise means. stat.groups compared difference means estimated along SE, t-ratios, p-values testing two means . See emmeans::pairs.emmGrid(). \"pw_trends\" -  Pairwise trends. , comparing trendline slopes instead means. \"es_means\" -  Effect sizes pairwise differences means, including SE CI. See emmeans::eff_size(). \"es_trends\" -  Effect sizes pairwise differences slopes, including SE CI. See emmeans::eff_size().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":"model-options","dir":"Reference","previous_headings":"","what":"Model Options","title":"Test alpha diversity differences for significance. — adiv_stats","text":"predefined options : \"lm\" -   Linear model: stats::lm(formula = y ~ x).) \"log\" -  Logarithmic model: stats::lm(formula = y ~ log(x)). \"gam\" -  Generalized additive model: mgcv::gam(formula = y ~ s(x, bs = \"cs\"), method = \"REML\"). can alternatively provide list length two first element character vector length 1 naming function, second element list arguments pass function. One function's arguments must named 'formula'. example, model = list(\"stats::lm\", list(formula = y ~ x)).","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test alpha diversity differences for significance. — adiv_stats","text":"","code":"library(rbiom)           biom <- rarefy(hmp50)            adiv_stats(biom, stat.by = \"Body Site\") #> # Test:     kruskal.test(.Shannon ~ `Body Site`). #> # A tibble: 1 × 5 #>      .n .stat   .df       .p.val       .adj.p #>   <int> <dbl> <int>        <dbl>        <dbl> #> 1    49  38.7     4 0.0000000804 0.0000000804            adiv_stats(biom, stat.by = \"Sex\", test = \"pw_means\") #> # Test:     wilcox.test(.Shannon ~ Sex). #> # A tibble: 1 × 8 #>   Sex              .n .stat .estimate .lower .upper .p.val .adj.p #>   <fct>         <dbl> <dbl>     <dbl>  <dbl>  <dbl>  <dbl>  <dbl> #> 1 Female - Male    49   167    -0.781  -1.44 -0.183 0.0149 0.0149            adiv_stats(biom, stat.by = \"Body Site\", regr = \"Age\") #> # Test:     Estimated marginal means of linear trends. #> # Model:    stats::lm(.Shannon ~ Age * `Body Site`) #> # A tibble: 5 × 9 #>   `Body Site`    .trend    .se   .df   .lower .upper .t.ratio .p.val .adj.p #>   <fct>           <dbl>  <dbl> <dbl>    <dbl>  <dbl>    <dbl>  <dbl>  <dbl> #> 1 Mid vagina     0.0450 0.0265    39 -0.00858 0.0985    1.70  0.0973  0.487 #> 2 Buccal mucosa  0.0661 0.0554    39 -0.0460  0.178     1.19  0.240   0.601 #> 3 Saliva         0.0228 0.0356    39 -0.0492  0.0948    0.640 0.526   0.737 #> 4 Anterior nares 0.0108 0.0266    39 -0.0430  0.0646    0.406 0.687   0.737 #> 5 Stool          0.0147 0.0434    39 -0.0731  0.103     0.339 0.737   0.737          adiv_stats(biom, stat.by = \"Body Site\", split.by = \"Sex\") #> # Test:     kruskal.test(.Shannon ~ `Body Site`). #> # A tibble: 2 × 6 #>   Sex       .n .stat   .df    .p.val   .adj.p #>   <fct>  <int> <dbl> <int>     <dbl>    <dbl> #> 1 Female    30  24.1     4 0.0000779 0.000156 #> 2 Male      19  13.8     3 0.00325   0.00325"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the alpha diversity of each sample. — adiv_table","title":"Calculate the alpha diversity of each sample. — adiv_table","text":"Calculate alpha diversity sample.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the alpha diversity of each sample. — adiv_table","text":"","code":"adiv_table(biom, rarefy = FALSE, adiv = \"Shannon\", md = \".all\")"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the alpha diversity of each sample. — adiv_table","text":"biom rbiom-class object, data coercible as_rbiom(). rarefy Control /whether rarefactions done prior alpha diversity computations. Options : FALSE -  Use sample's current set observations without applying rarefaction. TRUE -  Automatically select apply single rarefaction. \"multi\", \"multi_log\", \"multi_even\" -  Automatically select apply multiple rarefactions. \"multi\" provides \"multi_log\" low end \"multi_even\" high end. integer vector -  Rarefy specified depth(s). Default: FALSE adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Default: \"Shannon\"  Multiple values allowed. Non-ambiguous abbreviations allowed. md character vector naming metadata fields include output data frame, '.' include metadata fields. Default: '.'","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the alpha diversity of each sample. — adiv_table","text":"data frame alpha diversity values. combination sample/depth/adiv row. Column names .sample, .depth, .adiv, .diversity, followed metadata fields requested md.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/adiv_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the alpha diversity of each sample. — adiv_table","text":"","code":"library(rbiom)           # Subset to 10 samples.     biom <- slice(hmp50, 1:10)     adiv_table(biom) #> # A tibble: 10 × 8 #>    .sample .depth .adiv   .diversity   Age   BMI `Body Site`    Sex    #>    <chr>    <dbl> <fct>        <dbl> <dbl> <dbl> <fct>          <fct>  #>  1 HMP01     1660 Shannon       1.74    22    20 Buccal mucosa  Female #>  2 HMP02     1371 Shannon       2.59    24    23 Buccal mucosa  Male   #>  3 HMP03     1353 Shannon       2.95    28    26 Saliva         Male   #>  4 HMP04     1895 Shannon       3.26    25    23 Saliva         Male   #>  5 HMP05     3939 Shannon       1.46    27    24 Buccal mucosa  Female #>  6 HMP06     4150 Shannon       3.09    32    25 Saliva         Male   #>  7 HMP07     3283 Shannon       1.23    26    22 Buccal mucosa  Male   #>  8 HMP08     1695 Shannon       2.51    27    26 Saliva         Female #>  9 HMP09     2069 Shannon       3.60    33    32 Saliva         Male   #> 10 HMP10     2509 Shannon       1.75    22    20 Anterior nares Female          biom <- rarefy(biom)     adiv_table(biom, adiv = \".all\", md = NULL) #> # A tibble: 50 × 4 #>    .sample .depth .adiv .diversity #>    <fct>    <dbl> <fct>      <dbl> #>  1 HMP01     1353 OTUs          46 #>  2 HMP02     1353 OTUs          75 #>  3 HMP03     1353 OTUs          75 #>  4 HMP04     1353 OTUs          77 #>  5 HMP05     1353 OTUs          40 #>  6 HMP06     1353 OTUs          86 #>  7 HMP07     1353 OTUs          45 #>  8 HMP08     1353 OTUs          62 #>  9 HMP09     1353 OTUs          94 #> 10 HMP10     1353 OTUs          25 #> # ℹ 40 more rows"},{"path":"https://cmmr.github.io/rbiom/reference/as.list.rbiom.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an rbiom object to a base R list. — as.list.rbiom","title":"Convert an rbiom object to a base R list. — as.list.rbiom","text":"Convert rbiom object base R list.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as.list.rbiom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an rbiom object to a base R list. — as.list.rbiom","text":"","code":"# S3 method for rbiom as.list(biom)"},{"path":"https://cmmr.github.io/rbiom/reference/as.list.rbiom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an rbiom object to a base R list. — as.list.rbiom","text":"biom rbiom object, as_rbiom().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as.list.rbiom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an rbiom object to a base R list. — as.list.rbiom","text":"list names c('counts', 'metadata', 'taxonomy', 'tree', 'sequences', 'id', 'comment', 'date', 'generated_by').","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as_rbiom.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a variety of data types to an rbiom object. — as_rbiom","title":"Convert a variety of data types to an rbiom object. — as_rbiom","text":"Construct rbiom object. returned object R6 reference class. Use b <- $clone() create copies, b <- .","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as_rbiom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a variety of data types to an rbiom object. — as_rbiom","text":"","code":"as_rbiom(biom, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/as_rbiom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a variety of data types to an rbiom object. — as_rbiom","text":"biom Object can coerced rbiom-class object. example: file -  Filepath URL biom file. matrix -  abundance matrix OTUs rows samples columns. phyloseq-class object -  phyloseq Bioconductor R package. list -  counts optionally metadata, taxonomy, tree, etc (see details).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as_rbiom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a variety of data types to an rbiom object. — as_rbiom","text":"rbiom-class object. See rbiom. returned object following methods. Methods marked * can also assigned . $clone() Returns copy object. Changes made copy affect original. $counts * Get set abundance counts. Accepts matrix-like object samples column names, OTUs row names. Returns slam::simple_triplet_matrix(). $metadata * Get set sample metadata: data.frame '.sample' first column, followed mappings metadata values. $taxonomy * Get set OTU taxonomy: data.frame '.otu' first column, followed mappings higher order ranks. $tree * Get set phylogenetic tree: phylo object (read_tree()) NULL. $id,$comment * Get set arbitrary text fields. $otus,$samples,$fields,$ranks Get names OTUs, samples, metadata fields, taxonomic ranks. $n_otus,$n_samples,$n_fields,$n_ranks Get number OTUs, samples, metadata fields, taxonomic ranks. $depth Get rarefaction depth, NULL unrarefied. $date Get date/time table built (ISO 8601 formatted string). $generated_by Get package revision built table. $pkg_version Get version rbiom generated R6 object. $hash Get 128-bit hash object's contents (string).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as_rbiom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert a variety of data types to an rbiom object. — as_rbiom","text":"counts numeric matrix. Column names sample names, row names OTU names. Required. metadata data frame. Sample names column named '.sample', row names. Default: NULL taxonomy data frame. OTU names column named '.otu', row names. Default: NULL tree phylo-class object OTU names tip labels. See read_tree(). Default: NULL sequences named character vector OTU reference sequences. e.g. c(otu1 = \"atcg\", otu2 = \"attg\", ...). See read_fasta(). Default: NULL id,comment Arbitrary identifier/comment dataset. Default: \"\" ... used.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as_rbiom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a variety of data types to an rbiom object. — as_rbiom","text":"","code":"library(rbiom)          # create a simple matrix ------------------------     mtx <- matrix(       data     = floor(runif(24) * 1000),        nrow     = 6,        dimnames = list(paste0(\"OTU\", 1:6), paste0(\"Sample\", 1:4)) )     mtx #>      Sample1 Sample2 Sample3 Sample4 #> OTU1     615     208     673     688 #> OTU2     897     489     928     136 #> OTU3     819      58     146     382 #> OTU4     919     983     633     366 #> OTU5     577      68     318     750 #> OTU6     512     298     708     127          # and some sample metadata ----------------------     df <- data.frame(       .sample   = paste0(\"Sample\", 1:4),       treatment = c(\"A\", \"B\", \"A\", \"B\"),       days      = c(12, 3, 7, 8) )          # convert data set to rbiom ---------------------     biom <- as_rbiom(list(counts = mtx, metadata = df))     biom #> An rbiom object (2023-12-14) #>       4 Samples:  Sample1, Sample2, Sample3, and Sample4 #>       6 OTUs:     OTU4, OTU2, OTU1, OTU5, OTU6, and OTU3 #>       1 Ranks:    .otu #>       3 Metadata: .sample, treatment, and days #>         Tree:     <absent>"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize BIOM data with boxplots. — bdiv_boxplot","title":"Visualize BIOM data with boxplots. — bdiv_boxplot","text":"Visualize BIOM data boxplots.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize BIOM data with boxplots. — bdiv_boxplot","text":"","code":"bdiv_boxplot(   biom,   x = NULL,   bdiv = \"Bray-Curtis\",   weighted = TRUE,   tree = NULL,   layers = \"bld\",   color.by = NULL,   pattern.by = NULL,   shape.by = NULL,   facet.by = NULL,   limit.by = NULL,   within = NULL,   between = NULL,   flip = FALSE,   stripe = NULL,   p.adj = \"fdr\",   p.label = 0.05,   ci = \"ci\",   level = 0.95,   outliers = NULL,   xlab.angle = \"auto\",   caption = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize BIOM data with boxplots. — bdiv_boxplot","text":"biom rbiom-class object, data coercible as_rbiom(). x categorical metadata column name. Prefix column name == != limit comparisons within groups, respectively. default, NULL groups distances single column. bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Default: \"Bray-Curtis\"  Multiple/abbreviated values allowed. weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Default: TRUE  Multiple values allowed. tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree layers \"bar\", \"box\" (\"x\"), \"violin\", \"dot\", \"strip\", \"crossbar\", \"errorbar\", \"linerange\", \"pointrange\". Single letter abbreviations also accepted. instance, c(\"box\", \"dot\") equivalent c(\"x\", \"d\") \"xd\". See vignette(\"boxplots\") examples . Default: \"bld\". color., pattern., shape., facet., limit.Metadata columns use data partitioning. Prefix column name == != limit comparisons within groups, respectively. Default: NULL within, Metadata field(s) intra- inter- sample comparisons. Default: NULL flip Transpose axes, taxa present rows instead columns. Default: FALSE stripe Shade every x position. Default: flip p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" p.label Minimum adjusted p-value display plot bracket. p.label = 0.05 -  Show p-values <= 0.05. p.label = 0 -  show p-values plot. p.label = 1 -  Show p-values plot. numeric vector one value provided, used breaks asterisk notation. Default: 0.05 ci calculate min/max crossbar, errorbar, linerange, pointrange layers. Options : \"ci\" (confidence interval), \"range\", \"sd\" (standard deviation), \"se\" (standard error), \"mad\" (median absolute deviation). center mark crossbar pointrange represents mean, except code\"mad\" case represents median. Default: \"ci\" level confidence level calculating confidence interval. Default: 0.95 outliers Show boxplot outliers? TRUE always show. FALSE always hide. NULL hide overlaying dot strip chart.  Default: NULL xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". caption Add methodology caption beneath plot. Default: TRUE ... Parameters matched formal arguments ggplot2 functions. Prefixing parameter names layer name ensures particular parameter passed , , layer. instance, dot.size = 2 d.size = 2 ensures dotplot layer size set 2. special prefix pt. control dot strip layers.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize BIOM data with boxplots. — bdiv_boxplot","text":"ggplot2 plot.  computed data points, statistics, ggplot command available $data, $stats, $code, respectively.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize BIOM data with boxplots. — bdiv_boxplot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          bdiv_boxplot(biom, x=\"==Body Site\", bdiv=\"UniFrac\", color.by=\"Body Site\")"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_distmat.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance / dissimilarity between samples. — bdiv_distmat","title":"Distance / dissimilarity between samples. — bdiv_distmat","text":"Distance / dissimilarity samples.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_distmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance / dissimilarity between samples. — bdiv_distmat","text":"","code":"bdiv_distmat(biom, bdiv = \"Bray-Curtis\", weighted = TRUE, tree = NULL)  bdiv_table(   biom,   bdiv = \"Bray-Curtis\",   weighted = TRUE,   tree = NULL,   md = NULL,   within = NULL,   between = NULL )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_distmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance / dissimilarity between samples. — bdiv_distmat","text":"biom rbiom-class object, data coercible as_rbiom(). bdiv Beta diversity distance algorithm use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". bdiv_table() can accept multiple values. Default: \"Bray-Curtis\" weighted Take relative abundances account. weighted=FALSE, presence/absence considered. bdiv_table() can accept multiple values. Default: TRUE tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree md Include metadata output data frame? Options : NULL -  include metadata. TRUE -  Include metadata. character vector -  Include specified metadata columns. Prefix column name(s) == != limit comparisons within groups, respectively. Default: NULL within, Metadata field(s) intra- inter- sample comparisons. Default: NULL","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_distmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance / dissimilarity between samples. — bdiv_distmat","text":"bdiv_distmat() -  dist-class distance matrix. bdiv_table() -  tibble data.frame columns names .sample1, .sample2, .weighted, .bdiv, .distance, fields requested md.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_distmat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance / dissimilarity between samples. — bdiv_distmat","text":"","code":"library(rbiom)          # Subset to four samples     biom <- hmp50$clone()     biom$counts <- biom$counts[,c(\"HMP18\", \"HMP19\", \"HMP20\", \"HMP21\")]          # Return in long format with metadata     bdiv_table(biom, 'unifrac', md = c(\"Body Site\", \"Sex\")) #> # A tibble: 6 × 7 #>   .sample1 .sample2 .weighted .bdiv   .distance `Body Site`     Sex            #>   <fct>    <fct>    <lgl>     <fct>       <dbl> <fct>           <fct>          #> 1 HMP18    HMP19    TRUE      UniFrac     0.665 Saliva vs Stool Female vs Male #> 2 HMP18    HMP20    TRUE      UniFrac     0.681 Saliva vs Stool Female vs Male #> 3 HMP19    HMP20    TRUE      UniFrac     0.418 Stool           Female         #> 4 HMP18    HMP21    TRUE      UniFrac     0.717 Saliva vs Stool Male           #> 5 HMP19    HMP21    TRUE      UniFrac     0.390 Stool           Female vs Male #> 6 HMP20    HMP21    TRUE      UniFrac     0.149 Stool           Female vs Male          # Only look at distances among the stool samples     bdiv_table(biom, 'unifrac', md = c(\"==Body Site\", \"Sex\")) #> # A tibble: 3 × 7 #>   .sample1 .sample2 .weighted .bdiv   .distance `Body Site` Sex            #>   <fct>    <fct>    <lgl>     <fct>       <dbl> <fct>       <fct>          #> 1 HMP19    HMP20    TRUE      UniFrac     0.418 Stool       Female         #> 2 HMP19    HMP21    TRUE      UniFrac     0.390 Stool       Female vs Male #> 3 HMP20    HMP21    TRUE      UniFrac     0.149 Stool       Female vs Male          # Or between males and females     bdiv_table(biom, 'unifrac', md = c(\"Body Site\", \"!=Sex\")) #> # A tibble: 4 × 7 #>   .sample1 .sample2 .weighted .bdiv   .distance `Body Site`     Sex            #>   <fct>    <fct>    <lgl>     <fct>       <dbl> <fct>           <fct>          #> 1 HMP18    HMP19    TRUE      UniFrac     0.665 Saliva vs Stool Female vs Male #> 2 HMP18    HMP20    TRUE      UniFrac     0.681 Saliva vs Stool Female vs Male #> 3 HMP19    HMP21    TRUE      UniFrac     0.390 Stool           Female vs Male #> 4 HMP20    HMP21    TRUE      UniFrac     0.149 Stool           Female vs Male          # Distance matrix for all samples     dm <- bdiv_distmat(biom, 'unifrac')     as.matrix(dm) #>           HMP18     HMP19     HMP20     HMP21 #> HMP18 0.0000000 0.6651627 0.6810017 0.7170374 #> HMP19 0.6651627 0.0000000 0.4183059 0.3896741 #> HMP20 0.6810017 0.4183059 0.0000000 0.1490926 #> HMP21 0.7170374 0.3896741 0.1490926 0.0000000     plot(hclust(dm))"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Display beta diversities in an all vs all grid. — bdiv_heatmap","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"Display beta diversities vs grid.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"","code":"bdiv_heatmap(   biom,   bdiv = \"Bray-Curtis\",   weighted = TRUE,   tree = NULL,   grid = list(label = \"Distance\", colors = \"-bilbao\"),   color.by = NULL,   order.by = NULL,   limit.by = NULL,   label = TRUE,   label_size = NULL,   rescale = \"none\",   ratio = 1,   clust = \"complete\",   trees = TRUE,   tree_height = NULL,   track_height = NULL,   legend = \"right\",   xlab.angle = \"auto\",   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"biom rbiom-class object, data coercible as_rbiom(). bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Default: \"Bray-Curtis\"  Multiple/abbreviated values allowed. weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Default: TRUE  Multiple values allowed. tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree grid Color palette name, list entries label, colors, range, bins, na.color, /guide. See Track Definitions section details. Default: list(label = \"Distance\", colors = \"-bilbao\"). color.Add annotation tracks metadata column(s). See \"Annotation Tracks\" section details. Default: NULL order.metadata column(s) use ordering samples across x y axes. Overrides clust argument. See \"Ordering Limiting\" section details. Default: NULL limit.Metadata definition(s) use sample subsetting prior calculations. See \"Ordering Limiting\" section details. Default: NULL label Label matrix rows columns. can supply list logical vector length two control row labels column labels separately, example label = c(rows = TRUE, cols = FALSE), simply label = c(T, F). valid options \"rows\", \"cols\", \"\", \"bottom\", \"right\", \"none\". Default: TRUE. label_size font size use row column labels. can supply numeric vector length two control row label sizes column label sizes separately, example c(rows = 20, cols = 8), simply c(20, 8). Default: NULL, computes: pmax(8, pmin(20, 100 / dim(mtx))). rescale Rescale rows columns common min/max. Options: \"none\", \"rows\", \"cols\". Default: \"none\". ratio Height/width ratio entire grid. Default: 1 (square). clust Clustering algorithm reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example clust = c(rows = \"complete\", cols = NA), simply clust = c(\"complete\", NA). Options : FALSE NA -  Disable reordering. hclust class object E.g. stats::hclust(). method name -  \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\", \"centroid\". Default: \"complete\". trees Draw dendrogram rows (left) columns (top). can supply list logical vector length two control row tree column tree separately, example trees = c(rows = T, cols = F), simply trees = c(T, F). valid options \"rows\", \"cols\", \"\", \"left\", \"top\", \"none\". Default: TRUE. tree_height, track_height height dendrogram annotation tracks multiples (fractions) smaller dimension grid cell size. Use numeric vector length two assign c(top, left) independently. Default: NULL, computes: tree_height = sqrt(min(dim(mtx))), track_height = tree_height / 4. legend place legend. Options : \"right\" \"bottom\". Default: \"right\". xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". ... Additional arguments pass ggplot2::theme(). example, labs.title = \"Plot Title\".","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"ggplot2 plot.  computed data points ggplot command available $data $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":"annotation-tracks","dir":"Reference","previous_headings":"","what":"Annotation Tracks","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"Metadata can displayed colored tracks heatmap. Common use cases provided , thorough documentation available https://cmmr.github.io/rbiom . following entries track definitions understood: colors -  pre-defined palette name custom set colors map . range -  c(min,max) use scale values. label -  Label track. Defaults name list element. side -  Options \"top\" (default) \"left\". na.color -  color use NA values. bins -  Bin gradient many bins/steps. guide -  list arguments guide_colorbar() guide_legend(). built-color palettes colorblind-friendly. Categorical palette names: \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Numeric palette names: \"reds\", \"oranges\", \"greens\", \"purples\", \"grays\", \"acton\", \"bamako\", \"batlow\", \"bilbao\", \"buda\", \"davos\", \"devon\", \"grayC\", \"hawaii\", \"imola\", \"lajolla\", \"lapaz\", \"nuuk\", \"oslo\", \"tokyo\", \"turku\", \"bam\", \"berlin\", \"broc\", \"cork\", \"lisbon\", \"roma\", \"tofino\", \"vanimo\", \"vik\".","code":"## Categorical ---------------------------- color.by = \"Body Site\" color.by = list('Body Site' = \"bright\") color.by = list('Body Site' = c(\"Stool\", \"Saliva\"), 'colors' = \"bright\") color.by = list('Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"))  ## Numeric -------------------------------- color.by = \"Age\" color.by = list('Age' = \"reds\") color.by = list('Age' = c(20,NA), 'colors' = \"reds\") # at least 20 years old color.by = list('Age' = c(20,40)) # between 20 and 40 years old (inclusive)  ## Multiple Tracks ------------------------ color.by = c(\"Body Site\", \"Age\") color.by = list('Body Site' = \"bright\", 'Age' = \"reds\") color.by = list(   'Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"),   'Age'       = list(range = c(20,40), 'colors' = \"reds\") )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":"ordering-and-limiting","dir":"Reference","previous_headings":"","what":"Ordering and Limiting","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"order.controls metadata column(s) used arrange samples plot. also enables subsetting particular set range values. Prefix column name - arrange values descending order rather ascending. limit.used specify subset samples without side-effects aesthetics. especially useful limiting data single categorical metadata value. Unlike *.parameters, limit.must always named list().","code":"## Categorical ---------------------------- order.by = \"Body Site\" order.by = list('Body Site' = c(\"Stool\", \"Saliva\"))  ## Numeric -------------------------------- order.by = \"-Age\" order.by = list('Age'  = c(20,NA)) # at least 20 years old order.by = list('-Age' = c(20,40)) # between 20 and 40 years old (inclusive)  ## Multiple / Mixed ----------------------- order.by = c(\"-Body Site\", \"Age\") order.by = list(\"Body Site\", '-Age' = c(20,40)) ## Categorical ---------------------------- limit.by = list('Sex' = \"Male\")  ## Numeric -------------------------------- limit.by = list('Age' = c(20,NA)) # at least 20 years old limit.by = list('Age' = c(20,40)) # between 20 and 40 years old (inclusive)  ## Multiple / Mixed ----------------------- limit.by = list(   'Sex'       = \"Male\",    'Body Site' = c(\"Stool\", \"Saliva\")   'Age'       = c(20,40) )"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"","code":"library(rbiom)          # Keep and rarefy the 10 most deeply sequenced samples.     hmp10 <- rarefy(hmp50, n = 10) #> Error in rarefy_cols(mtx = biom$counts, depth = depth, n = n, seed = seed): ✖ `n` must between -1 and 1, or an integer, not 10.          bdiv_heatmap(hmp10, color.by=c(\"Body Site\", \"Age\")) #> Error in eval(expr, envir, enclos): object 'hmp10' not found          bdiv_heatmap(hmp10, bdiv=\"uni\", weighted=c(T,F), color.by=\"sex\") #> Error in eval(expr, envir, enclos): object 'hmp10' not found"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","title":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","text":"Ordinate samples taxa 2D plane based beta diversity distances.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","text":"","code":"bdiv_ord_plot(   biom,   bdiv = \"Bray-Curtis\",   ord = \"UMAP\",   weighted = TRUE,   layers = \"petm\",   color.by = NULL,   shape.by = NULL,   facet.by = NULL,   limit.by = NULL,   tree = NULL,   test = \"adonis2\",   seed = 0,   permutations = 999,   rank = -1,   taxa = 4,   p.top = Inf,   p.adj = \"fdr\",   unc = \"singly\",   caption = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","text":"biom rbiom-class object, data coercible as_rbiom(). bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Default: \"Bray-Curtis\"  Multiple/abbreviated values allowed. ord Method reducing dimensionality. Options : \"UMAP\" -  Uniform manifold approximation projection; uwot::umap(). \"PCoA\" -  Principal coordinate analysis; ape::pcoa(). \"NMDS\" -  Nonmetric multidimensional scaling; vegan::metaMDS(). \"tSNE\" -  t-distributed stochastic neighbor embedding; tsne::tsne(). Default: \"UMAP\"  Multiple values allowed. Non-ambiguous abbreviations allowed. weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Default: TRUE  Multiple values allowed. layers graphical elements use drawing. Options : point, spider, ellipse, name samples, mean, taxon, arrow taxa. Single letter abbreviations also accepted. instance, c(\"point\", \"ellipse\") equivalent c(\"p\", \"e\") \"pe\". See vignette(\"ordination\") vignette examples . Default: \"pe\" color., shape., facet., limit.Metadata columns use aesthetics partitioning. See details. Default: NULL tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree test Permutational test accessing significance. Options : \"adonis2\" -  Permutational MANOVA; vegan::adonis2(). \"mrpp\" -  Multiple response permutation procedure; vegan::mrpp(). Default: \"adonis2\"  Abbreviations allowed. seed Random seed permutations. Default: 0 permutations Number random permutations use. Default: 999 rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. p.top display taxa significant differences abundance. p.top >= 1, p.top significant taxa displayed. p.top less one, taxa adjusted p-value <= p.top displayed. Recommended used combination taxa parameter set lower bound mean abundance considered taxa. Default: Inf p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" -  Replaces OTU name. \"grouped\" -  Replaces higher rank's name. \"drop\" -  Excludes result. \"asis\" -  check/modify taxa names. Default: \"singly\"  Abbreviations allowed. caption Add methodology caption beneath plot. Default: TRUE ... Parameters layer geoms (e.g. ggplot2::geom_point()). Prefixing parameter names layer name ensures particular parameter passed , , layer. instance, point.size = 2 p.size = 2 ensures points size set 2. Points can also controlled pt. prefix.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","text":"ggplot2 plot. computed sample coordinates ggplot command available $data $code respectively. color.given, $stats $stats$code set. rank given, $data$taxa_coords, $taxa_stats, $taxa_stats$code set.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          bdiv_ord_plot(biom, layers=\"pemt\", color.by=\"Body Site\", rank=\"g\")"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","title":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","text":"biplot parameters (taxa, unc, p.top, p.adj) effect rank NULL.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","text":"","code":"bdiv_ord_table(   biom,   bdiv = \"Bray-Curtis\",   ord = \"UMAP\",   weighted = TRUE,   md = NULL,   k = 2,   split.by = NULL,   stat.by = NULL,   tree = NULL,   within = NULL,   between = NULL,   test = \"adonis2\",   seed = 0,   permutations = 999,   rank = -1,   taxa = 5,   p.top = Inf,   p.adj = \"fdr\",   unc = \"singly\",   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","text":"biom rbiom-class object, data coercible as_rbiom(). bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Default: \"Bray-Curtis\"  Multiple/abbreviated values allowed. ord Method reducing dimensionality. Options : \"UMAP\" -  Uniform manifold approximation projection; uwot::umap(). \"PCoA\" -  Principal coordinate analysis; ape::pcoa(). \"NMDS\" -  Nonmetric multidimensional scaling; vegan::metaMDS(). \"tSNE\" -  t-distributed stochastic neighbor embedding; tsne::tsne(). Default: \"UMAP\"  Multiple values allowed. Non-ambiguous abbreviations allowed. weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Default: TRUE  Multiple values allowed. md character vector naming metadata fields include output data frame, '.' include metadata fields. Default: '.' k Number ordination dimensions return. Either 2L 3L. Default: 2L split.Name(s) metadata columns data split prior calculations. Default: NULL stat.categorical numeric metadata field statistics calculated. Required. tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree within, Metadata field(s) intra- inter- sample comparisons. Default: NULL test Permutational test accessing significance. Options : \"adonis2\" -  Permutational MANOVA; vegan::adonis2(). \"mrpp\" -  Multiple response permutation procedure; vegan::mrpp(). Default: \"adonis2\"  Abbreviations allowed. seed Random seed permutations. Default: 0 permutations Number random permutations use. Default: 999 rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. p.top display taxa significant differences abundance. p.top >= 1, p.top significant taxa displayed. p.top less one, taxa adjusted p-value <= p.top displayed. Recommended used combination taxa parameter set lower bound mean abundance considered taxa. Default: Inf p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" -  Replaces OTU name. \"grouped\" -  Replaces higher rank's name. \"drop\" -  Excludes result. \"asis\" -  check/modify taxa names. Default: \"singly\"  Abbreviations allowed. ... Additional arguments pass uwot::umap(), ape::pcoa(), vegan::metaMDS(), tsne::tsne().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","text":"data.frame columns .sample, .weighted, .bdiv, .ord, .x, .y, (optionally) .z. columns given md, split., stat.included well. stat.given, $stats $stats$code) set. rank given, $taxa_coords, $taxa_stats, $taxa_stats$code set.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","text":"","code":"library(rbiom)          ord <- bdiv_ord_table(hmp50, \"bray\", \"pcoa\", stat.by=\"Body Site\", rank=\"g\")     head(ord) #> # A tibble: 6 × 7 #>   .weighted .bdiv       .ord  .sample     .x       .y `Body Site`   #>   <lgl>     <chr>       <fct> <chr>    <dbl>    <dbl> <fct>         #> 1 TRUE      Bray-Curtis PCoA  HMP01   -0.387 -0.00895 Buccal mucosa #> 2 TRUE      Bray-Curtis PCoA  HMP02   -0.461 -0.0135  Buccal mucosa #> 3 TRUE      Bray-Curtis PCoA  HMP03   -0.407 -0.0143  Saliva        #> 4 TRUE      Bray-Curtis PCoA  HMP04   -0.378 -0.0123  Saliva        #> 5 TRUE      Bray-Curtis PCoA  HMP05   -0.452 -0.0114  Buccal mucosa #> 6 TRUE      Bray-Curtis PCoA  HMP06   -0.411 -0.0123  Saliva                 ord$stats #> # Test:     adonis2 ~ `Body Site`. 999 permutations. #> # A tibble: 1 × 7 #>   .weighted .bdiv          .n .stat    .z .p.val .adj.p #>   <lgl>     <chr>       <int> <dbl> <dbl>  <dbl>  <dbl> #> 1 TRUE      Bray-Curtis    50  19.2  72.2  0.001  0.001          ord$taxa_stats #> # Test:     adonis2 ~ taxa. 999 permutations. #> # A tibble: 5 × 9 #>   .weighted .bdiv       .rank .taxa                .n .stat    .z .p.val .adj.p #>   <lgl>     <chr>       <fct> <fct>             <int> <dbl> <dbl>  <dbl>  <dbl> #> 1 TRUE      Bray-Curtis Genus Lactobacillus        50  8.62  16.8  0.001  0.001 #> 2 TRUE      Bray-Curtis Genus Streptococcus        50 10.1   19.5  0.001  0.001 #> 3 TRUE      Bray-Curtis Genus Bacteroides          50  8.72  16.7  0.001  0.001 #> 4 TRUE      Bray-Curtis Genus Corynebacterium 1    50  8.53  16.0  0.001  0.001 #> 5 TRUE      Bray-Curtis Genus Haemophilus          50  6.56  12.3  0.001  0.001"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Test beta diversity vs categorical or numeric metadata. — bdiv_stats","title":"Test beta diversity vs categorical or numeric metadata. — bdiv_stats","text":"Test beta diversity vs categorical numeric metadata.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test beta diversity vs categorical or numeric metadata. — bdiv_stats","text":"","code":"bdiv_stats(   biom,   stat.by,   bdiv = \"Bray-Curtis\",   weighted = TRUE,   tree = NULL,   test = \"adonis2\",   within = NULL,   between = NULL,   split.by = NULL,   seed = 0,   permutations = 999,   p.adj = \"fdr\" )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test beta diversity vs categorical or numeric metadata. — bdiv_stats","text":"biom rbiom-class object, data coercible as_rbiom(). stat.categorical numeric metadata field statistics calculated. Required. bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Default: \"Bray-Curtis\"  Multiple/abbreviated values allowed. weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Default: TRUE  Multiple values allowed. tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree test Permutational test accessing significance. Options : \"adonis2\" -  Permutational MANOVA; vegan::adonis2(). \"mrpp\" -  Multiple response permutation procedure; vegan::mrpp(). Default: \"adonis2\"  Abbreviations allowed. within, Metadata field(s) intra- inter- sample comparisons. Default: NULL split.Name(s) metadata columns data split prior calculations. Default: NULL seed Random seed permutations. Default: 0 permutations Number random permutations use. Default: 999 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test beta diversity vs categorical or numeric metadata. — bdiv_stats","text":"tibble data frame summary statistics. R code generating statistics $code.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test beta diversity vs categorical or numeric metadata. — bdiv_stats","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          bdiv_stats(biom, stat.by = \"Body Site\", split.by = \"Sex\") #> # Test:     vegan::adonis2(~ `Body Site`, permutations = 999) #> # A tibble: 2 × 8 #>   Sex    .weighted .bdiv          .n .stat    .z .p.val .adj.p #>   <fct>  <lgl>     <chr>       <int> <dbl> <dbl>  <dbl>  <dbl> #> 1 Female TRUE      Bray-Curtis    30  10.6  35.3  0.001  0.001 #> 2 Male   TRUE      Bray-Curtis    19  12.1  30.5  0.001  0.001            bdiv_stats(biom, stat.by = \"BMI\", bdiv = c(\"bray\", \"unifrac\")) #> # Test:     vegan::adonis2(~ BMI, permutations = 999) #> # A tibble: 2 × 7 #>   .weighted .bdiv          .n .stat      .z .p.val .adj.p #>   <lgl>     <chr>       <int> <dbl>   <dbl>  <dbl>  <dbl> #> 1 TRUE      UniFrac        49 1.80   1.22    0.106  0.212 #> 2 TRUE      Bray-Curtis    49 0.973 -0.0278  0.431  0.431          # The R code used to compute the stats is in $code.     tbl <- bdiv_stats(biom, stat.by = \"Sex\")     tbl$code #> Error in print.rbiom_code(x): object 'x' not found"},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to each subset of an rbiom object. — bdply","title":"Apply a function to each subset of an rbiom object. — bdply","text":"blply() bdply() let divide biom dataset smaller pieces, run function smaller rbiom objects, return results data.frame list.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to each subset of an rbiom object. — bdply","text":"","code":"bdply(biom, vars, FUN, ..., iters = list(), prefix = FALSE)  blply(biom, vars, FUN, ..., iters = list(), prefix = FALSE)"},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to each subset of an rbiom object. — bdply","text":"biom rbiom-class object, data coercible as_rbiom(). vars character vector metadata fields. unique combination values columns used create subsetted rbiom object pass FUN. NULL, biom passed FUN unaltered. Unambiguous abbreviations metadata fields also accepted. FUN function execute subset biom. bdply(), returned value coerced data.frame. blply(), returned value unmodified. ... Additional arguments pass FUN. iters named list values pass FUN. Unlike ..., iterated combinations. Default: list() prefix TRUE, prefixes names iters '.' final data.frame 'split_labels' attribute. Default: FALSE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function to each subset of an rbiom object. — bdply","text":"bdply(), tibble data.frame comprising accumulated outputs FUN, along columns specified vars iters. blply(), named list details vars iters attr(,\"split_labels\").","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a function to each subset of an rbiom object. — bdply","text":"can also specify additional variables function iterate unique combinations. Calls plyr::ddply() plyr::dlply() internally.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function to each subset of an rbiom object. — bdply","text":"","code":"library(rbiom)          # bdply ----------------------------------------------------          bdply(hmp50, \"Sex\", `$`, 'n_samples') #> # A tibble: 2 × 2 #>   Sex       V1 #>   <fct>  <int> #> 1 Female    30 #> 2 Male      20          blply(hmp50, \"Sex\", `$`, 'n_samples') %>% unlist() #> Female   Male  #>     30     20           bdply(hmp50, c(\"Body Site\", \"Sex\"), function (b) {       adm <- adiv_matrix(b)[,c(\"Shannon\", \"Simpson\")]       apply(adm, 2L, mean)     }) #> # A tibble: 9 × 4 #>   Sex    `Body Site`    Shannon Simpson #>   <fct>  <fct>            <dbl>   <dbl> #> 1 Female Anterior nares   1.43    0.681 #> 2 Female Buccal mucosa    1.17    0.408 #> 3 Female Mid vagina       0.407   0.167 #> 4 Female Saliva           2.93    0.893 #> 5 Female Stool            2.43    0.850 #> 6 Male   Anterior nares   1.51    0.665 #> 7 Male   Buccal mucosa    1.71    0.602 #> 8 Male   Saliva           3.17    0.913 #> 9 Male   Stool            2.51    0.835          iters <- list(w = c(TRUE, FALSE), d = c(\"bray\", \"euclid\"))     bdply(hmp50, \"Sex\", iters = iters, function (b, w, d) {       r <- range(bdiv_distmat(biom = b, bdiv = d, weighted = w))       round(data.frame(min = r[[1]], max = r[[2]]))     }) #> # A tibble: 8 × 5 #>   Sex    w     d        min   max #>   <fct>  <lgl> <chr>  <dbl> <dbl> #> 1 Female TRUE  bray       0     1 #> 2 Female FALSE bray       0     1 #> 3 Female TRUE  euclid   123 17185 #> 4 Female FALSE euclid     3    12 #> 5 Male   TRUE  bray       0     1 #> 6 Male   FALSE bray       0     1 #> 7 Male   TRUE  euclid   292 11855 #> 8 Male   FALSE euclid     5    14"},{"path":"https://cmmr.github.io/rbiom/reference/biom_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine several rbiom objects into one. — biom_merge","title":"Combine several rbiom objects into one. — biom_merge","text":"WARNING: generally ill-advised merge BIOM datasets, OTUs mappings dependent upstream clustering equivalent BIOM files.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/biom_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine several rbiom objects into one. — biom_merge","text":"","code":"biom_merge(...)"},{"path":"https://cmmr.github.io/rbiom/reference/biom_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine several rbiom objects into one. — biom_merge","text":"... number rbiom objects (e.g. read_biom()), lists rbiom objects, valid arguments src parameter read_biom() (instance file names).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/biom_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine several rbiom objects into one. — biom_merge","text":"rbiom object.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/biom_merge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine several rbiom objects into one. — biom_merge","text":"","code":"library(rbiom)          b1 <- as_rbiom(hmp50$counts[,1:4])     b2 <- as_rbiom(hmp50$counts[,5:8])          biom <- biom_merge(b1, b2)     print(biom) #> Merged BIOM (2023-12-14) #>       8 Samples:  HMP01, HMP02, HMP03, ..., and HMP08 #>     168 OTUs:     Unc53100, Unc26984, Unc00c7g, ... #>       1 Ranks:    .otu #>       1 Metadata: .sample #>         Tree:     <absent>          biom$tree     <- hmp50$tree     biom$metadata <- hmp50$metadata     print(biom) #> Merged BIOM (2023-12-14) #>       8 Samples:  HMP01, HMP02, HMP03, ..., and HMP08 #>     168 OTUs:     Unc53100, Unc26984, Unc00c7g, ... #>       1 Ranks:    .otu #>       5 Metadata: .sample, Age, BMI, Body Site, and Sex #>         Tree:     <present>"},{"path":"https://cmmr.github.io/rbiom/reference/cloning.html","id":null,"dir":"Reference","previous_headings":"","what":"Cloning rbiom Objects. — cloning","title":"Cloning rbiom Objects. — cloning","text":"Cloning rbiom Objects.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/cloning.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cloning rbiom Objects. — cloning","text":"","code":"library(rbiom)          biom <- hmp50$clone()          new_obj  <- rarefy(biom)     same_obj <- rarefy(biom, clone = FALSE)"},{"path":"https://cmmr.github.io/rbiom/reference/convert_to_SE.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an rbiom object to a Bioconductor object. — convert_to_SE","title":"Convert an rbiom object to a Bioconductor object. — convert_to_SE","text":"Requires relevant Bioconductor R package installed: convert_to_SE -  SummarizedExperiment convert_to_TSE -  TreeSummarizedExperiment","code":""},{"path":"https://cmmr.github.io/rbiom/reference/convert_to_SE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an rbiom object to a Bioconductor object. — convert_to_SE","text":"","code":"convert_to_SE(biom)  convert_to_TSE(biom)"},{"path":"https://cmmr.github.io/rbiom/reference/convert_to_SE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an rbiom object to a Bioconductor object. — convert_to_SE","text":"biom rbiom-class object, data coercible as_rbiom().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/convert_to_SE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an rbiom object to a Bioconductor object. — convert_to_SE","text":"SummarizedExperiment TreeSummarizedExperiment object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/convert_to_SE.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert an rbiom object to a Bioconductor object. — convert_to_SE","text":"SummarizedExperiment object includes counts, metadata, taxonomy. TreeSummarizedExperiment additionally includes tree sequences.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/convert_to_SE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an rbiom object to a Bioconductor object. — convert_to_SE","text":"","code":"library(rbiom)          print(hmp50) #> Human Microbiome Project - 50 Sample Demo (2023-12-05) #>      50 Samples:  HMP01, HMP02, HMP03, ..., and HMP50 #>     490 OTUs:     Unc01yki, Unc53100, LtbAci52, ... #>       7 Ranks:    .otu, Kingdom, Phylum, ..., and Genus #>       5 Metadata: .sample, Age, BMI, Body Site, and Sex #>         Tree:     <present>            # Requires 'SummarizedExperiment' Bioconductor R package     if (nzchar(system.file(package = \"SummarizedExperiment\"))) {       se <- convert_to_SE(hmp50)       print(se)     } #> class: SummarizedExperiment  #> dim: 490 50  #> metadata(0): #> assays(1): OTU table #> rownames(490): Unc01yki Unc53100 ... Unc03dfb Unc21867 #> rowData names(6): Kingdom Phylum ... Family Genus #> colnames(50): HMP01 HMP02 ... HMP49 HMP50 #> colData names(4): Age BMI Body Site Sex            # Requires 'TreeSummarizedExperiment' Bioconductor R package     if (nzchar(system.file(package = \"TreeSummarizedExperiment\"))) {       tse <- convert_to_TSE(hmp50)       print(tse)     } #> Error in Class@package: no applicable method for `@` applied to an object of class \"NULL\""},{"path":"https://cmmr.github.io/rbiom/reference/distmat_ord_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ordinations on a distance matrix. — distmat_ord_table","title":"Run ordinations on a distance matrix. — distmat_ord_table","text":"Run ordinations distance matrix.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/distmat_ord_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ordinations on a distance matrix. — distmat_ord_table","text":"","code":"distmat_ord_table(dm, ord = \"PCoA\", k = 2L, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/distmat_ord_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run ordinations on a distance matrix. — distmat_ord_table","text":"dm dist-class distance matrix, returned bdiv_distmat() stats::dist(). Required. ord Method reducing dimensionality. Options : \"UMAP\" -  Uniform manifold approximation projection; uwot::umap(). \"PCoA\" -  Principal coordinate analysis; ape::pcoa(). \"NMDS\" -  Nonmetric multidimensional scaling; vegan::metaMDS(). \"tSNE\" -  t-distributed stochastic neighbor embedding; tsne::tsne(). Default: \"UMAP\"  Multiple values allowed. Non-ambiguous abbreviations allowed. k Number ordination dimensions return. Either 2L 3L. Default: 2L ... Additional arguments ord.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/distmat_ord_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ordinations on a distance matrix. — distmat_ord_table","text":"data.frame columns .sample, .ord, .x, .y, (optionally) .z.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/distmat_ord_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run ordinations on a distance matrix. — distmat_ord_table","text":"","code":"library(rbiom)           dm  <- bdiv_distmat(hmp50, \"bray\")     ord <- distmat_ord_table(dm, \"PCoA\")     head(ord) #> # :         ape::pcoa(D = dm) #> # A tibble: 6 × 4 #>   .ord  .sample     .x       .y #>   <fct> <chr>    <dbl>    <dbl> #> 1 PCoA  HMP01   -0.387 -0.00895 #> 2 PCoA  HMP02   -0.461 -0.0135  #> 3 PCoA  HMP03   -0.407 -0.0143  #> 4 PCoA  HMP04   -0.378 -0.0123  #> 5 PCoA  HMP05   -0.452 -0.0114  #> 6 PCoA  HMP06   -0.411 -0.0123"},{"path":"https://cmmr.github.io/rbiom/reference/distmat_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","title":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","text":"Run statistics distance matrix vs categorical numeric variable.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/distmat_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","text":"","code":"distmat_stats(dm, groups, test = \"adonis2\", seed = 0, permutations = 999)"},{"path":"https://cmmr.github.io/rbiom/reference/distmat_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","text":"dm dist-class distance matrix, returned bdiv_distmat() stats::dist(). Required. groups named vector grouping values. names correspond attr(dm, 'Labels'). Values can either categorical numeric. Required. test Permutational test accessing significance. Options : \"adonis2\" -  Permutational MANOVA; vegan::adonis2(). \"mrpp\" -  Multiple response permutation procedure; vegan::mrpp(). Default: \"adonis2\"  Abbreviations allowed. seed Random seed permutations. Default: 0 permutations Number random permutations use. Default: 999","code":""},{"path":"https://cmmr.github.io/rbiom/reference/distmat_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","text":"data.frame summary statistics vegan::permustats(). columns : .n -  size distance matrix. .stat -  observed statistic. mrpp, overall weighted mean group mean distances. .z -  difference observed statistic mean permutations divided standard deviation permutations (also known z-values). Evaluated permuted values without observed statistic. .p.val -  Probability calculated test.  R commands reproducing results $code.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/distmat_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","text":"","code":"library(rbiom)          hmp10        <- hmp50$clone()     hmp10$counts <- hmp10$counts[,1:10]          dm <- bdiv_distmat(hmp10, 'unifrac')          distmat_stats(dm, groups = pull(hmp10, 'Body Site')) #> # A tibble: 1 × 4 #>      .n .stat    .z .p.val #>   <int> <dbl> <dbl>  <dbl> #> 1    10  9.27  11.0  0.001          distmat_stats(dm, groups = pull(hmp10, 'Age')) #> # A tibble: 1 × 4 #>      .n .stat    .z .p.val #>   <int> <dbl> <dbl>  <dbl> #> 1    10  4.13  3.56  0.012          # See the R code used to calculate these statistics:     stats <- distmat_stats(dm, groups = pull(hmp10, 'Age'))     stats$code #> Error in print.rbiom_code(x): object 'x' not found"},{"path":"https://cmmr.github.io/rbiom/reference/documentation_biom.rbiom.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_biom.rbiom — documentation_biom.rbiom","title":"documentation_biom.rbiom — documentation_biom.rbiom","text":"documentation_biom.rbiom","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_biom.rbiom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_biom.rbiom — documentation_biom.rbiom","text":"biom rbiom object, as_rbiom().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_boxplot — documentation_boxplot","title":"documentation_boxplot — documentation_boxplot","text":"documentation_boxplot","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_boxplot — documentation_boxplot","text":"x categorical metadata column name use x-axis. default, NULL, groups samples single category. layers \"bar\", \"box\" (\"x\"), \"violin\", \"dot\", \"strip\", \"crossbar\", \"errorbar\", \"linerange\", \"pointrange\". Single letter abbreviations also accepted. instance, c(\"box\", \"dot\") equivalent c(\"x\", \"d\") \"xd\". See vignette(\"boxplots\") examples . Default: \"bld\". color., pattern., shape., facet., limit.Metadata columns use aesthetics partitioning. Default: NULL ci calculate min/max crossbar, errorbar, linerange, pointrange layers. Options : \"ci\" (confidence interval), \"range\", \"sd\" (standard deviation), \"se\" (standard error), \"mad\" (median absolute deviation). center mark crossbar pointrange represents mean, except code\"mad\" case represents median. Default: \"ci\" ... Parameters matched formal arguments ggplot2 functions. Prefixing parameter names layer name ensures particular parameter passed , , layer. instance, dot.size = 2 d.size = 2 ensures dotplot layer size set 2. special prefix pt. control dot strip layers.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"documentation_boxplot — documentation_boxplot","text":"ggplot2 plot.  computed data points, statistics, ggplot command available $data, $stats, $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_boxplot_aes_section.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_boxplot_aes_section — documentation_boxplot_aes_section","title":"documentation_boxplot_aes_section — documentation_boxplot_aes_section","text":"documentation_boxplot_aes_section","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_boxplot_aes_section.html","id":"aesthetics-and-partitions","dir":"Reference","previous_headings":"","what":"Aesthetics and Partitions","title":"documentation_boxplot_aes_section — documentation_boxplot_aes_section","text":"Metadata can used flexibly subset, partition, apply aesthetics creating plot. Common use cases provided . thorough documentation available https://cmmr.github.io/rbiom. color.- categorical metadata column. (Max 1) pattern.- categorical metadata column. (Max 1) shape.- categorical metadata column. (Max 1) facet.- Categorical metadata column(s). limit.- metadata column(s). built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Patterns sourced magick R package. Pattern names : \"bricks\", \"hexagons\", \"horizontalsaw\", \"hs_fdiagonal\", \"fishscales\", \"verticalsaw\", \"checkerboard\", \"octagons\", \"right45\", \"hs_cross\", \"hs_bdiagonal\", \"hs_diagcross\", \"hs_horizontal\", \"hs_vertical\", \"left45\", \"leftshingle\", \"rightshingle\", \"verticalbricks\", \"verticalleftshingle\", \"verticalrightshingle\". Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. -z = 65:90; -Z = 97:122 use letters instead shapes plot. Character strings may used well.","code":"## Colors ----------------------------   color.by = \"Body Site\"   color.by = list('Body Site' = \"bright\")   color.by = list('Body Site' = c(\"Stool\", \"Saliva\"))   color.by = list('Body Site' = list('values' = c(\"Stool\", \"Saliva\"), 'colors' = \"bright\"))   color.by = list('Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"))      ## Patterns --------------------------   pattern.by = \"Body Site\"   pattern.by = list('Body Site' = c(\"Stool\", \"Saliva\"))   pattern.by = list('Body Site' = c('Stool' = \"left45\", 'Saliva' = \"hs_cross\"))      ## Shapes ----------------------------   shape.by = \"Body Site\"   shape.by = list('Body Site' = c(\"Stool\", \"Saliva\"))   shape.by = list('Body Site' = c('Stool' = 7, 'Saliva' = 8))      ## Facets ----------------------------   facet.by = \"Body Site\"   facet.by = c(\"Body Site\", \"Sex\")   facet.by = list('Body Site' = c(\"Stool\", \"Saliva\"), \"Sex\")      ## Limits ----------------------------   limit.by = list('Sex' = \"Male\", 'Age' = c(20,40))   limit.by = list('Body Site' = c(\"Saliva\", \"Anterior nares\"), 'Age' = c(NA,35))"},{"path":"https://cmmr.github.io/rbiom/reference/documentation_cmp.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_cmp — documentation_cmp","title":"documentation_cmp — documentation_cmp","text":"documentation_cmp","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_cmp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_cmp — documentation_cmp","text":"x categorical metadata column name. Prefix column name == != limit comparisons within groups, respectively. default, NULL groups distances single column. color., pattern., shape., facet., limit.Metadata columns use data partitioning. Prefix column name == != limit comparisons within groups, respectively. Default: NULL within, Metadata field(s) intra- inter- sample comparisons. Default: NULL","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_corrplot.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_corrplot — documentation_corrplot","title":"documentation_corrplot — documentation_corrplot","text":"documentation_corrplot","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_corrplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_corrplot — documentation_corrplot","text":"x numeric metadata field use x-axis. Required. layers \"trend\", \"scatter\". Single letter abbreviations also accepted. instance, c(\"trend\", \"scatter\") equivalent c(\"t\", \"s\") \"ts\". See vignette(\"corrplots\") examples . Default: \"t\". color., facet., limit.Metadata columns use aesthetics partitioning. See details. Default: NULL test test statistic display plot. Options : \"fit\" -  well model fit data? \"terms\" -  strongly 'x' influence 'y'? \"means\" -  average 'y' value non-zero? \"trends\" -  trendline non-zero slope? \"pw_means\" -  means trendlines different? \"pw_trends\" -  slopes trendlines different? \"none\" -  compute show statistics. Default: \"trends\"  Note: \"pw_means\" \"pw_trends\" can calculated using color.metadata column one level.  Statistical tests run separately facet. P-values adjusted multiple comparisons considering facets together. ... Additional parameters pass along ggplot2 functions. Prefix parameter name either t. s./pt. ensure gets passed () geom_smooth geom_point, respectively. instance, s.size = 2 ensures scatterplot points size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_corrplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"documentation_corrplot — documentation_corrplot","text":"ggplot2 plot.  computed data points, statistics, ggplot command available $data, $stats, $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_corrplot.html","id":"aesthetics-and-partitions","dir":"Reference","previous_headings":"","what":"Aesthetics and Partitions","title":"documentation_corrplot — documentation_corrplot","text":"Metadata can used flexibly subset, partition, apply aesthetics creating plot. Common use cases provided . thorough documentation available https://cmmr.github.io/rbiom. color.- metadata column. (Max 1) facet.- categorical metadata column(s). limit.- metadata column(s). built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". available numeric palette names : \"reds\", \"oranges\", \"greens\", \"purples\", \"grays\", \"acton\", \"bamako\", \"batlow\", \"bilbao\", \"buda\", \"davos\", \"devon\", \"grayC\", \"hawaii\", \"imola\", \"lajolla\", \"lapaz\", \"nuuk\", \"oslo\", \"tokyo\", \"turku\", \"bam\", \"berlin\", \"broc\", \"cork\", \"lisbon\", \"roma\", \"tofino\", \"vanimo\", \"vik\"","code":"## Colors ----------------------------   color.by = \"Body Site\"   color.by = list('Body Site' = \"bright\")   color.by = list('Body Site' = c(\"Stool\", \"Saliva\"))   color.by = list('Body Site' = list('values' = c(\"Stool\", \"Saliva\"), 'colors' = \"bright\"))   color.by = list('Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"))      ## Facets ----------------------------   facet.by = \"Body Site\"   facet.by = c(\"Body Site\", \"Sex\")   facet.by = list('Body Site' = c(\"Stool\", \"Saliva\"), \"Sex\")      ## Limits ----------------------------   limit.by = list('Sex' = \"Male\", 'Age' = c(20,40))   limit.by = list('Body Site' = c(\"Saliva\", \"Anterior nares\"), 'Age' = c(NA,35))"},{"path":"https://cmmr.github.io/rbiom/reference/documentation_default.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_default — documentation_default","title":"documentation_default — documentation_default","text":"documentation_default","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_default — documentation_default","text":"biom rbiom-class object, data coercible as_rbiom(). mtx matrix-like object. tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree md character vector naming metadata fields include output data frame, '.' include metadata fields. Default: '.' adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Default: \"Shannon\"  Multiple values allowed. Non-ambiguous abbreviations allowed. bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Default: \"Bray-Curtis\"  Multiple/abbreviated values allowed. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. ord Method reducing dimensionality. Options : \"UMAP\" -  Uniform manifold approximation projection; uwot::umap(). \"PCoA\" -  Principal coordinate analysis; ape::pcoa(). \"NMDS\" -  Nonmetric multidimensional scaling; vegan::metaMDS(). \"tSNE\" -  t-distributed stochastic neighbor embedding; tsne::tsne(). Default: \"UMAP\"  Multiple values allowed. Non-ambiguous abbreviations allowed. weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Default: TRUE  Multiple values allowed. rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" -  Replaces OTU name. \"grouped\" -  Replaces higher rank's name. \"drop\" -  Excludes result. \"asis\" -  check/modify taxa names. Default: \"singly\"  Abbreviations allowed. Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE sparse true, returns sparse matrix described slam::simple_triplet_matrix(), otherwise returns normal R matrix object. Default: FALSE p.top display taxa significant differences abundance. p.top >= 1, p.top significant taxa displayed. p.top less one, taxa adjusted p-value <= p.top displayed. Recommended used combination taxa parameter set lower bound mean abundance considered taxa. Default: Inf y.trans transformation apply y-axis. Visualizing differences high- low-abundance taxa best done non-linear axis. Options : \"sqrt\" -  square-root transformation \"log1p\" -  log(y + 1) transformation NULL -  transformation methods allow visualization high- low-abundance taxa simultaneously, without complaint 'zero' count observations. Default: \"sqrt\" flip Transpose axes, taxa present rows instead columns. Default: FALSE stripe Shade every x position. Default: flip p.label Minimum adjusted p-value display plot bracket. p.label = 0.05 -  Show p-values <= 0.05. p.label = 0 -  show p-values plot. p.label = 1 -  Show p-values plot. numeric vector one value provided, used breaks asterisk notation. Default: 0.05 level confidence level calculating confidence interval. Default: 0.95 caption Add methodology caption beneath plot. Default: TRUE outliers Show boxplot outliers? TRUE always show. FALSE always hide. NULL hide overlaying dot strip chart.  Default: NULL xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". k Number ordination dimensions return. Either 2L 3L. Default: 2L split.Name(s) metadata columns data split prior calculations. Default: NULL dm dist-class distance matrix, returned bdiv_distmat() stats::dist(). Required. groups named vector grouping values. names correspond attr(dm, 'Labels'). Values can either categorical numeric. Required. stat.categorical metadata field defining statistical groups. Required. regr run regression analysis, set regr numeric metadata field \"x-axis\" values. Leaving regr=NULL generate boxplot-like statistics; non-NULL, corrplot-like statistics returned. Default: NULL seed Random seed permutations. Default: 0 permutations Number random permutations use. Default: 999 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" depths Rarefaction depths show plot, NULL auto-select. Default: NULL rline draw horizontal line plot, intended show particular rarefaction depth. Set TRUE show auto-selected rarefaction depth FALSE show line. Default: NULL clone Create copy biom modifying. FALSE, biom modified place side-effect. See cloning use cases. Default: TRUE labels Show sample names bar. Default: FALSE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_dist_test.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_dist_test — documentation_dist_test","title":"documentation_dist_test — documentation_dist_test","text":"documentation_dist_test","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_dist_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_dist_test — documentation_dist_test","text":"stat.categorical numeric metadata field statistics calculated. Required. test Permutational test accessing significance. Options : \"adonis2\" -  Permutational MANOVA; vegan::adonis2(). \"mrpp\" -  Multiple response permutation procedure; vegan::mrpp(). Default: \"adonis2\"  Abbreviations allowed.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_heatmap — documentation_heatmap","title":"documentation_heatmap — documentation_heatmap","text":"documentation_heatmap","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_heatmap — documentation_heatmap","text":"grid Color palette name, list entries label, colors, range, bins, na.color, /guide. See Track Definitions section details. Default: list(label = \"Grid Value\", colors = \"imola\"). label Label matrix rows columns. can supply list logical vector length two control row labels column labels separately, example label = c(rows = TRUE, cols = FALSE), simply label = c(T, F). valid options \"rows\", \"cols\", \"\", \"bottom\", \"right\", \"none\". Default: TRUE. label_size font size use row column labels. can supply numeric vector length two control row label sizes column label sizes separately, example c(rows = 20, cols = 8), simply c(20, 8). Default: NULL, computes: pmax(8, pmin(20, 100 / dim(mtx))). rescale Rescale rows columns common min/max. Options: \"none\", \"rows\", \"cols\". Default: \"none\". trees Draw dendrogram rows (left) columns (top). can supply list logical vector length two control row tree column tree separately, example trees = c(rows = T, cols = F), simply trees = c(T, F). valid options \"rows\", \"cols\", \"\", \"left\", \"top\", \"none\". Default: TRUE. clust Clustering algorithm reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example clust = c(rows = \"complete\", cols = NA), simply clust = c(\"complete\", NA). Options : FALSE NA -  Disable reordering. hclust class object E.g. stats::hclust(). method name -  \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\", \"centroid\". Default: \"complete\". dist Distance algorithm use reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example dist = c(rows = \"euclidean\", cols = \"maximum\"), simply dist = c(\"euclidean\", \"maximum\"). Options : dist class object E.g. stats::dist() bdiv_distmat(). method name -  \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\", \"minkowski\". Default: \"euclidean\". tree_height, track_height height dendrogram annotation tracks multiples (fractions) smaller dimension grid cell size. Use numeric vector length two assign c(top, left) independently. Default: NULL, computes: tree_height = sqrt(min(dim(mtx))), track_height = tree_height / 4. ratio Height/width ratio entire grid. Default: 1 (square). legend place legend. Options : \"right\" \"bottom\". Default: \"right\". ... Additional arguments pass ggplot2::theme().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"documentation_heatmap — documentation_heatmap","text":"ggplot2 plot.  computed data points ggplot command available $data $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_model.lm.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_model.lm — documentation_model.lm","title":"documentation_model.lm — documentation_model.lm","text":"documentation_model.lm","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_model.lm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_model.lm — documentation_model.lm","text":"model type trend model fit data. Options : \"lm\" (linear), \"log\" (logarithmic), \"gam\" (generalized additive). See \"Model Options\" section additional details. Default: \"lm\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_model.lm.html","id":"model-options","dir":"Reference","previous_headings":"","what":"Model Options","title":"documentation_model.lm — documentation_model.lm","text":"predefined options : \"lm\" -   Linear model: stats::lm(formula = y ~ x).) \"log\" -  Logarithmic model: stats::lm(formula = y ~ log(x)). \"gam\" -  Generalized additive model: mgcv::gam(formula = y ~ s(x, bs = \"cs\"), method = \"REML\"). can alternatively provide list length two first element character vector length 1 naming function, second element list arguments pass function. One function's arguments must named 'formula'. example, model = list(\"stats::lm\", list(formula = y ~ x)).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_model.log.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_model.log — documentation_model.log","title":"documentation_model.log — documentation_model.log","text":"documentation_model.log","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_model.log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_model.log — documentation_model.log","text":"model type trend model fit data. Options : \"lm\" (linear), \"log\" (logarithmic), \"gam\" (generalized additive). See \"Model Options\" section additional details. Default: \"log\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_model.log.html","id":"model-options","dir":"Reference","previous_headings":"","what":"Model Options","title":"documentation_model.log — documentation_model.log","text":"predefined options : \"lm\" -   Linear model: stats::lm(formula = y ~ x).) \"log\" -  Logarithmic model: stats::lm(formula = y ~ log(x)). \"gam\" -  Generalized additive model: mgcv::gam(formula = y ~ s(x, bs = \"cs\"), method = \"REML\"). can alternatively provide list length two first element character vector length 1 naming function, second element list arguments pass function. One function's arguments must named 'formula'. example, model = list(\"stats::lm\", list(formula = y ~ x)).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_model_section.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_model_section — documentation_model_section","title":"documentation_model_section — documentation_model_section","text":"documentation_model_section","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_model_section.html","id":"model-options","dir":"Reference","previous_headings":"","what":"Model Options","title":"documentation_model_section — documentation_model_section","text":"predefined options : \"lm\" -   Linear model: stats::lm(formula = y ~ x).) \"log\" -  Logarithmic model: stats::lm(formula = y ~ log(x)). \"gam\" -  Generalized additive model: mgcv::gam(formula = y ~ s(x, bs = \"cs\"), method = \"REML\"). can alternatively provide list length two first element character vector length 1 naming function, second element list arguments pass function. One function's arguments must named 'formula'. example, model = list(\"stats::lm\", list(formula = y ~ x)).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_plot_return.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_plot_return — documentation_plot_return","title":"documentation_plot_return — documentation_plot_return","text":"documentation_plot_return","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_plot_return.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"documentation_plot_return — documentation_plot_return","text":"ggplot2 plot.  computed data points ggplot command available $data $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_plot_stats_return.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_plot_stats_return — documentation_plot_stats_return","title":"documentation_plot_stats_return — documentation_plot_stats_return","text":"documentation_plot_stats_return","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_plot_stats_return.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"documentation_plot_stats_return — documentation_plot_stats_return","text":"ggplot2 plot.  computed data points, statistics, ggplot command available $data, $stats, $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_return.biom.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_return.biom — documentation_return.biom","title":"documentation_return.biom — documentation_return.biom","text":"documentation_return.biom","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_return.biom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"documentation_return.biom — documentation_return.biom","text":"rbiom object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_stats_return.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_stats_return — documentation_stats_return","title":"documentation_stats_return — documentation_stats_return","text":"documentation_stats_return","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_stats_return.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"documentation_stats_return — documentation_stats_return","text":"tibble data frame summary statistics. R code generating statistics $code.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_taxa.4.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_taxa.4 — documentation_taxa.4","title":"documentation_taxa.4 — documentation_taxa.4","text":"documentation_taxa.4","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_taxa.4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_taxa.4 — documentation_taxa.4","text":"taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 4.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_test.ifelse.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_test.ifelse — documentation_test.ifelse","title":"documentation_test.ifelse — documentation_test.ifelse","text":"documentation_test.ifelse","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_test.ifelse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_test.ifelse — documentation_test.ifelse","text":"test statistic interest. overview options can found \"Statistical Tests\" section . One \"predict\", \"terms\", \"fit\", \"means\", \"trends\", \"es_means\", \"es_trends\", \"pw_means\", \"pw_trends\". Default: ifelse(.null(regr), \"means\", \"trends\")","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_test.ifelse.html","id":"statistical-tests","dir":"Reference","previous_headings":"","what":"Statistical Tests","title":"documentation_test.ifelse — documentation_test.ifelse","text":"regr NULL: \"means\" -  Considers groups using Kruskal-Wallis non-parametric test: stats::kruskal.test(). \"pw_means\" -  Pairwise comparison stat.groups using Wilcox rank sum (aka Mann-Whitney) non-parametric test: stats::wilcox.test(). regr NULL: \"predict\" -  Augments original data fitted information. See broom::augment.lm(). \"terms\" -  Summary information model's terms, including p-value, r-squared, AIC, BIC, confidence interval level. See broom::tidy.lm(). \"fit\" -  Goodness fit measures, p-values, overall model. See broom::glance.lm(). \"means\" -  estimated marginal mean (EMM) stat.group, along confidence intervals (CI), standard errors (SE), t-ratios, p-values testing mean = zero. See emmeans::emmeans() emmeans::summary.emmGrid(). \"trends\" -  trendline slope stat.group, along CI SE p-value testing slope = zero. See emmeans::emtrends() emmeans::summary.emmGrid(). \"pw_means\" -  Pairwise means. stat.groups compared difference means estimated along SE, t-ratios, p-values testing two means . See emmeans::pairs.emmGrid(). \"pw_trends\" -  Pairwise trends. , comparing trendline slopes instead means. \"es_means\" -  Effect sizes pairwise differences means, including SE CI. See emmeans::eff_size(). \"es_trends\" -  Effect sizes pairwise differences slopes, including SE CI. See emmeans::eff_size().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_test.pw_means.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_test.pw_means — documentation_test.pw_means","title":"documentation_test.pw_means — documentation_test.pw_means","text":"documentation_test.pw_means","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_test.pw_means.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_test.pw_means — documentation_test.pw_means","text":"test statistic interest. overview options can found \"Statistical Tests\" section . One \"predict\", \"terms\", \"fit\", \"means\", \"trends\", \"es_means\", \"es_trends\", \"pw_means\", \"pw_trends\". Default: \"pw_means\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_test.pw_means.html","id":"statistical-tests","dir":"Reference","previous_headings":"","what":"Statistical Tests","title":"documentation_test.pw_means — documentation_test.pw_means","text":"\"predict\" -  Augments original data fitted information. See broom::augment.lm(). \"terms\" -  Summary information model's terms, including p-value, r-squared, AIC, BIC, confidence interval level. See broom::tidy.lm(). \"fit\" -  Goodness fit measures, p-values, overall model. See broom::glance.lm(). \"means\" -  estimated marginal mean (EMM) stat.group, along confidence intervals (CI), standard errors (SE), t-ratios, p-values testing mean = zero. See emmeans::emmeans() emmeans::summary.emmGrid(). \"trends\" -  trendline slope stat.group, along CI SE p-value testing slope = zero. See emmeans::emtrends() emmeans::summary.emmGrid(). \"pw_means\" -  Pairwise means. stat.groups compared difference means estimated along SE, t-ratios, p-values testing two means . See emmeans::pairs.emmGrid(). \"pw_trends\" -  Pairwise trends. , comparing trendline slopes instead means. \"es_means\" -  Effect sizes pairwise differences means, including SE CI. See emmeans::eff_size(). \"es_trends\" -  Effect sizes pairwise differences slopes, including SE CI. See emmeans::eff_size().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_test.trends.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_test.trends — documentation_test.trends","title":"documentation_test.trends — documentation_test.trends","text":"documentation_test.trends","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_test.trends.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_test.trends — documentation_test.trends","text":"test statistic interest. overview options can found \"Statistical Tests\" section . One \"predict\", \"terms\", \"fit\", \"means\", \"trends\", \"es_means\", \"es_trends\", \"pw_means\", \"pw_trends\". Default: \"trends\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_test.trends.html","id":"statistical-tests","dir":"Reference","previous_headings":"","what":"Statistical Tests","title":"documentation_test.trends — documentation_test.trends","text":"\"predict\" -  Augments original data fitted information. See broom::augment.lm(). \"terms\" -  Summary information model's terms, including p-value, r-squared, AIC, BIC, confidence interval level. See broom::tidy.lm(). \"fit\" -  Goodness fit measures, p-values, overall model. See broom::glance.lm(). \"means\" -  estimated marginal mean (EMM) stat.group, along confidence intervals (CI), standard errors (SE), t-ratios, p-values testing mean = zero. See emmeans::emmeans() emmeans::summary.emmGrid(). \"trends\" -  trendline slope stat.group, along CI SE p-value testing slope = zero. See emmeans::emtrends() emmeans::summary.emmGrid(). \"pw_means\" -  Pairwise means. stat.groups compared difference means estimated along SE, t-ratios, p-values testing two means . See emmeans::pairs.emmGrid(). \"pw_trends\" -  Pairwise trends. , comparing trendline slopes instead means. \"es_means\" -  Effect sizes pairwise differences means, including SE CI. See emmeans::eff_size(). \"es_trends\" -  Effect sizes pairwise differences slopes, including SE CI. See emmeans::eff_size().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/hmp50.html","id":null,"dir":"Reference","previous_headings":"","what":"Human Microbiome Project - 50 sample demo dataset. — hmp50","title":"Human Microbiome Project - 50 sample demo dataset. — hmp50","text":"Human Microbiome Project - 50 sample demo dataset.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/hmp50.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Human Microbiome Project - 50 sample demo dataset. — hmp50","text":"","code":"hmp50"},{"path":"https://cmmr.github.io/rbiom/reference/hmp50.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Human Microbiome Project - 50 sample demo dataset. — hmp50","text":"rbiom object 50 samples. Includes metadata, taxonomy, phylogeny, sequences. Sex - Male Female Body Site - Buccal mucosa, Saliva, Anterior nares, Stool, Mid vagina Age - 21 - 40 BMI - 19 - 32","code":""},{"path":"https://cmmr.github.io/rbiom/reference/hmp50.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Human Microbiome Project - 50 sample demo dataset. — hmp50","text":"https://portal.hmpdacc.org","code":""},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"Create heatmap tracks dendrograms matrix.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"","code":"plot_heatmap(   mtx,   grid = list(label = \"Grid Value\", colors = \"imola\"),   tracks = NULL,   label = TRUE,   label_size = NULL,   rescale = \"none\",   trees = TRUE,   clust = \"complete\",   dist = \"euclidean\",   ratio = 1,   tree_height = NULL,   track_height = NULL,   legend = \"right\",   xlab.angle = \"auto\",   labs.title = NULL,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"mtx numeric matrix named rows columns. grid Color palette name, list entries label, colors, range, bins, na.color, /guide. See Track Definitions section details. Default: list(label = \"Grid Value\", colors = \"imola\"). tracks List track definitions. See details . Default: NULL. label Label matrix rows columns. can supply list logical vector length two control row labels column labels separately, example label = c(rows = TRUE, cols = FALSE), simply label = c(T, F). valid options \"rows\", \"cols\", \"\", \"bottom\", \"right\", \"none\". Default: TRUE. label_size font size use row column labels. can supply numeric vector length two control row label sizes column label sizes separately, example c(rows = 20, cols = 8), simply c(20, 8). Default: NULL, computes: pmax(8, pmin(20, 100 / dim(mtx))). rescale Rescale rows columns common min/max. Options: \"none\", \"rows\", \"cols\". Default: \"none\". trees Draw dendrogram rows (left) columns (top). can supply list logical vector length two control row tree column tree separately, example trees = c(rows = T, cols = F), simply trees = c(T, F). valid options \"rows\", \"cols\", \"\", \"left\", \"top\", \"none\". Default: TRUE. clust Clustering algorithm reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example clust = c(rows = \"complete\", cols = NA), simply clust = c(\"complete\", NA). Options : FALSE NA -  Disable reordering. hclust class object E.g. stats::hclust(). method name -  \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\", \"centroid\". Default: \"complete\". dist Distance algorithm use reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example dist = c(rows = \"euclidean\", cols = \"maximum\"), simply dist = c(\"euclidean\", \"maximum\"). Options : dist class object E.g. stats::dist() bdiv_distmat(). method name -  \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\", \"minkowski\". Default: \"euclidean\". ratio Height/width ratio entire grid. Default: 1 (square). tree_height, track_height height dendrogram annotation tracks multiples (fractions) smaller dimension grid cell size. Use numeric vector length two assign c(top, left) independently. Default: NULL, computes: tree_height = sqrt(min(dim(mtx))), track_height = tree_height / 4. legend place legend. Options : \"right\" \"bottom\". Default: \"right\". xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". labs.title Plot title. Default: NULL. ... Additional arguments pass ggplot2::theme().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"ggplot2 plot.  computed data points ggplot command available $data $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":"track-definitions","dir":"Reference","previous_headings":"","what":"Track Definitions","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"One colored tracks can placed left /top heatmap grid visualize associated metadata values. following entries track definitions understood: values -  metadata values. unnamed, order must match matrix. range -  c(min,max) use scale values. label -  Label track. Defaults name list element. side -  Options \"top\" (default) \"left\". colors -  pre-defined palette name custom set colors map . na.color -  color use NA values. bins -  Bin gradient many bins/steps. guide -  list arguments guide_colorbar() guide_legend(). built-color palettes colorblind-friendly. Categorical palette names: \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Numeric palette names: \"reds\", \"oranges\", \"greens\", \"purples\", \"grays\", \"acton\", \"bamako\", \"batlow\", \"bilbao\", \"buda\", \"davos\", \"devon\", \"grayC\", \"hawaii\", \"imola\", \"lajolla\", \"lapaz\", \"nuuk\", \"oslo\", \"tokyo\", \"turku\", \"bam\", \"berlin\", \"broc\", \"cork\", \"lisbon\", \"roma\", \"tofino\", \"vanimo\", \"vik\".","code":"## Categorical ---------------------------- cat_vals = sample(c(\"Male\", \"Female\"), 10, replace = TRUE) tracks   = list('Sex' = cat_vals) tracks   = list('Sex' = list('values' = cat_vals, 'colors' = \"bright\")) tracks   = list('Sex' = list(   'values' = cat_vals,    'colors' = c('Male' = \"blue\", 'Female' = \"red\")) )  ## Numeric -------------------------------- num_vals = sample(25:40, 10, replace = TRUE) tracks   = list('Age' = num_vals) tracks   = list('Age' = list('values' = num_vals, 'colors' = \"greens\")) tracks   = list('Age' = list('values' = num_vals, 'range' = c(0,50))) tracks   = list('Age' = list(   'label'  = \"Age (Years)\",   'values' = num_vals,    'colors' = c(\"azure\", \"darkblue\", \"darkorchid\") ))  ## Multiple Tracks ------------------------ tracks = list('Sex' = cat_vals, 'Age' = num_vals) tracks = list(   list('label' = \"Sex\", values' = cat_vals, 'colors' = \"bright\"),   list('label' = \"Age\", values' = num_vals, 'colors' = \"greens\") )    plot_heatmap(matrix(sample(1:50), ncol=10), tracks = tracks)"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"","code":"library(rbiom)          set.seed(123)     mtx <- matrix(runif(5*8), nrow = 5, dimnames = list(LETTERS[1:5], letters[1:8]))          plot_heatmap(mtx) #> Error in sum(sapply(tracks, function(x) eq(x[[\"side\"]], \"left\"))): invalid 'type' (list) of argument     plot_heatmap(mtx, grid=\"oranges\") #> Error in sum(sapply(tracks, function(x) eq(x[[\"side\"]], \"left\"))): invalid 'type' (list) of argument     plot_heatmap(mtx, grid=list(colors = \"oranges\", label = \"Some %\", bins = 5)) #> Error in sum(sapply(tracks, function(x) eq(x[[\"side\"]], \"left\"))): invalid 'type' (list) of argument          tracks <- list(       'Number' = sample(1:ncol(mtx)),       'Person' = list(         values = factor(sample(c(\"Alice\", \"Bob\"), ncol(mtx), TRUE)),         colors = c('Alice' = \"purple\", 'Bob' = \"darkcyan\") ),       'State' = list(         side   = \"left\",         values = sample(c(\"TX\", \"OR\", \"WA\"), nrow(mtx), TRUE),         colors = \"bright\" )     )          plot_heatmap(mtx, tracks=tracks) #> Error in x[[\"side\"]]: subscript out of bounds"},{"path":"https://cmmr.github.io/rbiom/reference/pull.rbiom.html","id":null,"dir":"Reference","previous_headings":"","what":"Map sample names to metadata field values. — pull.rbiom","title":"Map sample names to metadata field values. — pull.rbiom","text":"Map sample names metadata field values.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/pull.rbiom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map sample names to metadata field values. — pull.rbiom","text":"","code":"# S3 method for rbiom pull(biom, field = -1, name = \".sample\", ...)"},{"path":"https://cmmr.github.io/rbiom/reference/pull.rbiom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map sample names to metadata field values. — pull.rbiom","text":"biom rbiom object, as_rbiom(). field metadata field name specified : metadata field name retrieve. Can abbreviated. positive integer, giving position counting left. negative integer, giving position counting right. Default: -1 name column used names named vector. Specified similar manner var. Default: \".sample\" ... Passed dplyr::pull().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/pull.rbiom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map sample names to metadata field values. — pull.rbiom","text":"vector metadata values, named sample names.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/pull.rbiom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map sample names to metadata field values. — pull.rbiom","text":"","code":"library(rbiom)          pull(hmp50, 'Age') %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>    22    24    28    25    27    32           pull(hmp50, 'bod') %>% head(4) #>         HMP01         HMP02         HMP03         HMP04  #> Buccal mucosa Buccal mucosa        Saliva        Saliva  #> Levels: Anterior nares Buccal mucosa Mid vagina Saliva Stool"},{"path":"https://cmmr.github.io/rbiom/reference/rarefy.html","id":null,"dir":"Reference","previous_headings":"","what":"Rarefy OTU counts. — rarefy","title":"Rarefy OTU counts. — rarefy","text":"Sub-sample OTU observations samples equal number. called data non-integer abundances, values re-scaled integers 1 depth sum depth.  Use rarefy_i() optimize performance large datasets. modify rbiom object place, avoiding overhead cloning first.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rarefy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rarefy OTU counts. — rarefy","text":"","code":"rarefy(biom, depth = 0.1, n = NULL, seed = 0, clone = TRUE)"},{"path":"https://cmmr.github.io/rbiom/reference/rarefy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rarefy OTU counts. — rarefy","text":"biom rbiom-class object, data coercible as_rbiom(). depth many observations keep per sample. 0 < depth < 1, taken minimum percentage dataset's observations keep. Ignored n specified. Default: 0.1 n number samples keep. 0 < n < 1, taken percentage samples keep. negative, number percentage samples dropped. 0, samples kept. NULL, depth used instead. Default: NULL seed integer seed randomizing observations keep drop. need create different random rarefactions data, set seed different number time. clone Create copy biom modifying. FALSE, biom modified place side-effect. See cloning use cases. Default: TRUE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rarefy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rarefy OTU counts. — rarefy","text":"rbiom object.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rarefy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rarefy OTU counts. — rarefy","text":"","code":"library(rbiom)          sample_sums(hmp50) %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>     1     1     1     1     1     1           biom <- rarefy(hmp50)     sample_sums(biom) %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>  1183  1183  1183  1183  1183  1183"},{"path":"https://cmmr.github.io/rbiom/reference/rare_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the number of observations per sample. — rare_barplot","title":"Visualize the number of observations per sample. — rare_barplot","text":"Visualize number observations per sample.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the number of observations per sample. — rare_barplot","text":"","code":"rare_barplot(   biom,   rline = TRUE,   counts = TRUE,   labels = TRUE,   trans = \"log10\",   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/rare_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the number of observations per sample. — rare_barplot","text":"biom rbiom-class object, data coercible as_rbiom(). rline draw horizontal line plot, intended show particular rarefaction depth. Set TRUE show auto-selected rarefaction depth, FALSE show line, integer custom position. Default: TRUE. counts Display number samples reads remaining rarefying rline reads per sample. Default: TRUE. labels Show sample names bar. Default: TRUE. trans Y-axis transformation. Options \"log10\" NULL.  Default: \"log10\". ... Additional parameters pass along ggplot2 functions. Prefix parameter name r. ensure gets passed () geom_hline. instance, r.color = \"black\" ensures horizontal rarefaction line color set \"black\".","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize the number of observations per sample. — rare_barplot","text":"ggplot2 plot.  computed data points ggplot command available $data $code, respectively.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rare_barplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize the number of observations per sample. — rare_barplot","text":"","code":"library(rbiom)          rare_barplot(hmp50)           rare_barplot(hmp50, rline = 500, r.size = 2, r.linetype = \"twodash\")           fig <- rare_barplot(hmp50, counts = FALSE)     fig$code #> Error in print.rbiom_code(x): object 'x' not found"},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"Visualize rarefaction curves scatterplots trendlines.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"","code":"rare_corrplot(   biom,   adiv = \"Shannon\",   depths = NULL,   layers = \"t\",   rline = TRUE,   color.by = NULL,   facet.by = NULL,   limit.by = NULL,   test = \"pw_means\",   model = \"log\",   p.adj = \"fdr\",   level = 0.95,   caption = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"biom rbiom-class object, data coercible as_rbiom(). adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Default: \"Shannon\"  Multiple values allowed. Non-ambiguous abbreviations allowed. depths Rarefaction depths show plot, NULL auto-select. Default: NULL layers \"trend\", \"scatter\". Single letter abbreviations also accepted. instance, c(\"trend\", \"scatter\") equivalent c(\"t\", \"s\") \"ts\". See vignette(\"corrplots\") examples . Default: \"t\". rline draw horizontal line plot, intended show particular rarefaction depth. Set TRUE show auto-selected rarefaction depth FALSE show line. Default: NULL color., facet., limit.Metadata columns use aesthetics partitioning. See details. Default: NULL test statistic interest. overview options can found \"Statistical Tests\" section . One \"predict\", \"terms\", \"fit\", \"means\", \"trends\", \"es_means\", \"es_trends\", \"pw_means\", \"pw_trends\". Default: \"pw_means\" model type trend model fit data. Options : \"lm\" (linear), \"log\" (logarithmic), \"gam\" (generalized additive). See \"Model Options\" section additional details. Default: \"log\" p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" level confidence level calculating confidence interval. Default: 0.95 caption Add methodology caption beneath plot. Default: TRUE ... Additional parameters pass along ggplot2 functions. Prefix parameter name either t. s./pt. ensure gets passed () geom_smooth geom_point, respectively. instance, s.size = 2 ensures scatterplot points size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"ggplot2 plot.  computed data points, statistics, ggplot command available $data, $stats, $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"statistical-tests","dir":"Reference","previous_headings":"","what":"Statistical Tests","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"\"predict\" -  Augments original data fitted information. See broom::augment.lm(). \"terms\" -  Summary information model's terms, including p-value, r-squared, AIC, BIC, confidence interval level. See broom::tidy.lm(). \"fit\" -  Goodness fit measures, p-values, overall model. See broom::glance.lm(). \"means\" -  estimated marginal mean (EMM) stat.group, along confidence intervals (CI), standard errors (SE), t-ratios, p-values testing mean = zero. See emmeans::emmeans() emmeans::summary.emmGrid(). \"trends\" -  trendline slope stat.group, along CI SE p-value testing slope = zero. See emmeans::emtrends() emmeans::summary.emmGrid(). \"pw_means\" -  Pairwise means. stat.groups compared difference means estimated along SE, t-ratios, p-values testing two means . See emmeans::pairs.emmGrid(). \"pw_trends\" -  Pairwise trends. , comparing trendline slopes instead means. \"es_means\" -  Effect sizes pairwise differences means, including SE CI. See emmeans::eff_size(). \"es_trends\" -  Effect sizes pairwise differences slopes, including SE CI. See emmeans::eff_size().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"model-options","dir":"Reference","previous_headings":"","what":"Model Options","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"predefined options : \"lm\" -   Linear model: stats::lm(formula = y ~ x).) \"log\" -  Logarithmic model: stats::lm(formula = y ~ log(x)). \"gam\" -  Generalized additive model: mgcv::gam(formula = y ~ s(x, bs = \"cs\"), method = \"REML\"). can alternatively provide list length two first element character vector length 1 naming function, second element list arguments pass function. One function's arguments must named 'formula'. example, model = list(\"stats::lm\", list(formula = y ~ x)).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"aesthetics-and-partitions","dir":"Reference","previous_headings":"","what":"Aesthetics and Partitions","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"Metadata can used flexibly subset, partition, apply aesthetics creating plot. Common use cases provided . thorough documentation available https://cmmr.github.io/rbiom. color.- metadata column. (Max 1) facet.- categorical metadata column(s). limit.- metadata column(s). built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". available numeric palette names : \"reds\", \"oranges\", \"greens\", \"purples\", \"grays\", \"acton\", \"bamako\", \"batlow\", \"bilbao\", \"buda\", \"davos\", \"devon\", \"grayC\", \"hawaii\", \"imola\", \"lajolla\", \"lapaz\", \"nuuk\", \"oslo\", \"tokyo\", \"turku\", \"bam\", \"berlin\", \"broc\", \"cork\", \"lisbon\", \"roma\", \"tofino\", \"vanimo\", \"vik\"","code":"## Colors ----------------------------   color.by = \"Body Site\"   color.by = list('Body Site' = \"bright\")   color.by = list('Body Site' = c(\"Stool\", \"Saliva\"))   color.by = list('Body Site' = list('values' = c(\"Stool\", \"Saliva\"), 'colors' = \"bright\"))   color.by = list('Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"))      ## Facets ----------------------------   facet.by = \"Body Site\"   facet.by = c(\"Body Site\", \"Sex\")   facet.by = list('Body Site' = c(\"Stool\", \"Saliva\"), \"Sex\")      ## Limits ----------------------------   limit.by = list('Sex' = \"Male\", 'Age' = c(20,40))   limit.by = list('Body Site' = c(\"Saliva\", \"Anterior nares\"), 'Age' = c(NA,35))"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"","code":"library(rbiom)          rare_corrplot(hmp50, color.by=\"Body Site\", adiv=c(\"shan\", \"otus\"), facet.by=\"Sex\")"},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines rare_corrplot and rare_barplot into a single figure. — rare_multiplot","title":"Combines rare_corrplot and rare_barplot into a single figure. — rare_multiplot","text":"Combines rare_corrplot rare_barplot single figure.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines rare_corrplot and rare_barplot into a single figure. — rare_multiplot","text":"","code":"rare_multiplot(   biom,   adiv = \"OTUs\",   depths = NULL,   layers = \"t\",   rline = TRUE,   color.by = NULL,   facet.by = NULL,   limit.by = NULL,   test = \"pw_means\",   model = \"log\",   level = 0.95,   p.adj = \"fdr\",   caption = TRUE,   labels = FALSE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines rare_corrplot and rare_barplot into a single figure. — rare_multiplot","text":"biom rbiom-class object, data coercible as_rbiom(). adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Default: \"Shannon\"  Multiple values allowed. Non-ambiguous abbreviations allowed. depths Rarefaction depths show plot, NULL auto-select. Default: NULL layers \"trend\", \"scatter\". Single letter abbreviations also accepted. instance, c(\"trend\", \"scatter\") equivalent c(\"t\", \"s\") \"ts\". See vignette(\"corrplots\") examples . Default: \"t\". rline draw horizontal line plot, intended show particular rarefaction depth. Set TRUE show auto-selected rarefaction depth FALSE show line. Default: NULL color., facet., limit.Metadata columns use aesthetics partitioning. See details. Default: NULL test statistic interest. overview options can found \"Statistical Tests\" section . One \"predict\", \"terms\", \"fit\", \"means\", \"trends\", \"es_means\", \"es_trends\", \"pw_means\", \"pw_trends\". Default: \"pw_means\" model type trend model fit data. Options : \"lm\" (linear), \"log\" (logarithmic), \"gam\" (generalized additive). See \"Model Options\" section additional details. Default: \"log\" level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" caption Add methodology caption beneath plot. Default: TRUE labels Show sample names bar. Default: FALSE ... Additional parameters pass along ggplot2 functions. Prefix parameter name either t. s./pt. ensure gets passed () geom_smooth geom_point, respectively. instance, s.size = 2 ensures scatterplot points size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combines rare_corrplot and rare_barplot into a single figure. — rare_multiplot","text":"ggplot2 plot.  computed data points, statistics, ggplot command available $data, $stats, $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"statistical-tests","dir":"Reference","previous_headings":"","what":"Statistical Tests","title":"Combines rare_corrplot and rare_barplot into a single figure. — rare_multiplot","text":"\"predict\" -  Augments original data fitted information. See broom::augment.lm(). \"terms\" -  Summary information model's terms, including p-value, r-squared, AIC, BIC, confidence interval level. See broom::tidy.lm(). \"fit\" -  Goodness fit measures, p-values, overall model. See broom::glance.lm(). \"means\" -  estimated marginal mean (EMM) stat.group, along confidence intervals (CI), standard errors (SE), t-ratios, p-values testing mean = zero. See emmeans::emmeans() emmeans::summary.emmGrid(). \"trends\" -  trendline slope stat.group, along CI SE p-value testing slope = zero. See emmeans::emtrends() emmeans::summary.emmGrid(). \"pw_means\" -  Pairwise means. stat.groups compared difference means estimated along SE, t-ratios, p-values testing two means . See emmeans::pairs.emmGrid(). \"pw_trends\" -  Pairwise trends. , comparing trendline slopes instead means. \"es_means\" -  Effect sizes pairwise differences means, including SE CI. See emmeans::eff_size(). \"es_trends\" -  Effect sizes pairwise differences slopes, including SE CI. See emmeans::eff_size().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"model-options","dir":"Reference","previous_headings":"","what":"Model Options","title":"Combines rare_corrplot and rare_barplot into a single figure. — rare_multiplot","text":"predefined options : \"lm\" -   Linear model: stats::lm(formula = y ~ x).) \"log\" -  Logarithmic model: stats::lm(formula = y ~ log(x)). \"gam\" -  Generalized additive model: mgcv::gam(formula = y ~ s(x, bs = \"cs\"), method = \"REML\"). can alternatively provide list length two first element character vector length 1 naming function, second element list arguments pass function. One function's arguments must named 'formula'. example, model = list(\"stats::lm\", list(formula = y ~ x)).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"aesthetics-and-partitions","dir":"Reference","previous_headings":"","what":"Aesthetics and Partitions","title":"Combines rare_corrplot and rare_barplot into a single figure. — rare_multiplot","text":"Metadata can used flexibly subset, partition, apply aesthetics creating plot. Common use cases provided . thorough documentation available https://cmmr.github.io/rbiom. color.- metadata column. (Max 1) facet.- categorical metadata column(s). limit.- metadata column(s). built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". available numeric palette names : \"reds\", \"oranges\", \"greens\", \"purples\", \"grays\", \"acton\", \"bamako\", \"batlow\", \"bilbao\", \"buda\", \"davos\", \"devon\", \"grayC\", \"hawaii\", \"imola\", \"lajolla\", \"lapaz\", \"nuuk\", \"oslo\", \"tokyo\", \"turku\", \"bam\", \"berlin\", \"broc\", \"cork\", \"lisbon\", \"roma\", \"tofino\", \"vanimo\", \"vik\"","code":"## Colors ----------------------------   color.by = \"Body Site\"   color.by = list('Body Site' = \"bright\")   color.by = list('Body Site' = c(\"Stool\", \"Saliva\"))   color.by = list('Body Site' = list('values' = c(\"Stool\", \"Saliva\"), 'colors' = \"bright\"))   color.by = list('Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"))      ## Facets ----------------------------   facet.by = \"Body Site\"   facet.by = c(\"Body Site\", \"Sex\")   facet.by = list('Body Site' = c(\"Stool\", \"Saliva\"), \"Sex\")      ## Limits ----------------------------   limit.by = list('Sex' = \"Male\", 'Age' = c(20,40))   limit.by = list('Body Site' = c(\"Saliva\", \"Anterior nares\"), 'Age' = c(NA,35))"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combines rare_corrplot and rare_barplot into a single figure. — rare_multiplot","text":"","code":"library(rbiom)          rare_multiplot(hmp50, color.by=\"Body Site\")"},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package rbiom. — rbiom-deprecated","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"functions listed deprecated defunct near future. possible, alternative functions similar functionality also mentioned. Help pages deprecated functions available help(\"<function>-deprecated\").","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"","code":"alpha.div(biom, rarefy = FALSE)  beta.div(biom, method, weighted = TRUE, tree = NULL, long = FALSE, md = FALSE)  counts(biom)  info(biom)  metadata(biom, field = NULL, cleanup = FALSE)  nsamples(biom)  ntaxa(biom)  phylogeny(biom)  read.biom(src, tree = \"auto\", prune = FALSE)  read.fasta(file, ids = NULL)  read.tree(src)  sample.names(biom)  # S3 method for rbiom select(biom, samples = NULL, nTop = NULL, nRandom = NULL, seed = 0)  sequences(biom)  subtree(tree, tips)  taxa.names(biom)  taxa.ranks(biom)  taxa.rollup(   biom,   rank = \"OTU\",   map = NULL,   lineage = FALSE,   sparse = FALSE,   taxa = NULL,   long = FALSE,   md = FALSE )  taxonomy(biom, ranks = NULL, unc = \"asis\")  tips(x)  unifrac(biom, weighted = TRUE, tree = NULL)  write.biom(biom, file, format = \"json\")  write.fasta(seqs, outfile = NULL)  write.tree(tree, file = NULL)  write.xlsx(biom, outfile, depth = NULL, seed = 0)  as.percent(biom)  comments(biom)  depth(biom)  depths_barplot(   biom,   rline = TRUE,   counts = TRUE,   labels = TRUE,   trans = \"log10\",   ... )  has.phylogeny(biom)  has.sequences(biom)  id(biom)  is.rarefied(biom)  repair(biom)  sample_subset(x, ...)  sample.sums(biom, long = FALSE, md = FALSE)  stats.table(...)  taxa.means(biom, rank = NULL)  taxa.sums(biom, rank = NULL)  top.taxa(biom, rank = \"OTU\", n = Inf)  top_taxa(biom, rank = \"OTU\", n = Inf)  comments(x) <- value  counts(x) <- value  id(x) <- value  metadata(x) <- value  phylogeny(x) <- value  sample.names(x) <- value  sequences(x) <- value  taxa.names(x) <- value  taxa.ranks(x) <- value  taxonomy(x) <- value"},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"alpha-div","dir":"Reference","previous_headings":"","what":"alpha.div","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use adiv_matrix() adiv_table() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"beta-div","dir":"Reference","previous_headings":"","what":"beta.div","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use bdiv_table() bdiv_distmat() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"counts","dir":"Reference","previous_headings":"","what":"counts","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use $counts instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"info","dir":"Reference","previous_headings":"","what":"info","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$id, biom$comment, etc instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"metadata","dir":"Reference","previous_headings":"","what":"metadata","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$metadata pull(biom, field) instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"nsamples","dir":"Reference","previous_headings":"","what":"nsamples","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$n_samples instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"ntaxa","dir":"Reference","previous_headings":"","what":"ntaxa","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$n_otus instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"phylogeny","dir":"Reference","previous_headings":"","what":"phylogeny","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$tree instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"read-biom","dir":"Reference","previous_headings":"","what":"read.biom","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use read_biom() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"read-fasta","dir":"Reference","previous_headings":"","what":"read.fasta","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use read_fasta() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"read-tree","dir":"Reference","previous_headings":"","what":"read.tree","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use read_tree() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"sample-names","dir":"Reference","previous_headings":"","what":"sample.names","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$samples instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"select","dir":"Reference","previous_headings":"","what":"select","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use slice() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"sequences","dir":"Reference","previous_headings":"","what":"sequences","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$sequences instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"subtree","dir":"Reference","previous_headings":"","what":"subtree","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use tree_subset() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-names","dir":"Reference","previous_headings":"","what":"taxa.names","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$otus instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-ranks","dir":"Reference","previous_headings":"","what":"taxa.ranks","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$ranks instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-rollup","dir":"Reference","previous_headings":"","what":"taxa.rollup","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use taxa_table() taxa_matrix() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxonomy","dir":"Reference","previous_headings":"","what":"taxonomy","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use $taxonomy instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"tips","dir":"Reference","previous_headings":"","what":"tips","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use tree$tip.label instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"unifrac","dir":"Reference","previous_headings":"","what":"unifrac","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use bdiv_distmat() bdiv_table() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"write-biom","dir":"Reference","previous_headings":"","what":"write.biom","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use write_biom() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"write-fasta","dir":"Reference","previous_headings":"","what":"write.fasta","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use write_fasta() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"write-tree","dir":"Reference","previous_headings":"","what":"write.tree","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use write_tree() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"write-xlsx","dir":"Reference","previous_headings":"","what":"write.xlsx","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use write_xlsx() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"as-percent","dir":"Reference","previous_headings":"","what":"as.percent","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$counts %<>% rescale_cols() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"comments","dir":"Reference","previous_headings":"","what":"comments","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$comment instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"depth","dir":"Reference","previous_headings":"","what":"depth","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use sample_sums() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"depths-barplot","dir":"Reference","previous_headings":"","what":"depths_barplot","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use rare_barplot() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"has-phylogeny","dir":"Reference","previous_headings":"","what":"has.phylogeny","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use !.null(biom$tree) instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"has-sequences","dir":"Reference","previous_headings":"","what":"has.sequences","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use !.null(biom$sequences) instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"id","dir":"Reference","previous_headings":"","what":"id","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$id instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"is-rarefied","dir":"Reference","previous_headings":"","what":"is.rarefied","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use !.null(biom$depth) instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"repair","dir":"Reference","previous_headings":"","what":"repair","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use as_rbiom(.list(biom)) instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"sample-subset","dir":"Reference","previous_headings":"","what":"sample_subset","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$metadata %<>% base::subset() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"sample-sums","dir":"Reference","previous_headings":"","what":"sample.sums","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use sample_sums() adiv_table() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"stats-table","dir":"Reference","previous_headings":"","what":"stats.table","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use stats_table() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-means","dir":"Reference","previous_headings":"","what":"taxa.means","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use taxa_means() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-sums","dir":"Reference","previous_headings":"","what":"taxa.sums","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use taxa_sums() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"top-taxa","dir":"Reference","previous_headings":"","what":"top.taxa","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use taxa_sums() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"top-taxa-1","dir":"Reference","previous_headings":"","what":"top_taxa","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use taxa_sums() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"comments-set","dir":"Reference","previous_headings":"","what":"comments-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use $comment instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"counts-set","dir":"Reference","previous_headings":"","what":"counts-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use $counts instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"id-set","dir":"Reference","previous_headings":"","what":"id-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use $id instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"metadata-set","dir":"Reference","previous_headings":"","what":"metadata-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use $metadata instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"phylogeny-set","dir":"Reference","previous_headings":"","what":"phylogeny-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use $tree instead.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"sequences-set","dir":"Reference","previous_headings":"","what":"sequences-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use otu_sequences() instead.","code":""},{"path":[]},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxonomy-set","dir":"Reference","previous_headings":"","what":"taxonomy-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use $taxonomy instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rbiom: Read/Write, Transform, and Summarize BIOM Data — rbiom-package","title":"rbiom: Read/Write, Transform, and Summarize BIOM Data — rbiom-package","text":"toolkit working Biological Observation Matrix (BIOM) files. Features include reading/writing BIOM formats, rarefaction, alpha diversity, beta diversity (including UniFrac), summarizing counts taxonomic level, sample subsetting. Standalone functions reading, writing, subsetting phylogenetic trees also provided. CPU intensive operations encoded C multi-thread support.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-package.html","id":"multithreading","dir":"Reference","previous_headings":"","what":"Multithreading","title":"rbiom: Read/Write, Transform, and Summarize BIOM Data — rbiom-package","text":"Many rbiom functions support multithreading: default behavior function run many cores available local compute environment. wish limit number simultaneous threads, set RcppParallel's numThreads option. instance:","code":"RcppParallel::setThreadOptions(numThreads = 4)"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rbiom: Read/Write, Transform, and Summarize BIOM Data — rbiom-package","text":"Maintainer: Daniel P. Smith dansmith01@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Working with rbiom Objects. — rbiom_objects","title":"Working with rbiom Objects. — rbiom_objects","text":"Rbiom objects make easy access manipulate BIOM data, ensuring disparate components remain sync. objects behave largely like lists, can access assign using $ operator. sections list fields can read /written, helper functions common tasks like rarefying subsetting. create rbiom object, see as_rbiom().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":"readable-fields","dir":"Reference","previous_headings":"","what":"Readable Fields","title":"Working with rbiom Objects. — rbiom_objects","text":"Reading fields change rbiom object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":"writable-fields","dir":"Reference","previous_headings":"","what":"Writable Fields","title":"Working with rbiom Objects. — rbiom_objects","text":"Assigning new values components trigger validation checks inter-component synchronization.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":"transformations","dir":"Reference","previous_headings":"","what":"Transformations","title":"Working with rbiom Objects. — rbiom_objects","text":"functions return rbiom object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":"clone-an-object","dir":"Reference","previous_headings":"","what":"Clone an Object","title":"Working with rbiom Objects. — rbiom_objects","text":"Use $clone() create copy rbiom object. necessary rbiom objects passed reference. usual <- assignment operator simply create second reference object - create second object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Working with rbiom Objects. — rbiom_objects","text":"","code":"$clone(deep = FALSE)"},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Working with rbiom Objects. — rbiom_objects","text":"deep used.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Working with rbiom Objects. — rbiom_objects","text":"","code":"biom <- hmp50$clone()"},{"path":"https://cmmr.github.io/rbiom/reference/read_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a fasta file into a named character vector. — read_fasta","title":"Parse a fasta file into a named character vector. — read_fasta","text":"Parse fasta file named character vector.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a fasta file into a named character vector. — read_fasta","text":"","code":"read_fasta(file, ids = NULL)"},{"path":"https://cmmr.github.io/rbiom/reference/read_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a fasta file into a named character vector. — read_fasta","text":"file file/URL fasta-formatted sequences. Can optionally compressed gzip, bzip2, xz, lzma. ids Character vector IDs retrieve. default, NULL, retrieve everything.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_fasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a fasta file into a named character vector. — read_fasta","text":"named character vector names fasta headers values sequences.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a newick formatted phylogenetic tree. — read_tree","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"phylogenetic tree required computing UniFrac distance matrices. can load tree file providing tree string directly. tree must Newick format, also known parenthetic format New Hampshire format.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"","code":"read_tree(src)"},{"path":"https://cmmr.github.io/rbiom/reference/read_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"src Input data either file path, URL, Newick string. Compressed (gzip bzip2) files also supported.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"phylo class object representing tree.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/read_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"","code":"library(rbiom)          infile <- system.file(\"extdata\", \"newick.tre\", package = \"rbiom\")     tree <- read_tree(infile)          tree <- read_tree(\"         (t9:0.99,((t5:0.87,t2:0.89):0.51,(((t10:0.16,(t7:0.83,t4:0.96)         :0.94):0.69,(t6:0.92,(t3:0.62,t1:0.85):0.54):0.23):0.74,t8:0.1         2):0.43):0.67);\")"},{"path":"https://cmmr.github.io/rbiom/reference/rescale.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a counts matrix. — rescale","title":"Transform a counts matrix. — rescale","text":"Rarefaction subset counts samples number observations. Rescaling rows cols scales matrix values row sums column sums equal 1.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rescale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a counts matrix. — rescale","text":"","code":"rarefy_cols(mtx, depth = 0.1, n = NULL, seed = 0)  rescale_cols(mtx)  rescale_rows(mtx)"},{"path":"https://cmmr.github.io/rbiom/reference/rescale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a counts matrix. — rescale","text":"mtx matrix-like object. depth number observations keep, per column (sample). set 'auto', depth automatically selected. Samples fewer number observations dropped. called data non-integer abundances, values re-scaled integers 1 depth sum depth. Default: 'auto' n number samples retain, negative, number samples drop. NULL, number kept/dropped automatically selected. NULL, overrides value given depth. Default: NULL seed integer use seeding random number generator. need create different random rarefactions matrix, set seed value different number time.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rescale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a counts matrix. — rescale","text":"rarefied rescaled matrix.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rescale.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform a counts matrix. — rescale","text":"","code":"library(rbiom)          # rarefy_cols --------------------------------------     biom <- hmp50$clone()     sample_sums(biom) %>% head(10) #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06 HMP07 HMP08 HMP09 HMP10  #>  1660  1371  1353  1895  3939  4150  3283  1695  2069  2509       biom$counts %<>% rarefy_cols(depth=1000)     sample_sums(biom) %>% head(10) #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06 HMP07 HMP08 HMP09 HMP10  #>  1000  1000  1000  1000  1000  1000  1000  1000  1000  1000                # rescaling ----------------------------------------     mtx <- matrix(sample(1:20), nrow=4)     mtx #>      [,1] [,2] [,3] [,4] [,5] #> [1,]   16    2    6   12   11 #> [2,]   17    4    3    1   10 #> [3,]   18   13    9    8   20 #> [4,]   19    5   15    7   14          rowSums(mtx) #> [1] 47 35 68 60     rowSums(rescale_rows(mtx)) #> [1] 1 1 1 1          colSums(mtx) #> [1] 70 24 33 28 55     colSums(rescale_cols(mtx)) #> [1] 1 1 1 1 1"},{"path":"https://cmmr.github.io/rbiom/reference/sample_sums.html","id":null,"dir":"Reference","previous_headings":"","what":"Sum the observations in each sample. — sample_sums","title":"Sum the observations in each sample. — sample_sums","text":"Sum observations sample.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/sample_sums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sum the observations in each sample. — sample_sums","text":"","code":"sample_sums(biom)"},{"path":"https://cmmr.github.io/rbiom/reference/sample_sums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sum the observations in each sample. — sample_sums","text":"biom rbiom-class object, data coercible as_rbiom().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/sample_sums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sum the observations in each sample. — sample_sums","text":"named numeric vector number observations sample. names sample IDs.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/sample_sums.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sum the observations in each sample. — sample_sums","text":"","code":"library(rbiom)          sample_sums(hmp50) %>% sort() %>% head() #> HMP05 HMP13 HMP02 HMP03 HMP23 HMP28  #>     1     1     1     1     1     1           hist(sample_sums(hmp50))"},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Run non-parametric statistics on a data.frame. — stats_table","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"Run non-parametric statistics data.frame.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"","code":"stats_table(   df,   stat.by,   resp = attr(df, \"response\"),   regr = NULL,   test = ifelse(is.null(regr), \"means\", \"trends\"),   model = \"lm\",   level = 0.95,   split.by = NULL,   p.adj = \"fdr\" )"},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"df data.frame columns named stat., resp, regr, split.. Required. stat.categorical metadata field defining statistical groups. Required. resp response (independent) numeric variable, taxa abundance alpha diversity.  Default: attr(df, 'response') regr run regression analysis, set regr numeric metadata field \"x-axis\" values. Leaving regr=NULL generate boxplot-like statistics; non-NULL, corrplot-like statistics returned. Default: NULL test statistic interest. overview options can found \"Statistical Tests\" section . One \"predict\", \"terms\", \"fit\", \"means\", \"trends\", \"es_means\", \"es_trends\", \"pw_means\", \"pw_trends\". Default: ifelse(.null(regr), \"means\", \"trends\") model type trend model fit data. Options : \"lm\" (linear), \"log\" (logarithmic), \"gam\" (generalized additive). See \"Model Options\" section additional details. Default: \"lm\" level confidence level calculating confidence interval. Default: 0.95 split.Name(s) metadata columns data split prior calculations. Default: NULL p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"tibble data frame summary statistics. R code generating statistics $code.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":"statistical-tests","dir":"Reference","previous_headings":"","what":"Statistical Tests","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"regr NULL: \"means\" -  Considers groups using Kruskal-Wallis non-parametric test: stats::kruskal.test(). \"pw_means\" -  Pairwise comparison stat.groups using Wilcox rank sum (aka Mann-Whitney) non-parametric test: stats::wilcox.test(). regr NULL: \"predict\" -  Augments original data fitted information. See broom::augment.lm(). \"terms\" -  Summary information model's terms, including p-value, r-squared, AIC, BIC, confidence interval level. See broom::tidy.lm(). \"fit\" -  Goodness fit measures, p-values, overall model. See broom::glance.lm(). \"means\" -  estimated marginal mean (EMM) stat.group, along confidence intervals (CI), standard errors (SE), t-ratios, p-values testing mean = zero. See emmeans::emmeans() emmeans::summary.emmGrid(). \"trends\" -  trendline slope stat.group, along CI SE p-value testing slope = zero. See emmeans::emtrends() emmeans::summary.emmGrid(). \"pw_means\" -  Pairwise means. stat.groups compared difference means estimated along SE, t-ratios, p-values testing two means . See emmeans::pairs.emmGrid(). \"pw_trends\" -  Pairwise trends. , comparing trendline slopes instead means. \"es_means\" -  Effect sizes pairwise differences means, including SE CI. See emmeans::eff_size(). \"es_trends\" -  Effect sizes pairwise differences slopes, including SE CI. See emmeans::eff_size().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":"model-options","dir":"Reference","previous_headings":"","what":"Model Options","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"predefined options : \"lm\" -   Linear model: stats::lm(formula = y ~ x).) \"log\" -  Logarithmic model: stats::lm(formula = y ~ log(x)). \"gam\" -  Generalized additive model: mgcv::gam(formula = y ~ s(x, bs = \"cs\"), method = \"REML\"). can alternatively provide list length two first element character vector length 1 naming function, second element list arguments pass function. One function's arguments must named 'formula'. example, model = list(\"stats::lm\", list(formula = y ~ x)).","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          df <- taxa_table(biom, rank = \"Family\")     stats_table(df, stat.by = \"Body Site\") #> # Test:     kruskal.test(.abundance ~ `Body Site`). #> # A tibble: 1 × 5 #>      .n .stat   .df   .p.val   .adj.p #>   <int> <dbl> <int>    <dbl>    <dbl> #> 1  3920  148.     4 5.57e-31 5.57e-31          df <- adiv_table(biom)     stats_table(df, stat.by = \"Sex\", test = \"pw_means\") #> # Test:     wilcox.test(.diversity ~ Sex). #> # A tibble: 1 × 8 #>   Sex              .n .stat .estimate .lower .upper .p.val .adj.p #>   <fct>         <dbl> <dbl>     <dbl>  <dbl>  <dbl>  <dbl>  <dbl> #> 1 Female - Male    49   167    -0.781  -1.44 -0.183 0.0149 0.0149          stats_table(df, stat.by = \"Sex\", regr = \"BMI\") #> # Test:     Estimated marginal means of linear trends. #> # Model:    stats::lm(.diversity ~ BMI * Sex) #> # A tibble: 2 × 9 #>   Sex    .trend    .se   .df  .lower .upper .t.ratio .p.val .adj.p #>   <fct>   <dbl>  <dbl> <dbl>   <dbl>  <dbl>    <dbl>  <dbl>  <dbl> #> 1 Female 0.0653 0.0502    45 -0.0359  0.166    1.30   0.200  0.400 #> 2 Male   0.0546 0.0697    45 -0.0857  0.195    0.784  0.437  0.437"},{"path":"https://cmmr.github.io/rbiom/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform an rbiom object by its metadata. — subset","title":"Transform an rbiom object by its metadata. — subset","text":"Transform rbiom object metadata.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform an rbiom object by its metadata. — subset","text":"","code":"# S3 method for rbiom subset(biom, ..., clone = TRUE)  # S3 method for rbiom slice(biom, ..., clone = TRUE)  # S3 method for rbiom mutate(biom, ..., clone = TRUE)"},{"path":"https://cmmr.github.io/rbiom/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform an rbiom object by its metadata. — subset","text":"biom rbiom object, as_rbiom(). ... Passed base::subset(), dplyr::slice(), dplyr::mutate(). clone Create copy biom modifying. FALSE, biom modified place side-effect. See cloning use cases. Default: TRUE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform an rbiom object by its metadata. — subset","text":"rbiom object.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform an rbiom object by its metadata. — subset","text":"","code":"library(rbiom)          sample_sums(hmp50) %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>     1     1     1     1     1     1           biom <- rarefy(hmp50)     sample_sums(biom) %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>  1183  1183  1183  1183  1183  1183"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_barplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Display taxa abundances as a stacked bar graph. — taxa_barplot","title":"Display taxa abundances as a stacked bar graph. — taxa_barplot","text":"Display taxa abundances stacked bar graph.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_barplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display taxa abundances as a stacked bar graph. — taxa_barplot","text":"","code":"taxa_barplot(   biom,   rank = -1,   taxa = 6,   colors = TRUE,   patterns = FALSE,   label.by = NULL,   order.by = NULL,   facet.by = NULL,   limit.by = NULL,   dist = \"euclidean\",   clust = \"complete\",   other = TRUE,   unc = \"singly\",   lineage = FALSE,   xlab.angle = 90,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_barplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display taxa abundances as a stacked bar graph. — taxa_barplot","text":"biom rbiom-class object, data coercible as_rbiom(). rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. colors, patterns character vector colors patterns use graph. named character vector can used map taxon names specific colors patterns. Set TRUE auto-select colors patterns, FALSE disable per-taxa colors patterns. Default: colors=TRUE, patterns=FALSE. label., order.metadata column use labeling /sorting samples across x-axis. Set label.='.sample' display sample names. order.=NULL, samples arranged based dist clust, . Default: label.=NULL, order.=NULL. facet., limit.Metadata columns use data partitioning. Default: NULL dist, clust Distance (stats::dist()) clustering (stats::hclust()) methods use automatically arranging samples along x-axis put samples similar composition near one another. Default: dist=\"euclidean\", clust=\"complete\". Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" -  Replaces OTU name. \"grouped\" -  Replaces higher rank's name. \"drop\" -  Excludes result. \"asis\" -  check/modify taxa names. Default: \"singly\"  Abbreviations allowed. lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". ... Parameters underlying functions. Prefixing parameter names layer name ensures particular parameter passed , , layer.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_barplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display taxa abundances as a stacked bar graph. — taxa_barplot","text":"ggplot2 plot.  computed data points ggplot command available $data $code, respectively.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_barplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display taxa abundances as a stacked bar graph. — taxa_barplot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          taxa_barplot(biom, rank=\"Phylum\")"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize BIOM data with boxplots. — taxa_boxplot","title":"Visualize BIOM data with boxplots. — taxa_boxplot","text":"Visualize BIOM data boxplots.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize BIOM data with boxplots. — taxa_boxplot","text":"","code":"taxa_boxplot(   biom,   x = NULL,   rank = -1,   taxa = 6,   layers = \"bld\",   unc = \"singly\",   other = FALSE,   color.by = NULL,   pattern.by = NULL,   shape.by = NULL,   facet.by = NULL,   limit.by = NULL,   flip = FALSE,   stripe = NULL,   p.top = Inf,   p.adj = \"fdr\",   p.label = 0.05,   ci = \"ci\",   level = 0.95,   outliers = NULL,   xlab.angle = \"auto\",   y.trans = \"sqrt\",   caption = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize BIOM data with boxplots. — taxa_boxplot","text":"biom rbiom-class object, data coercible as_rbiom(). x categorical metadata column name use x-axis. default, NULL puts taxa along x-axis. rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. layers \"bar\", \"box\" (\"x\"), \"violin\", \"dot\", \"strip\", \"crossbar\", \"errorbar\", \"linerange\", \"pointrange\". Single letter abbreviations also accepted. instance, c(\"box\", \"dot\") equivalent c(\"x\", \"d\") \"xd\". See vignette(\"boxplots\") examples . Default: \"bld\". unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" -  Replaces OTU name. \"grouped\" -  Replaces higher rank's name. \"drop\" -  Excludes result. \"asis\" -  check/modify taxa names. Default: \"singly\"  Abbreviations allowed. Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE color., pattern., shape., facet., limit.Metadata columns use aesthetics partitioning. Default: NULL flip Transpose axes, taxa present rows instead columns. Default: FALSE stripe Shade every x position. Default: flip p.top display taxa significant differences abundance. p.top >= 1, p.top significant taxa displayed. p.top less one, taxa adjusted p-value <= p.top displayed. Recommended used combination taxa parameter set lower bound mean abundance considered taxa. Default: Inf p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" p.label Minimum adjusted p-value display plot bracket. p.label = 0.05 -  Show p-values <= 0.05. p.label = 0 -  show p-values plot. p.label = 1 -  Show p-values plot. numeric vector one value provided, used breaks asterisk notation. Default: 0.05 ci calculate min/max crossbar, errorbar, linerange, pointrange layers. Options : \"ci\" (confidence interval), \"range\", \"sd\" (standard deviation), \"se\" (standard error), \"mad\" (median absolute deviation). center mark crossbar pointrange represents mean, except code\"mad\" case represents median. Default: \"ci\" level confidence level calculating confidence interval. Default: 0.95 outliers Show boxplot outliers? TRUE always show. FALSE always hide. NULL hide overlaying dot strip chart.  Default: NULL xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". y.trans transformation apply y-axis. Visualizing differences high- low-abundance taxa best done non-linear axis. Options : \"sqrt\" -  square-root transformation \"log1p\" -  log(y + 1) transformation NULL -  transformation methods allow visualization high- low-abundance taxa simultaneously, without complaint 'zero' count observations. Default: \"sqrt\" caption Add methodology caption beneath plot. Default: TRUE ... Parameters matched formal arguments ggplot2 functions. Prefixing parameter names layer name ensures particular parameter passed , , layer. instance, dot.size = 2 d.size = 2 ensures dotplot layer size set 2. special prefix pt. control dot strip layers.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize BIOM data with boxplots. — taxa_boxplot","text":"ggplot2 plot.  computed data points, statistics, ggplot command available $data, $stats, $code, respectively.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize BIOM data with boxplots. — taxa_boxplot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          taxa_boxplot(biom, rank = c(\"Phylum\", \"Genus\"), flip = TRUE)      taxa_boxplot(biom, taxa = 3, layers = \"ps\", color.by = list(\"Body Site\" = c('Saliva' = \"blue\", 'Stool' = \"red\")))"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"Visualize taxa abundance scatterplots trendlines.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"","code":"taxa_corrplot(   biom,   x,   rank = -1,   taxa = 6,   layers = \"t\",   color.by = NULL,   facet.by = NULL,   limit.by = NULL,   test = \"trends\",   model = \"lm\",   level = 0.95,   p.top = Inf,   p.adj = \"fdr\",   caption = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"biom rbiom-class object, data coercible as_rbiom(). x numeric metadata field use x-axis. Required. rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. layers \"trend\", \"scatter\". Single letter abbreviations also accepted. instance, c(\"trend\", \"scatter\") equivalent c(\"t\", \"s\") \"ts\". See vignette(\"corrplots\") examples . Default: \"t\". color., facet., limit.Metadata columns use aesthetics partitioning. See details. Default: NULL test statistic interest. overview options can found \"Statistical Tests\" section . One \"predict\", \"terms\", \"fit\", \"means\", \"trends\", \"es_means\", \"es_trends\", \"pw_means\", \"pw_trends\". Default: \"trends\" model type trend model fit data. Options : \"lm\" (linear), \"log\" (logarithmic), \"gam\" (generalized additive). See \"Model Options\" section additional details. Default: \"lm\" level confidence level calculating confidence interval. Default: 0.95 p.top display taxa significant differences abundance. p.top >= 1, p.top significant taxa displayed. p.top less one, taxa adjusted p-value <= p.top displayed. Recommended used combination taxa parameter set lower bound mean abundance considered taxa. Default: Inf p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" caption Add methodology caption beneath plot. Default: TRUE ... Additional parameters pass along ggplot2 functions. Prefix parameter name either t. s./pt. ensure gets passed () geom_smooth geom_point, respectively. instance, s.size = 2 ensures scatterplot points size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"ggplot2 plot.  computed data points, statistics, ggplot command available $data, $stats, $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"statistical-tests","dir":"Reference","previous_headings":"","what":"Statistical Tests","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"\"predict\" -  Augments original data fitted information. See broom::augment.lm(). \"terms\" -  Summary information model's terms, including p-value, r-squared, AIC, BIC, confidence interval level. See broom::tidy.lm(). \"fit\" -  Goodness fit measures, p-values, overall model. See broom::glance.lm(). \"means\" -  estimated marginal mean (EMM) stat.group, along confidence intervals (CI), standard errors (SE), t-ratios, p-values testing mean = zero. See emmeans::emmeans() emmeans::summary.emmGrid(). \"trends\" -  trendline slope stat.group, along CI SE p-value testing slope = zero. See emmeans::emtrends() emmeans::summary.emmGrid(). \"pw_means\" -  Pairwise means. stat.groups compared difference means estimated along SE, t-ratios, p-values testing two means . See emmeans::pairs.emmGrid(). \"pw_trends\" -  Pairwise trends. , comparing trendline slopes instead means. \"es_means\" -  Effect sizes pairwise differences means, including SE CI. See emmeans::eff_size(). \"es_trends\" -  Effect sizes pairwise differences slopes, including SE CI. See emmeans::eff_size().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"model-options","dir":"Reference","previous_headings":"","what":"Model Options","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"predefined options : \"lm\" -   Linear model: stats::lm(formula = y ~ x).) \"log\" -  Logarithmic model: stats::lm(formula = y ~ log(x)). \"gam\" -  Generalized additive model: mgcv::gam(formula = y ~ s(x, bs = \"cs\"), method = \"REML\"). can alternatively provide list length two first element character vector length 1 naming function, second element list arguments pass function. One function's arguments must named 'formula'. example, model = list(\"stats::lm\", list(formula = y ~ x)).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"aesthetics-and-partitions","dir":"Reference","previous_headings":"","what":"Aesthetics and Partitions","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"Metadata can used flexibly subset, partition, apply aesthetics creating plot. Common use cases provided . thorough documentation available https://cmmr.github.io/rbiom. color.- metadata column. (Max 1) facet.- categorical metadata column(s). limit.- metadata column(s). built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". available numeric palette names : \"reds\", \"oranges\", \"greens\", \"purples\", \"grays\", \"acton\", \"bamako\", \"batlow\", \"bilbao\", \"buda\", \"davos\", \"devon\", \"grayC\", \"hawaii\", \"imola\", \"lajolla\", \"lapaz\", \"nuuk\", \"oslo\", \"tokyo\", \"turku\", \"bam\", \"berlin\", \"broc\", \"cork\", \"lisbon\", \"roma\", \"tofino\", \"vanimo\", \"vik\"","code":"## Colors ----------------------------   color.by = \"Body Site\"   color.by = list('Body Site' = \"bright\")   color.by = list('Body Site' = c(\"Stool\", \"Saliva\"))   color.by = list('Body Site' = list('values' = c(\"Stool\", \"Saliva\"), 'colors' = \"bright\"))   color.by = list('Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"))      ## Facets ----------------------------   facet.by = \"Body Site\"   facet.by = c(\"Body Site\", \"Sex\")   facet.by = list('Body Site' = c(\"Stool\", \"Saliva\"), \"Sex\")      ## Limits ----------------------------   limit.by = list('Sex' = \"Male\", 'Age' = c(20,40))   limit.by = list('Body Site' = c(\"Saliva\", \"Anterior nares\"), 'Age' = c(NA,35))"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          taxa_corrplot(biom, \"BMI\", color.by=\"Body Site\", taxa = 4)"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Display taxa abundances as a heatmap. — taxa_heatmap","title":"Display taxa abundances as a heatmap. — taxa_heatmap","text":"Display taxa abundances heatmap.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display taxa abundances as a heatmap. — taxa_heatmap","text":"","code":"taxa_heatmap(   biom,   rank = -1,   taxa = 6,   grid = list(label = \"{rank} Abundance\", colors = \"bilbao\"),   color.by = NULL,   order.by = NULL,   limit.by = NULL,   other = FALSE,   unc = \"singly\",   lineage = FALSE,   label = TRUE,   label_size = NULL,   rescale = \"none\",   trees = TRUE,   clust = \"complete\",   dist = \"euclidean\",   tree_height = NULL,   track_height = NULL,   ratio = 1,   legend = \"right\",   xlab.angle = \"auto\",   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display taxa abundances as a heatmap. — taxa_heatmap","text":"biom rbiom-class object, data coercible as_rbiom(). rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. grid Color palette name, list entries label, colors, range, bins, na.color, /guide. See Track Definitions section details. Default: list(label = \"{rank} Abundance\", colors = \"bilbao\"). Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" -  Replaces OTU name. \"grouped\" -  Replaces higher rank's name. \"drop\" -  Excludes result. \"asis\" -  check/modify taxa names. Default: \"singly\"  Abbreviations allowed. lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE label Label matrix rows columns. can supply list logical vector length two control row labels column labels separately, example label = c(rows = TRUE, cols = FALSE), simply label = c(T, F). valid options \"rows\", \"cols\", \"\", \"bottom\", \"right\", \"none\". Default: TRUE. label_size font size use row column labels. can supply numeric vector length two control row label sizes column label sizes separately, example c(rows = 20, cols = 8), simply c(20, 8). Default: NULL, computes: pmax(8, pmin(20, 100 / dim(mtx))). rescale Rescale rows columns common min/max. Options: \"none\", \"rows\", \"cols\". Default: \"none\". trees Draw dendrogram rows (left) columns (top). can supply list logical vector length two control row tree column tree separately, example trees = c(rows = T, cols = F), simply trees = c(T, F). valid options \"rows\", \"cols\", \"\", \"left\", \"top\", \"none\". Default: TRUE. clust Clustering algorithm reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example clust = c(rows = \"complete\", cols = NA), simply clust = c(\"complete\", NA). Options : FALSE NA -  Disable reordering. hclust class object E.g. stats::hclust(). method name -  \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\", \"centroid\". Default: \"complete\". dist Distance algorithm use reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example dist = c(rows = \"euclidean\", cols = \"maximum\"), simply dist = c(\"euclidean\", \"maximum\"). Options : dist class object E.g. stats::dist() bdiv_distmat(). method name -  \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\", \"minkowski\". Default: \"euclidean\". tree_height, track_height height dendrogram annotation tracks multiples (fractions) smaller dimension grid cell size. Use numeric vector length two assign c(top, left) independently. Default: NULL, computes: tree_height = sqrt(min(dim(mtx))), track_height = tree_height / 4. ratio Height/width ratio entire grid. Default: 1 (square). legend place legend. Options : \"right\" \"bottom\". Default: \"right\". xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". ... Additional arguments pass ggplot2::theme().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display taxa abundances as a heatmap. — taxa_heatmap","text":"ggplot2 plot.  computed data points ggplot command available $data $code, respectively.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display taxa abundances as a heatmap. — taxa_heatmap","text":"","code":"library(rbiom)          # Keep and rarefy the 10 most deeply sequenced samples.     hmp10 <- rarefy(hmp50, n = 10) #> Error in rarefy_cols(mtx = biom$counts, depth = depth, n = n, seed = seed): ✖ `n` must between -1 and 1, or an integer, not 10.          taxa_heatmap(hmp10, rank=\"Phylum\", color.by=\"Body Site\") #> Error in eval(expr, envir, enclos): object 'hmp10' not found"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Map OTUs names to taxa names at a given rank. — taxa_map","title":"Map OTUs names to taxa names at a given rank. — taxa_map","text":"Map OTUs names taxa names given rank.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map OTUs names to taxa names at a given rank. — taxa_map","text":"","code":"taxa_map(biom, rank = NULL, unc = \"asis\", lineage = FALSE)"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map OTUs names to taxa names at a given rank. — taxa_map","text":"biom rbiom-class object, data coercible as_rbiom(). rank NULL, entire biom$taxonomy data.frame returned, transformed per unc. Alternatively, single taxonomic rank (rank name integer position biom$ranks) returns named character vector mapping OTUs taxa names. unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" -  Replaces OTU name. \"grouped\" -  Replaces higher rank's name. \"drop\" -  Excludes result. \"asis\" -  check/modify taxa names. Default: \"singly\"  Abbreviations allowed. lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map OTUs names to taxa names at a given rank. — taxa_map","text":"tibble data.frame rank=NULL, character vector named OTU names.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map OTUs names to taxa names at a given rank. — taxa_map","text":"","code":"library(rbiom)     library(dplyr, warn.conflicts = FALSE)          # In $taxonomy, .otu is the first column (like a row identifier)  -----     hmp50$taxonomy %>% head(4) #> # A tibble: 4 × 7 #>   .otu     Kingdom  Phylum         Class          Order             Family Genus #>   <chr>    <fct>    <fct>          <fct>          <fct>             <fct>  <fct> #> 1 Unc01yki Bacteria Firmicutes     Bacilli        Lactobacillales   Lacto… Lact… #> 2 Unc53100 Bacteria Firmicutes     Bacilli        Lactobacillales   Strep… Stre… #> 3 LtbAci52 Bacteria Firmicutes     Bacilli        Lactobacillales   Lacto… Lact… #> 4 CnbTube3 Bacteria Actinobacteria Actinobacteria Corynebacteriales Coryn… Cory…          # In taxa_map, .otu is the last column (most precise rank)  -----------     taxa_map(hmp50) %>% head(4) #> # A tibble: 4 × 7 #>   Kingdom  Phylum         Class          Order             Family    Genus .otu  #>   <fct>    <fct>          <fct>          <fct>             <fct>     <fct> <chr> #> 1 Bacteria Firmicutes     Bacilli        Lactobacillales   Lactobac… Lact… Unc0… #> 2 Bacteria Firmicutes     Bacilli        Lactobacillales   Streptoc… Stre… Unc5… #> 3 Bacteria Firmicutes     Bacilli        Lactobacillales   Lactobac… Lact… LtbA… #> 4 Bacteria Actinobacteria Actinobacteria Corynebacteriales Coryneba… Cory… CnbT…          # Generate an OTU to Genus mapping  -----------------------------------     taxa_map(hmp50, \"Genus\") %>% head(4) #>          Unc01yki          Unc53100          LtbAci52          CnbTube3  #>     Lactobacillus     Streptococcus     Lactobacillus Corynebacterium 1  #> 201 Levels: Abiotrophia Acidaminococcus Acinetobacter ... Veillonella          # Sometimes taxonomic names are incomplete ----------------------------     otus <- c('GemAsacc', 'GcbBacte', 'Unc58411')     taxa_map(hmp50) %>% filter(.otu %in% otus) %>% select(Phylum:.otu) #> # A tibble: 3 × 6 #>   Phylum          Class      Order          Family    Genus   .otu     #>   <fct>           <fct>      <fct>          <fct>     <fct>   <chr>    #> 1 Gracilibacteria c          o              f         g       GcbBacte #> 2 Tenericutes     Mollicutes Mollicutes RF9 f         g       Unc58411 #> 3 Firmicutes      Bacilli    Bacillales     Family XI Gemella GemAsacc          # rbiom can replace them with unique placeholders ---------------------     taxa_map(hmp50, unc = \"singly\") %>% filter(.otu %in% otus) %>% select(Class:.otu) #> # A tibble: 3 × 5 #>   Class         Order          Family        Genus         .otu     #>   <fct>         <fct>          <fct>         <fct>         <fct>    #> 1 Unc. GcbBacte Unc. GcbBacte  Unc. GcbBacte Unc. GcbBacte GcbBacte #> 2 Mollicutes    Mollicutes RF9 Unc. Unc58411 Unc. Unc58411 Unc58411 #> 3 Bacilli       Bacillales     Bacillales XI Gemella       GemAsacc          # Or collapse them into groups ----------------------------------------     taxa_map(hmp50, unc = \"grouped\") %>% filter(.otu %in% otus) %>% select(Class:Genus) #> # A tibble: 3 × 4 #>   Class                Order                Family               Genus           #>   <fct>                <fct>                <fct>                <fct>           #> 1 Unc. Gracilibacteria Unc. Gracilibacteria Unc. Gracilibacteria Unc. Graciliba… #> 2 Mollicutes           Mollicutes RF9       Unc. Mollicutes RF9  Unc. Mollicute… #> 3 Bacilli              Bacillales           Bacillales XI        Gemella"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxa abundances per sample. — taxa_matrix","title":"Taxa abundances per sample. — taxa_matrix","text":"taxa_matrix() -  Accepts single rank returns matrix. taxa_table() -  Can accept one rank returns tibble data.frame.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxa abundances per sample. — taxa_matrix","text":"","code":"taxa_matrix(   biom,   rank = -1,   taxa = NULL,   lineage = FALSE,   sparse = FALSE,   unc = \"singly\",   other = FALSE )  taxa_table(   biom,   rank = -1,   taxa = NULL,   lineage = FALSE,   md = \".all\",   unc = \"singly\",   other = FALSE )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxa abundances per sample. — taxa_matrix","text":"biom rbiom-class object, data coercible as_rbiom(). rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE sparse true, returns sparse matrix described slam::simple_triplet_matrix(), otherwise returns normal R matrix object. Default: FALSE unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" -  Replaces OTU name. \"grouped\" -  Replaces higher rank's name. \"drop\" -  Excludes result. \"asis\" -  check/modify taxa names. Default: \"singly\"  Abbreviations allowed. Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE md character vector naming metadata fields include output data frame, '.' include metadata fields. Default: '.'","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taxa abundances per sample. — taxa_matrix","text":"taxa_matrix() -  numeric matrix taxa rows, samples columns. taxa_table() -  tibble data frame column names .sample, .taxa, .abundance, requested md.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxa abundances per sample. — taxa_matrix","text":"","code":"library(rbiom)          biom$ranks #> Error in eval(expr, envir, enclos): object 'biom' not found          taxa_matrix(hmp50, 'Phylum')[1:4,1:6] #>                          HMP01      HMP02      HMP03      HMP04       HMP05 #> Actinobacteria      0.01084337 0.04376368 0.09312639 0.06332454 0.007616146 #> Bacteroidetes       0.16626506 0.16119621 0.23133777 0.11503958 0.036557502 #> Cyanobacteria       0.00000000 0.00000000 0.00000000 0.00000000 0.000000000 #> Deinococcus Thermus 0.00000000 0.00000000 0.00000000 0.00000000 0.000000000 #>                          HMP06 #> Actinobacteria      0.01710843 #> Bacteroidetes       0.21204819 #> Cyanobacteria       0.00000000 #> Deinococcus Thermus 0.00000000          taxa_table(hmp50, 'Phylum') #> # A tibble: 650 × 8 #>    .rank  .sample .taxa               .abundance   Age   BMI `Body Site`   Sex   #>    <fct>  <chr>   <fct>                    <dbl> <dbl> <dbl> <fct>         <fct> #>  1 Phylum HMP01   Actinobacteria         0.0108     22    20 Buccal mucosa Fema… #>  2 Phylum HMP01   Bacteroidetes          0.166      22    20 Buccal mucosa Fema… #>  3 Phylum HMP01   Cyanobacteria          0          22    20 Buccal mucosa Fema… #>  4 Phylum HMP01   Deinococcus Thermus    0          22    20 Buccal mucosa Fema… #>  5 Phylum HMP01   Firmicutes             0.728      22    20 Buccal mucosa Fema… #>  6 Phylum HMP01   Fusobacteria           0.0247     22    20 Buccal mucosa Fema… #>  7 Phylum HMP01   Gracilibacteria        0.00843    22    20 Buccal mucosa Fema… #>  8 Phylum HMP01   Proteobacteria         0.0620     22    20 Buccal mucosa Fema… #>  9 Phylum HMP01   Saccharibacteria       0          22    20 Buccal mucosa Fema… #> 10 Phylum HMP01   Spirochaetae           0          22    20 Buccal mucosa Fema… #> # ℹ 640 more rows"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Test taxa abundances for significant differences. — taxa_stats","title":"Test taxa abundances for significant differences. — taxa_stats","text":"Test taxa abundances significant differences.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test taxa abundances for significant differences. — taxa_stats","text":"","code":"taxa_stats(   biom,   stat.by = NULL,   regr = NULL,   rank = -1,   taxa = 6,   test = ifelse(is.null(regr), \"means\", \"trends\"),   model = \"lm\",   level = 0.95,   lineage = FALSE,   unc = \"singly\",   other = FALSE,   split.by = NULL,   p.adj = \"fdr\" )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test taxa abundances for significant differences. — taxa_stats","text":"biom rbiom-class object, data coercible as_rbiom(). stat.categorical metadata field defining statistical groups. Required. regr run regression analysis, set regr numeric metadata field \"x-axis\" values. Leaving regr=NULL generate boxplot-like statistics; non-NULL, corrplot-like statistics returned. Default: NULL rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. test statistic interest. overview options can found \"Statistical Tests\" section . One \"predict\", \"terms\", \"fit\", \"means\", \"trends\", \"es_means\", \"es_trends\", \"pw_means\", \"pw_trends\". Default: ifelse(.null(regr), \"means\", \"trends\") model type trend model fit data. Options : \"lm\" (linear), \"log\" (logarithmic), \"gam\" (generalized additive). See \"Model Options\" section additional details. Default: \"lm\" level confidence level calculating confidence interval. Default: 0.95 lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" -  Replaces OTU name. \"grouped\" -  Replaces higher rank's name. \"drop\" -  Excludes result. \"asis\" -  check/modify taxa names. Default: \"singly\"  Abbreviations allowed. Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE split.Name(s) metadata columns data split prior calculations. Default: NULL p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test taxa abundances for significant differences. — taxa_stats","text":"tibble data frame summary statistics. R code generating statistics $code.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":"statistical-tests","dir":"Reference","previous_headings":"","what":"Statistical Tests","title":"Test taxa abundances for significant differences. — taxa_stats","text":"regr NULL: \"means\" -  Considers groups using Kruskal-Wallis non-parametric test: stats::kruskal.test(). \"pw_means\" -  Pairwise comparison stat.groups using Wilcox rank sum (aka Mann-Whitney) non-parametric test: stats::wilcox.test(). regr NULL: \"predict\" -  Augments original data fitted information. See broom::augment.lm(). \"terms\" -  Summary information model's terms, including p-value, r-squared, AIC, BIC, confidence interval level. See broom::tidy.lm(). \"fit\" -  Goodness fit measures, p-values, overall model. See broom::glance.lm(). \"means\" -  estimated marginal mean (EMM) stat.group, along confidence intervals (CI), standard errors (SE), t-ratios, p-values testing mean = zero. See emmeans::emmeans() emmeans::summary.emmGrid(). \"trends\" -  trendline slope stat.group, along CI SE p-value testing slope = zero. See emmeans::emtrends() emmeans::summary.emmGrid(). \"pw_means\" -  Pairwise means. stat.groups compared difference means estimated along SE, t-ratios, p-values testing two means . See emmeans::pairs.emmGrid(). \"pw_trends\" -  Pairwise trends. , comparing trendline slopes instead means. \"es_means\" -  Effect sizes pairwise differences means, including SE CI. See emmeans::eff_size(). \"es_trends\" -  Effect sizes pairwise differences slopes, including SE CI. See emmeans::eff_size().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":"model-options","dir":"Reference","previous_headings":"","what":"Model Options","title":"Test taxa abundances for significant differences. — taxa_stats","text":"predefined options : \"lm\" -   Linear model: stats::lm(formula = y ~ x).) \"log\" -  Logarithmic model: stats::lm(formula = y ~ log(x)). \"gam\" -  Generalized additive model: mgcv::gam(formula = y ~ s(x, bs = \"cs\"), method = \"REML\"). can alternatively provide list length two first element character vector length 1 naming function, second element list arguments pass function. One function's arguments must named 'formula'. example, model = list(\"stats::lm\", list(formula = y ~ x)).","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test taxa abundances for significant differences. — taxa_stats","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          taxa_stats(biom, stat.by = \"Body Site\", rank = \"Family\") #> # Test:     kruskal.test(.abundance ~ `Body Site`). #> # A tibble: 6 × 6 #>   .taxa                 .n .stat   .df       .p.val       .adj.p #>   <fct>              <int> <dbl> <int>        <dbl>        <dbl> #> 1 Streptococcaceae      49  42.8     4 0.0000000114 0.0000000685 #> 2 Pasteurellaceae       49  40.3     4 0.0000000372 0.000000112  #> 3 Lactobacillaceae      49  37.4     4 0.000000148  0.000000296  #> 4 Veillonellaceae       49  32.0     4 0.00000191   0.00000286   #> 5 Corynebacteriaceae    49  29.6     4 0.00000584   0.00000701   #> 6 Bacteroidaceae        49  26.9     4 0.0000204    0.0000204             taxa_stats(biom, stat.by = \"Body Site\", regr = \"Age\", rank = \"Family\") #> # Test:     Estimated marginal means of linear trends. #> # Model:    stats::lm(.abundance ~ Age * `Body Site`) #> # A tibble: 30 × 10 #>    .taxa   `Body Site` .trend   .se   .df .lower .upper .t.ratio  .p.val  .adj.p #>    <fct>   <fct>        <dbl> <dbl> <dbl>  <dbl>  <dbl>    <dbl>   <dbl>   <dbl> #>  1 Pasteu… Buccal muc…  37.6   8.09    39  21.3   54.0     4.65  3.72e-5 0.00112 #>  2 Strept… Buccal muc… -53.3  12.8     39 -79.2  -27.3    -4.16  1.71e-4 0.00256 #>  3 Lactob… Mid vagina  -31.3   8.42    39 -48.4  -14.3    -3.72  6.19e-4 0.00619 #>  4 Veillo… Saliva      -11.5   4.13    39 -19.9   -3.18   -2.79  8.04e-3 0.0603  #>  5 Bacter… Stool        -8.82  6.26    39 -21.5    3.85   -1.41  1.67e-1 1       #>  6 Veillo… Mid vagina    2.87  3.07    39  -3.34   9.08    0.935 3.56e-1 1       #>  7 Pasteu… Saliva       -3.02  5.19    39 -13.5    7.49   -0.581 5.65e-1 1       #>  8 Strept… Saliva       -4.56  8.23    39 -21.2   12.1    -0.555 5.82e-1 1       #>  9 Strept… Anterior n…   1.57  6.15    39 -10.9   14.0     0.255 8.00e-1 1       #> 10 Veillo… Buccal muc…  -1.05  6.43    39 -14.1   12.0    -0.162 8.72e-1 1       #> # ℹ 20 more rows"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_sums.html","id":null,"dir":"Reference","previous_headings":"","what":"Get summary taxa abundances. — taxa_sums","title":"Get summary taxa abundances. — taxa_sums","text":"Get summary taxa abundances.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_sums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get summary taxa abundances. — taxa_sums","text":"","code":"taxa_sums(biom, rank = 0)  taxa_means(biom, rank = 0)"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_sums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get summary taxa abundances. — taxa_sums","text":"biom rbiom-class object, data coercible as_rbiom(). rank taxonomic rank return sums means . default, 0, returns per-OTU summaries.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_sums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get summary taxa abundances. — taxa_sums","text":"named, sorted numeric vector.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_sums.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get summary taxa abundances. — taxa_sums","text":"","code":"library(rbiom)           taxa_sums(hmp50) %>% head(4) #> Unc53100 LtbAci52 CnbTube3 Unc01yki  #> 7.767949 5.506004 3.461054 3.336177           taxa_means(hmp50, 'Family') %>% head(5) #>   Lactobacillaceae   Streptococcaceae     Bacteroidaceae Corynebacteriaceae  #>         0.17745887         0.16393994         0.09515377         0.08905900  #>    Pasteurellaceae  #>         0.04759644"},{"path":"https://cmmr.github.io/rbiom/reference/tree_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a subtree by specifying tips to keep. — tree_subset","title":"Create a subtree by specifying tips to keep. — tree_subset","text":"Create subtree specifying tips keep.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/tree_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a subtree by specifying tips to keep. — tree_subset","text":"","code":"tree_subset(tree, tips)"},{"path":"https://cmmr.github.io/rbiom/reference/tree_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a subtree by specifying tips to keep. — tree_subset","text":"tree phylo object, returned read_tree(). tips character, numeric, logical vector tips keep.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/tree_subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a subtree by specifying tips to keep. — tree_subset","text":"phylo object subtree.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/tree_subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a subtree by specifying tips to keep. — tree_subset","text":"","code":"library(rbiom)          infile <- system.file(\"extdata\", \"newick.tre\", package = \"rbiom\")     tree <- read_tree(infile)     tree #>  #> Phylogenetic tree with 20 tips and 19 internal nodes. #>  #> Tip labels: #>   Pa5Bac29, AtlPorci, AciSp313, MxlBact8, MxlBacte, PseS1107, ... #>  #> Rooted; includes branch lengths.          subtree <- tree_subset(tree, tips = head(tree_tips(tree))) #> Error in tree_tips(tree): could not find function \"tree_tips\"     subtree #> function (tree, tips) { #>   deprecate_warn(\"2.0.0\", \"subtree()\", \"tree_subset()\") #>   tree_subset(tree = tree, tips = tips) #> } #> <bytecode: 0x00000202c8b57ae0> #> <environment: namespace:rbiom>"},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an rbiom object to a file. — write_biom","title":"Save an rbiom object to a file. — write_biom","text":"Automatically creates directories adds compression based file name. write_biom() -  According BIOM format specification. write_xlsx() -  Raw data summary tables Excel file format. See details. write_fasta() -  Sequences fasta format. biom may also named character vector. write_tree() -  Phylogenetic tree newick format. biom may also phylo object. write_counts(), write_metadata(), write_taxonomy() -  Tab-separated values.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an rbiom object to a file. — write_biom","text":"","code":"write_biom(biom, file, format = \"json\")  write_metadata(biom, file, quote = FALSE, sep = \"\\t\", ...)  write_counts(biom, file, quote = FALSE, sep = \"\\t\", ...)  write_taxonomy(biom, file, quote = FALSE, sep = \"\\t\", ...)  write_fasta(biom, file = NULL)  write_tree(biom, file = NULL)  write_xlsx(biom, file, depth = \"auto\", n = NULL, seed = 0, unc = \"asis\")"},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an rbiom object to a file. — write_biom","text":"biom rbiom-class object, data coercible as_rbiom(). file Path output file. File names ending .gz .bz2 compressed accordingly. write_fasta() write_tree() can file=NULL, returns string output written. format Options \"tab\", \"json\", \"hdf5\", corresponding classic tabular format, BIOM format version 1.0 biom version 2.1, respectively. NOTE: write HDF5 formatted BIOM files, BioConductor R package rhdf5 must installed. Default: \"json\" quote, sep, ... Parameters passed write.table(). Default: quote=FALSE, sep=\"\\t\" depth, n, seed Passed rarefy_cols(). write_xlsx() , depth=0 disables rarefaction. Default: depth='auto', n=NULL, seed=0 seed Random seed use rarefying. See rarefy_cols() function details. Default: 0 unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" -  Replaces OTU name. \"grouped\" -  Replaces higher rank's name. \"drop\" -  Excludes result. \"asis\" -  check/modify taxa names. Default: \"singly\"  Abbreviations allowed.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save an rbiom object to a file. — write_biom","text":"normalized filepath written (invisibly).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save an rbiom object to a file. — write_biom","text":"write_xlsx(), attributes(biom) saved additional worksheets attribute data frame, matrix, dist -class object. attribute named 'Reads Per Step' treated specially merged usual 'Reads Per Sample' tab.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save an rbiom object to a file. — write_biom","text":"","code":"library(rbiom)          write_tree(hmp50) %>% substr(1, 50) #> [1] \"(((((((((((((EschC738:0.03627,(((Unc92490:0.05748,\"          if (FALSE) {            hmp10        <- hmp50$clone()       hmp10$counts <- hmp10$counts[,1:10] %>% rarefy_cols()              attr(hmp10, \"Weighted UniFrac\")   <- bdiv_distmat(hmp10, 'unifrac')       attr(hmp10, \"Unweighted Jaccard\") <- bdiv_distmat(hmp10, 'jaccard', weighted=F)              outfile <- write_xlsx(hmp10, tempfile(fileext = \".xlsx\"))     }"},{"path":"https://cmmr.github.io/rbiom/news/index.html","id":"rbiom-200","dir":"Changelog","previous_headings":"","what":"rbiom 2.0.0","title":"rbiom 2.0.0","text":"Major release significant new features. Plotting added. Statistics added. Caching added. Clearer naming scheme functions. Previous names still work deprecated. Generation human-readable ggplot2 code modifying plots outside rbiom. Provenience tracking BIOM objects derivatives.","code":""},{"path":"https://cmmr.github.io/rbiom/news/index.html","id":"rbiom-103","dir":"Changelog","previous_headings":"","what":"rbiom 1.0.3","title":"rbiom 1.0.3","text":"CRAN release: 2021-11-05 Corrects breaking changes ‘rhdf5’ package.","code":""},{"path":"https://cmmr.github.io/rbiom/news/index.html","id":"rbiom-102","dir":"Changelog","previous_headings":"","what":"rbiom 1.0.2","title":"rbiom 1.0.2","text":"CRAN release: 2020-05-29 Improved compatibility Debian Solaris. ‘rhdf5’ package now optional dependency. select() subset() functions now subset sequences .","code":""},{"path":"https://cmmr.github.io/rbiom/news/index.html","id":"rbiom-100","dir":"Changelog","previous_headings":"","what":"rbiom 1.0.0","title":"rbiom 1.0.0","text":"CRAN release: 2020-05-26 Initial Release","code":""}]
