[{"path":[]},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"automatic-colors","dir":"Articles","previous_headings":"Colors","what":"Automatic colors","title":"Mapping Metadata to Aesthetics","text":"stat.needs name metadata field ’d like color . cases, rbiom select appropriate color-blind safe palette use.","code":"stat.by = \"Sex\""},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"custom-colors","dir":"Articles","previous_headings":"Colors","what":"Custom colors","title":"Mapping Metadata to Aesthetics","text":"can map metadata values color ’d like using syntax following examples. can use hexadecimal codes 657 named R colors (type colors() list).","code":"stat.by = \"Sex\", colors = c(\"cyan\", \"#FFC83D\") stat.by = \"Sex\", colors = c('Male' = \"cyan\", 'Female' = \"#FFC83D\")"},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"built-in-palettes","dir":"Articles","previous_headings":"Colors","what":"Built-in palettes","title":"Mapping Metadata to Aesthetics","text":"collection color-blind friendly palettes pre-defined rbiom. compiled multiple sources: Crameri, Fabio (2023). Scientific colour maps. website   doi Frerebeau, Nicolas (2023). khroma: Colour Schemes Scientific Data Visualization. website   doi Neuwirth, Erich (2022). ColorBrewer Palettes. website Okabe, Masataka, Ito, Key (2008). Color Universal Design (CUD): Make Figures Presentations Friendly Colorblind People. website Tol, Paul (2021). Colour Schemes. pdf","code":"# Most plots assign colors from a single categorical metadata field. stat.by = \"Body Site\", colors = \"bright\"  # Heatmap plots allow multiple metadata fields of any type. color.by = c('Body Site' = \"okabe\", 'Age' = \"bamako\")"},{"path":[]},{"path":[]},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"reversing-a-palette","dir":"Articles","previous_headings":"Colors > Built-in palettes","what":"Reversing a palette","title":"Mapping Metadata to Aesthetics","text":"Prefix palette name dash (-) reverse color order. also helpful assigning colors heatmap’s main grid.","code":"color.by = c('Age' = \"-bamako\") grid = \"-imola\""},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"patterns","dir":"Articles","previous_headings":"","what":"Patterns","title":"Mapping Metadata to Aesthetics","text":"Options \"brick\", \"chevron\", \"fish\", \"grid\", \"herringbone\", \"hexagon\", \"octagon\", \"rain\", \"saw\", \"shingle\", \"rshingle\", \"stripe\", \"wave\".  Pattern names can optionally suffixed modifiers change line width/style, tile size/rotation, .  can allow rbiom choose set patterns, can explicitly define mappings. See fillpattern complete documentation pattern options.","code":"stat.by = \"Body Site\", patterns = TRUE stat.by = \"Sex\", patterns = c(\"brick\", \"stripe35_lg\") stat.by = \"Sex\", patterns = c('Male' = \"brick20\", 'Female' = \"shingle\")"},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"shapes","dir":"Articles","previous_headings":"","what":"Shapes","title":"Mapping Metadata to Aesthetics","text":"Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. 65:90 = -Z; 97:122 = -z use letters instead shapes plot. Text strings may used well.","code":"# One categorical metadata field may be specified. stat.by = \"Body Site\" stat.by = \"Sex\", shapes = c(7, 8) stat.by = \"Sex\", shapes = c('Stool' = 7, 'Saliva' = 8)"},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"facets","dir":"Articles","previous_headings":"","what":"Facets","title":"Mapping Metadata to Aesthetics","text":"Faceting allows split dataset multiple sub-plots one categorical metadata fields. example:","code":"biom <- rarefy(hmp50)  adiv_boxplot(biom, stat.by = \"Body Site\", facet.by = \"Sex\") adiv_boxplot(biom, stat.by = \"Sex\", facet.by = \"Body Site\")"},{"path":"https://cmmr.github.io/rbiom/articles/aes.html","id":"auto-generated-facets","dir":"Articles","previous_headings":"Facets","what":"Auto-generated facets","title":"Mapping Metadata to Aesthetics","text":"Plotting functions often allow specify multiple ranks, taxa, metrics, etc automatically assigned facet dimension. can still add facets plots.","code":"adiv_boxplot(biom, bdiv = c(\"Bray-Curtis\", \"Euclidean\")) adiv_boxplot(biom, bdiv = c(\"Bray-Curtis\", \"Euclidean\"), facet.by = \"Sex\")"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/articles/convert.html","id":"rbiom-qiime-2","dir":"Articles","previous_headings":"QIIME 2","what":"rbiom ➡ QIIME 2","title":"QIIME 2, mothur, and BioConductor","text":"R, export QIIME 2-compatible files. write_qiime2() creates files named 'hmp50_counts.tsv', 'hmp50_metadata.tsv', 'hmp50_taxonomy.tsv', 'hmp50_tree.nwk', 'hmp50_seqs.fna'. command line, convert files QIIME 2 format (.qza). Examples: browsing metadata running unifrac","code":"library(rbiom)  # where to save the files project_dir <- tempdir()  write_qiime2(biom = hmp50, dir = project_dir, prefix = 'hmp50_') # Convert classic BIOM table to HDF5 biom convert -i hmp50_counts.tsv -o hmp50_counts.hdf5 --to-hdf5  # Import counts qiime tools import \\   --input-path hmp50_counts.hdf5 \\   --type 'FeatureTable[Frequency]' \\   --input-format BIOMV210Format \\   --output-path hmp50-counts.qza  # Import taxonomy qiime tools import \\  --input-path hmp50_taxonomy.tsv \\  --type FeatureData[Taxonomy] \\  --output-path hmp50-taxonomy.qza  # Import phylogenetic tree qiime tools import \\   --input-path hmp50_tree.nwk \\   --type 'Phylogeny[Rooted]' \\   --output-path hmp50-tree.qza qiime diversity-lib weighted-unifrac \\   --i-table hmp50-counts.qza \\   --i-phylogeny hmp50-tree.qza \\   --o-distance-matrix weighted-unifrac-dm.qza    qiime metadata tabulate \\   --m-input-file hmp50_metadata.tsv \\   --o-visualization hmp50-metadata-browser.qzv # View .qza files with https://view.qiime2.org"},{"path":"https://cmmr.github.io/rbiom/articles/convert.html","id":"qiime-2-rbiom","dir":"Articles","previous_headings":"QIIME 2","what":"QIIME 2 ➡ rbiom","title":"QIIME 2, mothur, and BioConductor","text":"command line, export data files QIIME 2. commands create files named 'feature-table.biom', 'taxonomy.tsv', 'tree.nwk'. R, import data files rbiom.","code":"# Export a feature table, taxonomy, and tree qiime tools export --input-path hmp50-counts.qza   --output-path . qiime tools export --input-path hmp50-taxonomy.qza --output-path . qiime tools export --input-path hmp50-tree.qza     --output-path . # project_dir = directory with relevant files  withr::with_dir(project_dir, {    biom <- as_rbiom(     biom     = 'feature-table.biom',      metadata = 'hmp50_metadata.tsv',      taxonomy = 'taxonomy.tsv',      tree     = 'tree.nwk' )    })"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/articles/convert.html","id":"rbiom-mothur","dir":"Articles","previous_headings":"mothur","what":"rbiom ➡ mothur","title":"QIIME 2, mothur, and BioConductor","text":"R, export mothur-compatible files. write_mothur() creates files named 'hmp50_counts.tsv', 'hmp50_metadata.tsv', 'hmp50_taxonomy.tsv', 'hmp50_tree.nwk', 'hmp50_seqs.fna'. mothur command prompt, import BIOM data. make.shared() command creates files named 'hmp50_counts.asv.list' 'hmp50_counts.asv.shared'.","code":"library(rbiom)  # where to save the files project_dir <- tempdir()  write_mothur(biom = hmp50, dir = project_dir, prefix = 'hmp50_') mothur > make.shared(count=hmp50_counts.tsv, label=asv) mothur > unifrac.unweighted(tree=hmp50_tree.nwk, count=hmp50_counts.tsv)"},{"path":"https://cmmr.github.io/rbiom/articles/convert.html","id":"mothur-rbiom","dir":"Articles","previous_headings":"mothur","what":"mothur ➡ rbiom","title":"QIIME 2, mothur, and BioConductor","text":"mothur command prompt, export biom file. make.biom() command creates file named 'hmp50_counts.asv.asv.biom'. R, import biom file rbiom.","code":"mothur > make.biom( \\   shared=hmp50_counts.asv.shared, \\   constaxonomy=hmp50_taxonomy.tsv, \\   metadata=hmp50_metadata.tsv, \\   output=simple ) # project_dir = directory with relevant files  withr::with_dir(project_dir, {    biom <- as_rbiom('hmp50_counts.asv.asv.biom')    # Optionally add a tree and/or sequences   biom$tree <- 'hmp50_tree.nwk'   biom$seqs <- 'hmp50_seqs.fna'    })"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/articles/convert.html","id":"rbiom-phyloseq","dir":"Articles","previous_headings":"BioConductor R Packages","what":"rbiom ➡ phyloseq","title":"QIIME 2, mothur, and BioConductor","text":"","code":"# An rbiom object biom <- rbiom::hmp50  # A phyloseq object physeq <- rbiom::convert_to_phyloseq(biom)"},{"path":"https://cmmr.github.io/rbiom/articles/convert.html","id":"phyloseq-rbiom","dir":"Articles","previous_headings":"BioConductor R Packages","what":"phyloseq ➡ rbiom","title":"QIIME 2, mothur, and BioConductor","text":"","code":"# A phyloseq object data(enterotype, package = 'phyloseq') physeq <- enterotype  # An rbiom object biom <- rbiom::as_rbiom(physeq)"},{"path":"https://cmmr.github.io/rbiom/articles/convert.html","id":"rbiom-summarizedexperiment","dir":"Articles","previous_headings":"BioConductor R Packages","what":"rbiom ➡ SummarizedExperiment","title":"QIIME 2, mothur, and BioConductor","text":"","code":"# An rbiom object biom <- rbiom::hmp50  # A SummarizedExperiment object se <- rbiom::convert_to_SE(biom)"},{"path":"https://cmmr.github.io/rbiom/articles/convert.html","id":"summarizedexperiment-rbiom","dir":"Articles","previous_headings":"BioConductor R Packages","what":"SummarizedExperiment ➡ rbiom","title":"QIIME 2, mothur, and BioConductor","text":"","code":"# `se` is a SummarizedExperiment object  # Convert to rbiom object biom <- rbiom::as_rbiom(se)"},{"path":"https://cmmr.github.io/rbiom/articles/convert.html","id":"rbiom-treesummarizedexperiment","dir":"Articles","previous_headings":"BioConductor R Packages","what":"rbiom ➡ TreeSummarizedExperiment","title":"QIIME 2, mothur, and BioConductor","text":"","code":"# An rbiom object biom <- rbiom::hmp50  # A TreeSummarizedExperiment object tse <- rbiom::convert_to_TSE(biom)"},{"path":"https://cmmr.github.io/rbiom/articles/convert.html","id":"treesummarizedexperiment-rbiom","dir":"Articles","previous_headings":"BioConductor R Packages","what":"TreeSummarizedExperiment ➡ rbiom","title":"QIIME 2, mothur, and BioConductor","text":"","code":"# `tse` is a TreeSummarizedExperiment object  # Convert to rbiom object biom <- rbiom::as_rbiom(tse)"},{"path":"https://cmmr.github.io/rbiom/articles/importing.html","id":"create-an-rbiom-object","dir":"Articles","previous_headings":"","what":"Create an rbiom object","title":"Importing Datasets","text":"fastest way make rbiom object as_rbiom(), accepts: filepath URL BIOM file. abundance matrix OTUs rows samples columns. phyloseq-class object, phyloseq Bioconductor R package. list counts optionally metadata, taxonomy, tree, etc (see as_rbiom()). Now biom, rbiom-class object can used package’s functions. loaded data BIOM file phyloseq object, might already include metadata, ranks, tree. attributes technically optional. However, analyses possible extra information samples OTUs present. See [QIIME 2, mothur, BioConductor][convert] page instructions import data packages.","code":"library(rbiom)  # create a simple matrix ------------------------ mtx <- matrix(   data     = floor(runif(24) * 1000),    nrow     = 6,    dimnames = list(paste0(\"OTU\", 1:6), paste0(\"Sample\", 1:4)) ) mtx #>      Sample1 Sample2 Sample3 Sample4 #> OTU1      80     497      34     388 #> OTU2     834     289     320     975 #> OTU3     600     732     402     289 #> OTU4     157     772     195     678 #> OTU5       7     874     403     735 #> OTU6     466     174      63     195  # convert matrix to rbiom ----------------------- biom <- as_rbiom(biom = mtx) biom #>  #> ══ Untitled Dataset ════════════════════════════════════════ #>  #>       4 Samples: Sample1, Sample2, Sample3, and Sample4 #>       6 OTUs:    OTU1, OTU2, OTU3, OTU4, OTU5, and OTU6 #>       1 Ranks:   .otu #>       1 Fields:  .sample #>         Tree:    <absent> #>  #> ── 1.4k - 3.3k reads/sample ────────────────── 2025-02-04 ── #>   # convert from phyloseq to rbiom ---------------- file <- system.file(\"extdata\", \"rich_sparse_otu_table.biom\", package=\"phyloseq\") phy  <- phyloseq::import_biom(file) phy #> phyloseq-class experiment-level object #> otu_table()   OTU Table:         [ 5 taxa and 6 samples ] #> sample_data() Sample Data:       [ 6 samples by 4 sample variables ] #> tax_table()   Taxonomy Table:    [ 5 taxa by 7 taxonomic ranks ]  biom <- as_rbiom(biom = phy) biom #>  #> ══ Imported phyloseq Data ══════════════════════════════════ #>  #>       6 Samples: Sample1, Sample2, ..., and Sample6 #>       5 OTUs:    GG_OTU_1, GG_OTU_2, GG_OTU_3, ... #>       8 Ranks:   .otu, Rank1, Rank2, ..., and Rank7 #>       5 Fields:  .sample, BarcodeSequence, ... #>         Tree:    <absent> #>  #> ── 3 - 7 reads/sample ──────────────────────── 2025-02-04 ── #>"},{"path":"https://cmmr.github.io/rbiom/articles/importing.html","id":"attach-metadata","dir":"Articles","previous_headings":"","what":"Attach metadata","title":"Importing Datasets","text":"$metadata lets set arbitrary data sample. quick rules: .sample first column. column names start dot (.). Sample names need match biom$samples.","code":"# create example metadata ----------------------- md <- data.frame(   .sample   = paste0(\"Sample\", 1:4),   state     = c(\"TX\", \"TX\", \"WA\", \"WA\"),   age       = c(32, 19, 36, 40),   treatment = c(1, 2, 1, 2) ) md #>   .sample state age treatment #> 1 Sample1    TX  32         1 #> 2 Sample2    TX  19         2 #> 3 Sample3    WA  36         1 #> 4 Sample4    WA  40         2  # add metadata to rbiom object ------------------ biom <- as_rbiom(biom = mtx) biom$metadata <- md biom #>  #> ══ Untitled Dataset ════════════════════════════════════════ #>  #>       4 Samples: Sample1, Sample2, Sample3, and Sample4 #>       6 OTUs:    OTU1, OTU2, OTU3, OTU4, OTU5, and OTU6 #>       1 Ranks:   .otu #>       4 Fields:  .sample, state, age, and treatment #>         Tree:    <absent> #>  #> ── 1.4k - 3.3k reads/sample ────────────────── 2025-02-04 ── #>   # or in a single step --------------------------- biom <- as_rbiom(biom = list(counts = mtx, metadata = md)) biom #>  #> ══ Untitled Dataset ════════════════════════════════════════ #>  #>       4 Samples: Sample1, Sample2, Sample3, and Sample4 #>       6 OTUs:    OTU1, OTU2, OTU3, OTU4, OTU5, and OTU6 #>       1 Ranks:   .otu #>       4 Fields:  .sample, state, age, and treatment #>         Tree:    <absent> #>  #> ── 1.4k - 3.3k reads/sample ────────────────── 2025-02-04 ── #>"},{"path":"https://cmmr.github.io/rbiom/articles/importing.html","id":"setting-categorical-variables","dir":"Articles","previous_headings":"Attach metadata","what":"Setting categorical variables","title":"Importing Datasets","text":"categorical metadata variable looks numerical, “treatment” example, need manually changed categorical variable.","code":"class(pull(biom, 'treatment')) #> [1] \"numeric\"  biom$metadata$treatment %<>% as.factor()  class(pull(biom, 'treatment')) #> [1] \"factor\" pull(biom, 'treatment') #> Sample1 Sample2 Sample3 Sample4  #>       1       2       1       2  #> Levels: 1 2"},{"path":"https://cmmr.github.io/rbiom/articles/importing.html","id":"attach-a-tree","dir":"Articles","previous_headings":"","what":"Attach a tree","title":"Importing Datasets","text":"Use $tree set tree. can specify phylo object directly, newick file/string.","code":"# define a random tree -------------------------- biom$tree <- \"(((OTU6,(OTU5,OTU4)),OTU3),(OTU2,OTU1));\" biom #>  #> ══ Untitled Dataset ════════════════════════════════════════ #>  #>       4 Samples: Sample1, Sample2, Sample3, and Sample4 #>       6 OTUs:    OTU1, OTU2, OTU3, OTU4, OTU5, and OTU6 #>       1 Ranks:   .otu #>       4 Fields:  .sample, state, age, and treatment #>         Tree:    <present> #>  #> ── 1.4k - 3.3k reads/sample ────────────────── 2025-02-04 ── #>"},{"path":"https://cmmr.github.io/rbiom/articles/importing.html","id":"attach-taxonomy","dir":"Articles","previous_headings":"","what":"Attach taxonomy","title":"Importing Datasets","text":"Use $taxonomy define taxonomic clades OTU.","code":"# .otu must match otu_names(biom) --------------- map <- data.frame(   .otu   = paste0(\"OTU\", 1:6),   Phylum = c(\"Bacteroidetes\", \"Firmicutes\", \"Firmicutes\"),   Order  = c(\"Bacteroidia\", \"Clostridiales\", \"Bacillales\") ) map #>   .otu        Phylum         Order #> 1 OTU1 Bacteroidetes   Bacteroidia #> 2 OTU2    Firmicutes Clostridiales #> 3 OTU3    Firmicutes    Bacillales #> 4 OTU4 Bacteroidetes   Bacteroidia #> 5 OTU5    Firmicutes Clostridiales #> 6 OTU6    Firmicutes    Bacillales  biom$taxonomy <- map biom #>  #> ══ Untitled Dataset ════════════════════════════════════════ #>  #>       4 Samples: Sample1, Sample2, Sample3, and Sample4 #>       6 OTUs:    OTU1, OTU2, OTU3, OTU4, OTU5, and OTU6 #>       3 Ranks:   .otu, Phylum, and Order #>       4 Fields:  .sample, state, age, and treatment #>         Tree:    <present> #>  #> ── 1.4k - 3.3k reads/sample ────────────────── 2025-02-04 ── #>"},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"box-plots","dir":"Articles","previous_headings":"","what":"Box Plots","title":"Plot Types","text":"Box plots useful visualizing numeric outcome one categorical predictors. rbiom package provides dedicated functions three numeric outcomes: Alpha Diversity (shannon, simpson, etc) - adiv_boxplot(). Beta Diversity (unifrac, bray-curtis, etc) - bdiv_boxplot(). Taxa Abundance (phylum, genus, etc) - taxa_boxplot(). can map categorical metadata variables x-axis, colors, patterns, shapes, facets. See Mapping Metadata Aesthetics details.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"layers","dir":"Articles","previous_headings":"Box Plots","what":"Layers","title":"Plot Types","text":"Despite refered “box plots”, rbiom’s *_boxplot() functions support wide range graphical elements beyond box--whisker. can assign one following options box plot’s layers parameter.  Unambiguous abbreviations also accepted. instance, layers = c(\"box\", \"dot\") equivalent layers = c(\"x\", \"d\") layers = \"xd\". Note single letter abbreviation “box” “x” (“bar” “b”).","code":""},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"examples","dir":"Articles","previous_headings":"Box Plots","what":"Examples","title":"Plot Types","text":"","code":"biom <- rarefy(hmp50, depth = 1000)  adiv <- adiv_boxplot(   biom = biom, layers = \"bes\", x = \"Sex\", stat.by = \"Sex\")    bdiv <- bdiv_boxplot(   biom = biom, layers = \"xd\", x = \"==Body Site\", stat.by = \"Body Site\",    pt.alpha = 0.2, pt.stroke = 0 )  taxa <- taxa_boxplot(   biom = biom, layers = \"p\", x = \"Body Site\", p.label = 0, taxa = 3,    facet.ncol = 1, facet.strip.position = \"right\" )  patchwork::wrap_plots(   lapply(list(adiv, bdiv, taxa), function (p) {     p +        ggplot2::labs(x = NULL, caption = NULL) +        ggplot2::theme(legend.position = \"none\") }))"},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"statistics","dir":"Articles","previous_headings":"Box Plots","what":"Statistics","title":"Plot Types","text":"categorical groups defined x, stat., etc used calculate non-parametric statistics Mann-Whitney Kruskal-Wallis algorithms. See Statistics details.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"correlation-plots","dir":"Articles","previous_headings":"","what":"Correlation Plots","title":"Plot Types","text":"Correlation plots designed visualize relationship numeric outcome numeric predictor, optionally additional categorical predictors. rbiom package provides dedicated functions three numeric outcomes: Alpha Diversity (shannon, simpson, etc) - adiv_corrplot(). Beta Diversity (unifrac, bray-curtis, etc) - bdiv_corrplot(). Taxa Abundance (phylum, genus, etc) - taxa_corrplot(). can map categorical metadata variables x-axis, colors, facets. See Mapping Metadata Aesthetics details.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"layers-1","dir":"Articles","previous_headings":"Correlation Plots","what":"Layers","title":"Plot Types","text":"can assign one following options correlation plot’s layers parameter.  Unambiguous abbreviations also accepted. instance, layers = c(\"trend\", \"point\") equivalent layers = c(\"t\", \"p\") layers = \"tp\".","code":""},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"examples-1","dir":"Articles","previous_headings":"Correlation Plots","what":"Examples","title":"Plot Types","text":"","code":"biom <- rarefy(hmp50, depth = 1000)  adiv <- adiv_corrplot(biom, layers = \"ts\", x = \"BMI\")    bdiv <- bdiv_corrplot(   biom = biom, layers = \"tc\", x = \"BMI\", stat.by = \"==Body Site\",    limit.by = list(\"Body Site\" = c(\"Buccal mucosa\", \"Stool\")) )  taxa <- taxa_corrplot(   biom = biom, layers = \"tsr\", x = \"Age\", taxa = 3, stat.by = \"Body Site\",    limit.by = list(\"Body Site\" = c(\"Mid vagina\", \"Saliva\", \"Stool\")),   facet.ncol = 1, facet.strip.position = \"right\" )  patchwork::wrap_plots(   guides = \"collect\",   lapply(list(adiv, bdiv, taxa), function (p) {     p + ggplot2::labs(caption = NULL) }))"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"layers-2","dir":"Articles","previous_headings":"Ordination Plots","what":"Layers","title":"Plot Types","text":"can assign one following options ordination plot’s layers parameter.  Unambiguous abbreviations also accepted. instance, layers = c(\"point\", \"ellipse\") equivalent layers = c(\"p\", \"e\") layers = \"pe\". layers c(\"point\", \"spider\", \"ellipse\", \"name\") apply samples. layers c(\"mean\", \"taxon\", \"arrow\") apply taxa.","code":"#> Warning in MASS::cov.trob(data[, vars]): Probable convergence failure"},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"examples-2","dir":"Articles","previous_headings":"Ordination Plots","what":"Examples","title":"Plot Types","text":"","code":"biom <- rarefy(hmp50)  p1 <- bdiv_ord_plot(biom, layers = \"pse\", stat.by = \"Body Site\") +         ggplot2::theme(legend.position = \"none\")  p2 <- bdiv_ord_plot(biom, layers = \"emt\", stat.by = \"Body Site\")  patchwork::wrap_plots(p1, p2, guides = \"collect\")"},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"heatmaps","dir":"Articles","previous_headings":"","what":"Heatmaps","title":"Plot Types","text":"Visualizing large grid values job heatmaps. generic plot_heatmap() function accepts matrix, two common use cases operate biom object. Beta Diversity (unifrac, bray-curtis, etc) - bdiv_heatmap(). Taxa Abundance (phylum, genus, etc) - taxa_heatmap().","code":""},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"examples-3","dir":"Articles","previous_headings":"Heatmaps","what":"Examples","title":"Plot Types","text":"","code":"biom <- rarefy(hmp50)  bdiv <- bdiv_heatmap(biom, tracks = c(\"Age\", \"Body Site\"), asp = 0.4) taxa <- taxa_heatmap(biom, tracks = c(\"Age\", \"Body Site\"), asp = 0.4)  patchwork::wrap_plots(bdiv, taxa, ncol = 1, guides = \"collect\") #> Warning in plot_theme(plot): The `underscores` theme element is not #> defined in the element hierarchy."},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"stacked-bar-plots","dir":"Articles","previous_headings":"","what":"Stacked Bar Plots","title":"Plot Types","text":"Taxa stacked bar plots show information taxa heatmap. advantages.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/plots.html","id":"examples-4","dir":"Articles","previous_headings":"Stacked Bar Plots","what":"Examples","title":"Plot Types","text":"","code":"taxa_stacked(rarefy(hmp50), taxa = 10)"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"create","dir":"Articles","previous_headings":"","what":"Create","title":"rbiom","text":"general purpose as_rbiom() function can convert data types rbiom object - see importing details. ’ll import dataset BIOM file.","code":"library(rbiom)  file <- system.file(package = \"rbiom\", \"extdata\", \"hmp50.bz2\") biom <- as_rbiom(file)  biom #>  #> ══ Human Microbiome Project - 50 Sample Demo ═══════════════ #>  #> Oral, nasal, vaginal, and fecal samples from a diverse set #> of healthy volunteers. Source: Human Microbiome Project #> (<https://hmpdacc.org>). #>  #>      50 Samples: HMP01, HMP02, HMP03, ..., and HMP50 #>     490 OTUs:    Unc01yki, Unc53100, LtbAci52, ... #>       7 Ranks:   .otu, Kingdom, Phylum, ..., and Genus #>       5 Fields:  .sample, Age, BMI, Body Site, and Sex #>         Tree:    <present> #>  #> ── 182 - 22k reads/sample ──────────────────── 2023-09-22 ── #>"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"inspect","dir":"Articles","previous_headings":"","what":"Inspect","title":"rbiom","text":"rbiom object many helpful accessors. pull(), sample_sums(), taxa_matrix(), taxa_means(), taxa_sums()","code":"biom$counts[1:4,1:8] %>% as.matrix() #>          HMP01 HMP02 HMP03 HMP04 HMP05 HMP06 HMP07 HMP08 #> Unc01yki     0     0     0     0     0     0     0     0 #> Unc53100  1083   543   301   223  2672   748  2436   321 #> LtbAci52     0     0     0     0     0     0     0     0 #> CnbTube3     0     0     0     0     0     0     0     0  biom$fields #> [1] \".sample\"   \"Age\"       \"BMI\"       \"Body Site\" \"Sex\"  # Use pull() to automatically setNames(). pull(biom, 'Age') %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>    22    24    28    25    27    32"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"clone","dir":"Articles","previous_headings":"","what":"Clone","title":"rbiom","text":"Rbiom objects passed reference. common <- assignment operator creates second reference object - create second object. create copy rbiom object, use object’s $clone() method.","code":"a <- as_rbiom(file) b <- a$clone()  # Correct  a$n_samples #> [1] 50 b$metadata %<>% head() #> Warning: ℹ Dropping 44 samples from biom object since they are not in the new metadata: #>   \"HMP07\", \"HMP08\", \"HMP09\", \"HMP10\", \"HMP11\", \"HMP12\", \"HMP13\", \"HMP14\", #>   \"HMP15\", \"HMP16\", \"HMP17\", \"HMP18\", \"HMP19\", \"HMP20\", \"HMP21\", \"HMP22\", #>   \"HMP23\", \"HMP24\", …, \"HMP49\", and \"HMP50\". a$n_samples #> [1] 50 a <- as_rbiom(file) b <- a  # Wrong  a$n_samples #> [1] 50 b$metadata %<>% head() #> Warning: ℹ Dropping 44 samples from biom object since they are not in the new metadata: #>   \"HMP07\", \"HMP08\", \"HMP09\", \"HMP10\", \"HMP11\", \"HMP12\", \"HMP13\", \"HMP14\", #>   \"HMP15\", \"HMP16\", \"HMP17\", \"HMP18\", \"HMP19\", \"HMP20\", \"HMP21\", \"HMP22\", #>   \"HMP23\", \"HMP24\", …, \"HMP49\", and \"HMP50\". a$n_samples #> [1] 6"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"modify","dir":"Articles","previous_headings":"","what":"Modify","title":"rbiom","text":"seven components rbiom object can modify directly. Assigning new values components trigger validation checks inter-component OTU/sample synchronization. See Working rbiom Objects additional details.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"rarefy-counts","dir":"Articles","previous_headings":"Modify","what":"Rarefy Counts","title":"rbiom","text":"common way normalize microbiome count data rarefy . process drops samples observations, randomly removes observations remaining samples, samples “rarefaction depth”.","code":"sample_sums(biom) %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>  1660  1371  1353  1895  3939  4150  biom <- rarefy(biom)  sample_sums(biom) %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>  1183  1183  1183  1183  1183  1183"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"add-metadata","dir":"Articles","previous_headings":"Modify","what":"Add Metadata","title":"rbiom","text":"Additional sample metadata columns can added biom$metadata (tibble data.frame). first column, '.sample', used rbiom link sample metadata samples abundance table. mutate(), rename()","code":"biom$metadata$group <- sample(c('A', 'B'), biom$n_samples, TRUE) biom %<>% mutate(Obese = BMI >= 30, Sex = NULL) biom %<>% rename('Years Old' = \"Age\") biom$metadata #> # A tibble: 49 × 6 #>   .sample `Years Old`   BMI `Body Site`   group Obese #> * <chr>         <dbl> <dbl> <fct>         <fct> <lgl> #> 1 HMP01            22    20 Buccal mucosa B     FALSE #> 2 HMP02            24    23 Buccal mucosa B     FALSE #> 3 HMP03            28    26 Saliva        B     FALSE #> 4 HMP04            25    23 Saliva        A     FALSE #> 5 HMP05            27    24 Buccal mucosa B     FALSE #> # ℹ 44 more rows"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"subset-samples","dir":"Articles","previous_headings":"Modify","what":"Subset Samples","title":"rbiom","text":"Removing samples metadata remove samples entire rbiom object. subset(), slice()","code":"biom %<>% subset(`Body Site` == \"Anterior nares\") biom$metadata #> # A tibble: 10 × 6 #>   .sample `Years Old`   BMI `Body Site`    group Obese #> * <chr>         <dbl> <dbl> <fct>          <fct> <lgl> #> 1 HMP10            22    20 Anterior nares B     FALSE #> 2 HMP15            25    21 Anterior nares A     FALSE #> 3 HMP16            24    19 Anterior nares A     FALSE #> 4 HMP25            33    32 Anterior nares B     TRUE  #> 5 HMP31            31    20 Anterior nares A     FALSE #> # ℹ 5 more rows biom #>  #> ══ Human Microbiome Project - 50 Sample Demo ═══════════════ #>  #> Oral, nasal, vaginal, and fecal samples from a diverse set #> of healthy volunteers. Source: Human Microbiome Project #> (<https://hmpdacc.org>). #>  #>      10 Samples: HMP10, HMP15, HMP16, ..., and HMP48 #>     162 OTUs:    Unc01yki, Unc53100, LtbAci52, ... #>       7 Ranks:   .otu, Kingdom, Phylum, ..., and Genus #>       6 Fields:  .sample, Years Old, BMI, ..., and Obese #>         Tree:    <present> #>  #> ── 1183 reads/sample ───────────────────────── 2023-09-22 ── #>"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"compute","dir":"Articles","previous_headings":"","what":"Compute","title":"rbiom","text":"Functions end _table _matrix return calculation results use outside rbiom. _table suffix indicates returned object tibble data.frame one computed value per row. Alternatively, _matrix return base R matrix. Functions taxa abundance (like taxa_table()) prefixed taxa_. Similarly, adiv_ used alpha diversity bdiv_ beta diversity. adiv_matrix(), adiv_table(), bdiv_table(), bdiv_ord_table(), taxa_table(), taxa_matrix()","code":"taxa_table(biom, rank = \"Phylum\") #> # A tibble: 60 × 9 #>   .rank  .sample .taxa      .abundance `Years Old`   BMI `Body Site` group Obese #>   <fct>  <chr>   <fct>           <dbl>       <dbl> <dbl> <fct>       <fct> <lgl> #> 1 Phylum HMP10   Actinobac…        685          22    20 Anterior n… B     FALSE #> 2 Phylum HMP10   Firmicutes        483          22    20 Anterior n… B     FALSE #> 3 Phylum HMP10   Proteobac…          5          22    20 Anterior n… B     FALSE #> 4 Phylum HMP10   Bacteroid…          9          22    20 Anterior n… B     FALSE #> 5 Phylum HMP10   Cyanobact…          0          22    20 Anterior n… B     FALSE #> # ℹ 55 more rows  taxa_matrix(biom, rank = \"Phylum\")[1:4, 1:8] #>                     HMP10 HMP15 HMP16 HMP25 HMP31 HMP32 HMP34 HMP40 #> Actinobacteria        685   851   649   453   658   616  1040   896 #> Bacteroidetes           9     4     2     0    84    12    14     1 #> Cyanobacteria           0     0     3     0     0    26     0     0 #> Deinococcus Thermus     0     0     0     0     0     0     0     1"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"visualize","dir":"Articles","previous_headings":"","what":"Visualize","title":"rbiom","text":"plotting functions rbiom make easy produce informative visualizations alpha diversity, beta diversity, taxa abundance, explore associations metrics sample metadata. See Plot Types article overview different plot options, Mapping Metadata Aesthetics guidance using colors, shapes, patterns represent metadata values. example, display ordination colored body site:  adiv_boxplot(), adiv_corrplot(), bdiv_boxplot(), bdiv_corrplot(), bdiv_heatmap(), bdiv_ord_plot(), rare_stacked(), rare_corrplot(), rare_multiplot(), taxa_stacked(), taxa_boxplot(), taxa_corrplot(), taxa_heatmap()","code":"bdiv_ord_plot(biom = hmp50, stat.by = \"Body Site\")"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"analyze","dir":"Articles","previous_headings":"","what":"Analyze","title":"rbiom","text":"Visualizations excellent way observe differences sample groups. stat.set, boxplots, corrplots, ord_plots include following: p-values brief methodology plot . $stats attribute detailed statistics table. $stats$code attribute R code used generate table. rbiom statistics article reviews topic greater detail.  adiv_stats(), bdiv_stats(), distmat_stats(), taxa_stats()","code":"p <- adiv_boxplot(hmp50, stat.by = \"Body Site\", facet.by = \"Sex\") p p$stats #> # Model:    kruskal.test(.diversity ~ `Body Site`) #> # A tibble: 2 × 7 #>   Sex    .stat .h1      .p.val   .adj.p    .n   .df #>   <fct>  <dbl> <fct>     <dbl>    <dbl> <int> <int> #> 1 Female  24.1 > 0   0.0000761 0.000152    30     4 #> 2 Male    13.9 > 0   0.00302   0.00302     20     3  p$stats$code #> data <- adiv_table(biom, md = c(\"Body Site\", \"Sex\")) #>  #> data %<>% dplyr::rename( #>   .resp    = \".diversity\",  #>   .stat.by = \"Body Site\" ) #>  #> stats <- plyr::ddply(data, .(Sex), function (data) { #>   tryCatch(error = function (e) data.frame()[1,], suppressWarnings({ #>  #>     data %>%  #>       stats::kruskal.test(.resp ~ .stat.by, .) %>% #>       with(tibble( #>         .stat  = statistic,  #>         .h1    = factor('> 0'),  #>         .p.val = p.value,  #>         .n     = nrow(data),  #>         .df    = parameter )) #>  #>   })) #> }) %>%  #>   tibble::as_tibble() %>%  #>   dplyr::mutate(.adj.p = p.adjust(.p.val, 'fdr'), .after = .p.val) %>%  #>   dplyr::arrange(.p.val)"},{"path":"https://cmmr.github.io/rbiom/articles/rbiom.html","id":"share","dir":"Articles","previous_headings":"","what":"Share","title":"rbiom","text":"Plots essentially ggplot objects, ggplot2::ggsave() can save PNG, PDF, SVG, many image file types. save rbiom object BIOM file, use write_biom(). sharing dataset someone unfamiliar accessing BIOM files, write_xlsx() also option. additional resources know : R Markdown - reproducible analyses/reports. flexdashboard - interactive dashboards. atima - rbiom website form. ggplot2::ggsave(), patchwork::wrap_plots(), write_biom(), write_xlsx()","code":""},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Regression","text":"Regression functions provided examining association two continuous variables. Examples continuous variables alpha diversity metrics, taxa abundances, sample metadata age BMI. numeric range data point can take value range.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"children-heights","dir":"Articles","previous_headings":"","what":"Children Heights","title":"Regression","text":"start simple example, consider children dataset R package npregfast. records age, sex, height 2500 children aged 5 19 years.","code":"head(npregfast::children) #>      sex height   age #> 1   male 150.77 13.25 #> 2 female 170.59 14.17 #> 3 female 167.31 15.17 #> 4 female 165.72 16.58 #> 5 female 171.67 15.17 #> 6 female 143.74 12.67"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"height-vs-age","dir":"Articles","previous_headings":"Children Heights","what":"Height vs Age","title":"Regression","text":"First, let’s plot ‘age’ vs ‘height’, overlay best-fit linear trendline. plot, ’re testing hypothesis “get older, height changes”.  ’d expect, trendline’s slope positive (p-value = 0). Therefore ’s safe say height changes age.","code":"stats_corrplot(   df       = npregfast::children,  # dataset   x        = 'age',                # x-axis variable   y        = 'height',             # y-axis variable   layers   = 'tp',                 # show trendline and points   test     = 'emtrends',           # run stats on the slope   fit      = 'lm',                 # straight trendline   pt.size  = 0.2,                  # make points smaller   pt.alpha = 0.2 )                 # and semi-transparent"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"grouped-by-sex","dir":"Articles","previous_headings":"Children Heights","what":"Grouped by Sex","title":"Regression","text":"rate growth influenced sex? can add stat.= \"sex\" draw separate lines males females.  , p-value 3.9e-51 indicates males females different growth rates. look captions last two plots, ’ll notice p-value test automatically changes. stat.= NULL, test = \"emtrends\" test slope zero. stat.NULL, test = \"emtrends\" test trendline slopes equal.","code":"stats_corrplot(   df       = npregfast::children,  # dataset   x        = 'age',                # x-axis variable   y        = 'height',             # y-axis variable   stat.by  = 'sex',                # statistical groups   <====   fit      = 'lm',                 # straight trendline   layers   = 'tp',                 # show trendline and points   test     = 'emtrends',           # run stats on the slopes   pt.size  = 0.2 )                 # make points smaller"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"smoothed-fit","dir":"Articles","previous_headings":"Children Heights","what":"Smoothed Fit","title":"Regression","text":"Linear trendlines probably aren’t best way model growth rates. Setting fit = \"gam\" use generalized additive model fits several sub-ranges age independent splines.  gives us much better idea moving average time. still test = \"emtrends\", p-value reported difference slope significant - case, age = 5.9 years.","code":"stats_corrplot(   df       = npregfast::children,  # dataset   x        = 'age',                # x-axis variable   y        = 'height',             # y-axis variable   stat.by  = 'sex',                # statistical groups   fit      = 'gam',                # smoothed trendline   <====   layers   = 'tp',                 # show trendline and points   test     = 'emtrends',           # run stats on the slopes   pt.size  = 0.2 )                 # make points smaller"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"difference-in-means","dir":"Articles","previous_headings":"Children Heights","what":"Difference in Means","title":"Regression","text":"Let’s set test = \"emmeans\" instead, show 95% confidence interval instead data points.  Differences height significant age = 16.8 (p-value = 8.9e-40).","code":"stats_corrplot(   df       = npregfast::children,  # dataset   x        = 'age',                # x-axis variable   y        = 'height',             # y-axis variable   stat.by  = 'sex',                # statistical groups   fit      = 'gam',                # smoothed trendline   layers   = 'tc',                 # show trendline with conf. int.   test     = 'emmeans' )           # run stats on the means   <===="},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"statistics-table","dir":"Articles","previous_headings":"","what":"Statistics Table","title":"Regression","text":"complete statistical output attached returned plot $stats. can also directly generate table stats_table() function. Depending arguments given, estimate term one : fields table include:","code":"st <- stats_table(   df       = npregfast::children,  # dataset   regr     = 'age',                # x-axis variable   resp     = 'height',             # y-axis variable   stat.by  = 'sex',                # statistical groups   fit      = 'gam',                # generalized additive model   test     = 'emmeans' )           # run stats on the means  # Print the table transposed, since it's one row by 14 columns. t(st) #>              [,1]            #> age          \"16.8\"          #> sex          \"female - male\" #> .mean.diff   \"-7.730025\"     #> .h1          \"!= 0\"          #> .p.val       \"8.875599e-40\"  #> .adj.p       \"8.875599e-40\"  #> .effect.size \"-1.205401\"     #> .se          \"0.5753545\"     #> .n           \"2500\"          #> .df          \"2485\"          #> .t.ratio     \"-13.43524\"     #> .adj.r       \"0.8313946\"     #> .aic         \"16403.78\"      #> .bic         \"16497.75\"      #> .loglik      \"-8185.756\""},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"marginal-means","dir":"Articles","previous_headings":"Statistics Table","what":"Marginal Means","title":"Regression","text":"Estimated marginal means (EMMs; also known least-squares means) means extracted statistical model. allows EMMs take account complex associations produce confidence intervals addition estimates mean. approach employed rbiom’s 'emmeans' 'emtrends' tests, using emmeans::emmeans package. Additional information EMMs available : Marginalia: Guide Figuring Heck Marginal Effects Decomposing, Probing, Plotting Interactions R","code":""},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"goodness-of-fit","dir":"Articles","previous_headings":"Statistics Table","what":"Goodness of Fit","title":"Regression","text":"statistics table several fields assessing well model fits data. .r.sqr - Coefficient Determination (R2); range: 0-1, lower better. Percent variation explained model. .adj.r - R2, taking degrees freedom account. .aic - Akaike Information Criterion; lower better. Preferred using model prediction. .bic - Bayesian Information Criterion; lower better. Preferred using model interpretation. .loglik - Log-Likelihood (negative values); higher values (closer zero) better. .fit.p - P-value observing fit chance; range: 0-1, lower better. values can computed every model. example, lets pull AIC value statistics table generated last section. values can used decide fit argument use (\"lm\", \"log\", \"gam\"). Based table, fit = \"gam\" lowest AIC, lowest BIC, highest Log-Likelihood, therefore best model three use set data variables.","code":"st$.aic #> [1] 16403.78 plyr::ldply(c(lm=\"lm\", log=\"log\", gam=\"gam\"), .id = \"fit\", function (fit)   stats_table(npregfast::children, \"age\", \"height\", \"sex\", fit = fit) ) %>%   dplyr::select(fit, .r.sqr:.fit.p) #>   fit    .r.sqr    .adj.r     .aic     .bic   .loglik .fit.p #> 1  lm 0.7896923 0.7894395 16947.72 16976.84 -8468.858      0 #> 2 log 0.8031003 0.8028636 16783.02 16812.14 -8386.512      0 #> 3 gam        NA 0.8313946 16403.78 16497.75 -8185.756     NA"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"alternative-hypothesis","dir":"Articles","previous_headings":"Statistics Table","what":"Alternative Hypothesis","title":"Regression","text":"three columns .mean.diff, .h1, .p.val together show hypothesis outcome. , ’re asking .mean.diff non-zero. Since .p.val less 0.05 can say . complete review alternative hypotheses, see rbiom statistics article.","code":"dplyr::select(st, .mean.diff:.p.val) #> # Model:    gam(height ~ s(age, by = sex, bs = \"cs\") + sex, method = \"REML\") #> # A tibble: 1 × 3 #>   .mean.diff .h1     .p.val #>        <dbl> <fct>    <dbl> #> 1      -7.73 != 0  8.88e-40"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"checking-residuals","dir":"Articles","previous_headings":"","what":"Checking Residuals","title":"Regression","text":"One best ways assess quality model interrogate residuals. “residual” vertical distance data point trendline; difference observed predicted (fitted) values. High quality models randomly distributed residuals. Three common plots visualizing residuals normal Q-Q plots, residual vs fitted value plots, scale-location plots. can add plots rbiom corrplot setting check = TRUE.  subtitle plot tells high quality model look like. example, “Normal Q-Q” plot says “Points fall line.” case , particular check indicates high-quality. diagnostic plots largely subjective/qualitative. , must use best judgement decide residuals appear pass fail checks. complete explanation diagnostic plots beyond scope article. Readers encouraged explore topic sites : Four Assumptions Linear Regression Linear Regression Assumptions Diagnostics R: Essentials Understanding Diagnostic Plots Linear Regression Analysis. Quantile-Quantile plots Regression diagnostic plots","code":"stats_corrplot(   df       = npregfast::children,  # dataset   x        = 'age',                # x-axis variable   y        = 'height',             # y-axis variable   stat.by  = 'sex',                # statistical groups   fit      = 'gam',                # smoothed trendline   layers   = 'tc',                 # show trendline with conf. int.   test     = 'emmeans',            # run stats on the means   check    = TRUE )                # display diagnostic plots   <===="},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"gems-dataset","dir":"Articles","previous_headings":"","what":"GEMS Dataset","title":"Regression","text":"Going forward ’ll use gems dataset included rbiom. GEMS case-control study comprising 1,006 stool samples young children without diarrhea four low-income countries. original Nature article Eric J. de Muinck Pal Trosvik data set available online free Individuality Convergence Infant Gut Microbiota First Year Life. gems metadata includes two categorical fields one continuous field:","code":"gems #>  #> ══ Global Enteric Multicenter Study ════════════════════════ #>  #> Stool samples collected from 1006 participants under the #> age of 5 from Bangladesh, Gambia, Kenya, and Mali. Includes #> 492 healthy controls and 514 moderate-to-severe diarrhea #> (MSD) cases. Original study by Pop et al, 2014 #> (<https://doi.org/10.1186/gb-2014-15-6-r76>); dataset #> retrieved from MicrobiomeDB #> (<https://doi.org/10.1093/nar/gkx1027>). #>  #>    1006 Samples: SRS608640, SRS608279, SRS607780, ... #>     767 OTUs:    OTU001, OTU002, OTU003, ..., and OTU767 #>       8 Ranks:   .otu, Kingdom, Phylum, ..., and Species #>       4 Fields:  .sample, diarrhea, age, and country #>         Tree:    <absent> #>  #> ── 116 - 11k reads/sample ──────────────────── 2021-03-15 ── #>    glimpse(gems) #> Rows: 1,006 #> Columns: 4 #> $ .sample  <chr> \"SRS608640\", \"SRS608279\", \"SRS607780\", \"SRS607987\", \"SRS60842… #> $ diarrhea <fct> Control, Case, Case, Case, Control, Case, Case, Control, Cont… #> $ age      <dbl> 0.2, 1.4, 0.8, 1.8, 0.6, 4.0, 0.5, 2.2, 0.4, 1.4, 2.1, 2.0, 0… #> $ country  <fct> Bangladesh, Kenya, Gambia, Gambia, Kenya, Kenya, Mali, Gambia…"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"bangladesh-vs-kenya-controls","dir":"Articles","previous_headings":"GEMS Dataset","what":"Bangladesh vs Kenya Controls","title":"Regression","text":"start, let’s select just healthy controls two countries, rarefy samples even sequencing depth.","code":"hbk <- gems %>%   subset(diarrhea == \"Control\") %>%   subset(country %in% c(\"Bangladesh\", \"Kenya\")) %>%   rarefy()  hbk$n_samples #> [1] 256"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"alpha-diversity","dir":"Articles","previous_headings":"","what":"Alpha Diversity","title":"Regression","text":"Since ’re working rbiom object - hbk - can use convenience function adiv_corrplot(), combines steps generating table alpha diversity values (adiv_table()) generating correlation plot (stats_corrplot()).  , diagnostic plots look pretty good, can confidently say children different Shannon diversity index values, depending whether live Bangladesh vs Kenya, difference significant around 1.35 years old.","code":"adiv_corrplot(   biom    = hbk,         # healthy controls from Bangladesh and Kenya   x       = \"age\",       # x-axis variable   stat.by = \"country\",   # statistical groups   fit     = \"gam\",       # smoothed trendline   check   = TRUE )       # display diagnostic plots"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"taxa-abundance","dir":"Articles","previous_headings":"","what":"Taxa Abundance","title":"Regression","text":"Similar adiv_corrplot(), taxa_corrplot() combines taxa_table() stats_corrplot() single streamlined function. ’ll set layers = \"tcrp\" show residuals main plot. help explaining artifact “Residuals vs Fitted” diagnostic plot.  , orange blue points falling y=0 indicate zero Prevotella reads sample. can confound taxa abundance analyses, indicated diagnostic plots. Normal Q-Q: curved shape indicates residuals often trendline. Residuals vs Fitted: points forming straight black diagonal ‘line’ result overabundance single value data (zero). Scale-Location: first half curve due lots zero counts. second half curve due samples greater 350 rarefied Prevotella counts, thereby allowing gam curve intercept sample points better precision.","code":"taxa_corrplot(   biom    = hbk,         # healthy controls from Bangladesh and Kenya   layers  = \"tcrp\",      # show residuals on the main plot   x       = \"age\",       # x-axis variable   taxa    = 1,           # select the most abundant taxa   rank    = \"Genus\",     # at the genus level   stat.by = \"country\",   # statistical groups   fit     = \"gam\",       # smoothed trendline   t.size  = 2,           # make the trendline thicker   check   = TRUE )       # display diagnostic plots"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"rank-transformation","dir":"Articles","previous_headings":"Taxa Abundance","what":"Rank Transformation","title":"Regression","text":"One method addessing zero abundances rank tranform abundances. rbiom, setting trans = \"rank\" rank transform abundances, without consideration facets. default parameters ties = \"random\", seed = 0 assign unique integers (see base::rank() ties options). improve diagnostic plots, adds noise data.","code":"taxa_corrplot(   biom    = hbk,         # healthy controls from Bangladesh and Kenya   layers  = \"tcrp\",      # show residuals on the main plot   x       = \"age\",       # x-axis variable   taxa    = 1,           # select the most abundant taxa   rank    = \"Genus\",     # at the genus level   stat.by = \"country\",   # statistical groups   fit     = \"gam\",       # smoothed trendline   trans   = \"rank\",      # rank-transform the abundances   t.size  = 2,           # make the trendline thicker   check   = TRUE )       # display diagnostic plots"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"beta-diversity","dir":"Articles","previous_headings":"","what":"Beta Diversity","title":"Regression","text":"Like last two corrplot functions, bdiv_corrplot() combines bdiv_table() stats_corrplot() generate beta diversity correlation plot rbiom object. Beta diversity correlation plots conceptually complex, let’s quickly reveal ’ll plotting. x-axis: difference numeric metadata field two samples. y-axis: difference overall microbiome composition. bdiv_* functions, can supply within /parameters limit pairs samples included plot. Setting within = \"country\" plot pairs samples came country, prevent stat.producing “Bangladesh vs Kenya” trendline.  , main plot tells us: Bangladesh, closer two children age , similar microbiomes . Therefore, infer age important factor driving microbiome structure population. Kenyan children’s microbiomes consistently structured, compared children Bangladesh. Additionally, age effect much less pronounced. Children 1 year apart age much similar microbiome live Kenya, compared Bangalesh (p = 7e-143). diagnostic plots indicate less optimal distributions residuals, “Normal Q-Q” plot showing many points lie trendline . main plot’s trendlines don’t spend much time y = 0.75 0.83, hence sparsity points x = 0.75 0.83 “Residuals vs Fitted” “Scale-Location” plots.","code":"bdiv_corrplot(   biom    = hbk,         # healthy controls from Bangladesh and Kenya   x       = \"age\",       # x-axis variable   stat.by = \"country\",   # statistical groups    within  = \"country\",   # don't compare samples from different countries   fit     = \"gam\",       # smoothed trendline   check   = TRUE )       # display diagnostic plots"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"rank-transformation-1","dir":"Articles","previous_headings":"Beta Diversity","what":"Rank Transformation","title":"Regression","text":"Running bdiv_corrplot() trans = \"rank\" help make residuals normally distributed.  rank-transforming: main plot tells slightly different story. “Normal Q-Q” plot indicates residuals now light-tailed distribution. argue either preferring transformed figure original.","code":"bdiv_corrplot(   biom    = hbk,         # healthy controls from Bangladesh and Kenya   x       = \"age\",       # x-axis variable   stat.by = \"country\",   # statistical groups    within  = \"country\",   # don't compare samples from different countries   fit     = \"gam\",       # smoothed trendline   trans   = \"rank\",      # rank-transform the abundances   check   = TRUE )       # display diagnostic plots"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"goodness-of-fit-1","dir":"Articles","previous_headings":"Beta Diversity","what":"Goodness of Fit","title":"Regression","text":"Comparing AIC, BIC, Log-Likelihood values untransformed rank-transformed data can tell model better, right? Wrong! values scale range data, untransformed beta diversity data range 0 - 1 result drastically different AIC, BIC, Log-Likelihood values rank-transformed data range 1 - 16400. Generally speaking, compare goodness--fit values derived different datasets. However, arguable two datasets , just scaled differently. Therefore don’t mind potentially incurring reviewer’s wrath, can rescale datasets range compare goodness--fit values . goodness--fit metrics strongly favor untransformed data.","code":"plyr::ldply(c(none=\"none\", rank=\"rank\"), .id = \"trans\", function (trans)   bdiv_table(biom = hbk, within = \"country\", trans = trans) %>%     dplyr::mutate(.distance = scales::rescale(.distance, to = c(0, 1))) %>%     stats_table(regr = \"age\", resp = \".distance\", stat.by = \"country\", fit = \"gam\") %>%     dplyr::select(.aic, .bic, .loglik) ) #>   trans      .aic      .bic   .loglik #> 1  none -3301.860 -3217.703  1661.852 #> 2  rank  4550.565  4666.182 -2260.277"},{"path":"https://cmmr.github.io/rbiom/articles/regression.html","id":"specific-timepoints","dir":"Articles","previous_headings":"","what":"Specific Timepoints","title":"Regression","text":"default, *_corrplot() functions automatically find x-axis location significant term interest. However, can override providing parameter.  Although ’re limited one value *_corrplot() functions, can provide multiple locations stats_table() *_stats() functions.","code":"stats_corrplot(npregfast::children, 'age', 'height', stat.by = 'sex', at = 12) stats_table(npregfast::children, 'age', 'height', stat.by = 'sex', at = 11:15) #> # Model:    gam(height ~ s(age, by = sex, bs = \"cs\") + sex, method = \"REML\") #> # A tibble: 5 × 15 #>     age sex    .mean.diff .h1     .p.val   .adj.p .effect.size   .se    .n   .df #>   <int> <fct>       <dbl> <fct>    <dbl>    <dbl>        <dbl> <dbl> <int> <int> #> 1    12 femal…       7.23 != 0  2.46e-29 1.23e-28        1.13  0.635  2500  2485 #> 2    11 femal…       6.02 != 0  2.75e-22 6.88e-22        0.939 0.614  2500  2485 #> 3    13 femal…       6.04 != 0  6.06e-21 1.01e-20        0.943 0.638  2500  2485 #> 4    15 femal…      -2.58 != 0  7.21e- 7 9.02e- 7       -0.402 0.519  2500  2485 #> 5    14 femal…       2.00 != 0  3.14e- 4 3.14e- 4        0.311 0.553  2500  2485 #> # ℹ 5 more variables: .t.ratio <dbl>, .adj.r <dbl>, .aic <dbl>, .bic <dbl>, #> #   .loglik <dbl>"},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick Start","title":"Statistics","text":"rbiom package includes many statistical functions. rbiom object, can use dedicated functions alpha diversity, beta diversity, taxa abundance. Otherwise, look generic functions operate data.frame distance matrix.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"rbiom-object-functions","dir":"Articles","previous_headings":"Quick Start","what":"rbiom Object Functions","title":"Statistics","text":"metadata field microbiome property interest determine rbiom function use. instance, explore effect Body Site (categorical metadata field) Shannon Diversity (alpha diversity metric), ’d use adiv_boxplot() produce plot statistics, adiv_stats() want stats.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"generic-functions","dir":"Articles","previous_headings":"Quick Start","what":"Generic Functions","title":"Statistics","text":"data data.frame (tibble), use: , distance matrix:","code":""},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"statistics-table","dir":"Articles","previous_headings":"","what":"Statistics Table","title":"Statistics","text":"function stats_table() functions ending “_stats” (e.g. adiv_stats(), distmat_stats()) return statistics table. Functions “plot” name (e.g. adiv_boxplot(), stats_corrplot()) return plot object p. can access plot’s associated statistics table p$stats. table following information:","code":"p <- adiv_boxplot(   biom     = rarefy(hmp50),           # Dataset as an rbiom object   adiv     = c(\"Shannon\", \"Simpson\"), # Alpha diversity metrics   stat.by  = \"Body Site\",             # Statistical groups   facet.by = \"Sex\" )                  # Split data prior to stats  p$stats #> # Model:    kruskal.test(.diversity ~ `Body Site`) #> # A tibble: 4 × 8 #>   Sex    .adiv   .stat .h1      .p.val   .adj.p    .n   .df #>   <fct>  <fct>   <dbl> <fct>     <dbl>    <dbl> <int> <int> #> 1 Female Simpson  24.5 > 0   0.0000620 0.000172    30     4 #> 2 Female Shannon  23.8 > 0   0.0000860 0.000172    30     4 #> 3 Male   Shannon  14.0 > 0   0.00286   0.00314     19     3 #> 4 Male   Simpson  13.8 > 0   0.00314   0.00314     19     3"},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"model","dir":"Articles","previous_headings":"Statistics Table","what":"Model","title":"Statistics","text":"upper-left corner, see Model:    kruskal.test(.diversity ~ `Body Site`). tells us underlying test used base R’s kruskal.test(), grouping values .diversity `Body Site`. rbiom, .diversity default name column containing alpha diversity values.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"multiple-comparisons","dir":"Articles","previous_headings":"Statistics Table","what":"Multiple Comparisons","title":"Statistics","text":"table four rows, meaning ran data model four times. case, two alpha diversity metrics times two Sex facets. first two columns table (Sex .adiv) tell us row combination. Additionally, .adj.p column .p.val adjusted multiple comparisons.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"hypothesis","dir":"Articles","previous_headings":"Statistics Table","what":"Hypothesis","title":"Statistics","text":"three columns .stat, .h1, .p.val together show hypothesis outcome. , ’re asking .stat greater zero. .p.val less 0.05 can say . ’s simplified explanation. Recall statistic classes testing null hypothesis H0 alternate hypothesis H1. case, null hypothesis Kruskal-Wallis statistic zero (.stat == 0), indicating `Body Site` groups similar alpha diversity. p-value probability null hypothesis correct (p-value 0.6 interpreted 60% chance .stat == 0). p-value certain value (usually 0.05) accept alternative hypothesis instead - case .stat > 0, meaning .diversity vary `Body Site`.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"terms-of-interest","dir":"Articles","previous_headings":"Statistics Table","what":"Terms of Interest","title":"Statistics","text":"last two columns : .n - number samples. rarefying, 30 females 19 males. .df - Degrees freedom. One less number groups. HMP50 dataset five body sites: Anterior nares, buccal mucosa, mid vagina, saliva, stool. However, male facets don’t mid vagina samples.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"data-and-code","dir":"Articles","previous_headings":"Statistics Table","what":"Data and Code","title":"Statistics","text":"can inspect data passed kruskal.test() looking p$data. Additionally, code used generate statistics available p$stats$code. attributes can help reproduce customize data analysis. generating statistics st <- adiv_stats(), bdiv_stats(), taxa_stats(), data code st$data st$code, respectively. st <- stats_table(df = df), data code df st$code, respectively.","code":"p$data #> # A tibble: 98 × 6 #>   .sample .depth .adiv   .diversity `Body Site`   Sex    #> * <chr>    <dbl> <fct>        <dbl> <fct>         <fct>  #> 1 HMP01     1183 Shannon       1.76 Buccal mucosa Female #> 2 HMP02     1183 Shannon       2.56 Buccal mucosa Male   #> 3 HMP03     1183 Shannon       2.97 Saliva        Male   #> 4 HMP04     1183 Shannon       3.22 Saliva        Male   #> 5 HMP05     1183 Shannon       1.40 Buccal mucosa Female #> # ℹ 93 more rows  p$stats$code #> data <- adiv_table(biom, c(\"Shannon\", \"Simpson\"), c(\"Body Site\", \"Sex\")) #>  #> data %<>% dplyr::rename( #>   .resp    = \".diversity\",  #>   .stat.by = \"Body Site\" ) #>  #> stats <- plyr::ddply(data, .(Sex, .adiv), function (data) { #>   tryCatch(error = function (e) data.frame()[1,], suppressWarnings({ #>  #>     data %>%  #>       stats::kruskal.test(.resp ~ .stat.by, .) %>% #>       with(tibble( #>         .stat  = statistic,  #>         .h1    = factor('> 0'),  #>         .p.val = p.value,  #>         .n     = nrow(data),  #>         .df    = parameter )) #>  #>   })) #> }) %>%  #>   tibble::as_tibble() %>%  #>   dplyr::mutate(.adj.p = p.adjust(.p.val, 'fdr'), .after = .p.val) %>%  #>   dplyr::arrange(.p.val)"},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"column-reference","dir":"Articles","previous_headings":"Statistics Table","what":"Column Reference","title":"Statistics","text":"Care taken keep rbiom’s statistics tables consistent across functions. However, tables provide information available underlying statistical function. quick reference guide columns may appear rbiom statistics table. .h1 field always come immediately column testing .","code":""},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"plot-output","dir":"Articles","previous_headings":"","what":"Plot Output","title":"Statistics","text":"Visualizations one best ways identify correlations dataset. can see trend eyes, ’re right track. statistics-supported plotting functions rbiom ordination plots, box plots, correlation plots.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"ordination-plots","dir":"Articles","previous_headings":"Plot Output","what":"Ordination Plots","title":"Statistics","text":"Statistics ordination plots straight-forward. Set categorical metadata field stat.parameter test whether inter-sample distances correlated variable.  plot subtitles summary statistics. Additionally, p$stats contains tibble data.frame full statistics table, p$stats$code shows R commands reproducing statistics outside rbiom. Note ordination statistics dependent ordination, distance metric. statistics based beta diversity distances computed prior ordination. default, bdiv_ord_plot() applies perMANOVA test. can change MRPP specifying test=\"mrpp\". Details available tests .","code":"p <- bdiv_ord_plot(   biom    = rarefy(hmp50),    stat.by = \"Body Site\",    bdiv    = c(\"Jaccard\", \"Bray-Curtis\"),    ord     = c(\"PCoA\", \"UMAP\") ) p p$stats #> # Test:     adonis2 ~ `Body Site`. 999 permutations. #> # A tibble: 2 × 7 #>   .weighted .bdiv          .n .stat    .z .p.val .adj.p #>   <lgl>     <chr>       <int> <dbl> <dbl>  <dbl>  <dbl> #> 1 TRUE      Jaccard        49  11.3  51.5  0.001  0.001 #> 2 TRUE      Bray-Curtis    49  19.4  71.8  0.001  0.001  p$stats$code #> iters   <- list(weighted = TRUE, bdiv = c(\"Jaccard\", \"Bray-Curtis\")) #> dm_list <- blply(biom, NULL, bdiv_distmat, iters = iters, prefix = TRUE) #> stats   <- plyr::ldply(dm_list, function (dm) { #>   groups <- pull(biom, \"Body Site\")[attr(dm, 'Labels')] #>   set.seed(0) #>   ptest  <- vegan::adonis2(formula = dm ~ groups, permutations = 999) #>   pstats <- summary(vegan::permustats(ptest)) #>   with(pstats, data.frame(statistic, z, p)) #> })"},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"box-plots","dir":"Articles","previous_headings":"Plot Output","what":"Box Plots","title":"Statistics","text":"Statistics box plots automatically toggle pairwise group-wise statistics based values x stat.: x controls pairwise stat.controls group-wise. can set x stat.categorical metadata field get colored pairwise statistics, set different categorical metadata fields get multiple group-wise statistics per plot.  , lower-left plot annotated pairwise statistics two right group-wise statistics. plots, can find full statistics tables reproducible R code plot attributes. Internally, rbiom uses non-parametric functions listed .","code":"biom <- rarefy(hmp50) %>%    subset(`Body Site` %in% c('Saliva', 'Stool', 'Buccal mucosa'))  p1 <- adiv_boxplot(biom, x = \"Body Site\", stat.by = NULL) p2 <- adiv_boxplot(biom, x = NULL,        stat.by = \"Body Site\") p3 <- adiv_boxplot(biom, x = \"Body Site\", stat.by = \"Body Site\") p4 <- adiv_boxplot(biom, x = \"Sex\",       stat.by = \"Body Site\")  plots <- list(   p1 + ggplot2::labs(subtitle = 'x = \"Body Site\", stat.by = NULL'),    p2 + ggplot2::labs(subtitle = 'x = NULL, stat.by = \"Body Site\"'),    p3 + ggplot2::labs(subtitle = 'x = \"Body Site\", stat.by = \"Body Site\"'),    p4 + ggplot2::labs(subtitle = 'x = \"Sex\", stat.by = \"Body Site\"') ) %>%   lapply(`+`, ggplot2::labs(x = NULL, y = NULL, caption = NULL)) %>%   lapply(`+`, ggplot2::theme(plot.subtitle = ggplot2::element_text(size = 10)))  patchwork::wrap_plots(plots, guides = \"collect\") p3$stats #> # Model:    wilcox.test(.diversity ~ `Body Site`) #> # A tibble: 3 × 9 #>   `Body Site`         .mean.diff .h1    .p.val  .adj.p .lower .upper    .n .stat #>   <fct>                    <dbl> <fct>   <dbl>   <dbl>  <dbl>  <dbl> <int> <dbl> #> 1 Buccal mucosa - Sa…     -1.68  != 0  2.46e-4 7.38e-4 -2.19  -0.998    20     1 #> 2 Buccal mucosa - St…     -1.17  != 0  2.20e-3 3.30e-3 -1.69  -0.451    19     7 #> 3 Saliva - Stool           0.524 != 0  3.75e-3 3.75e-3  0.234  0.843    19    81  p2$stats #> # Model:    kruskal.test(.diversity ~ `Body Site`) #> # A tibble: 1 × 6 #>   .stat .h1      .p.val    .adj.p    .n   .df #>   <dbl> <fct>     <dbl>     <dbl> <int> <int> #> 1  20.4 > 0   0.0000370 0.0000370    29     2  p2$stats$code #> data <- adiv_table(biom, md = \"Body Site\") #>  #> data %<>% dplyr::rename( #>   .resp    = \".diversity\",  #>   .stat.by = \"Body Site\" ) #>  #> stats <- data %>%  #>   stats::kruskal.test(.resp ~ .stat.by, .) %>% #>   with(tibble( #>     .stat  = statistic,  #>     .h1    = factor('> 0'),  #>     .p.val = p.value,  #>     .n     = nrow(data),  #>     .df    = parameter )) %>%  #>   dplyr::mutate(.adj.p = p.adjust(.p.val, 'fdr'), .after = .p.val) %>%  #>   dplyr::arrange(.p.val)"},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"correlation-plots","dir":"Articles","previous_headings":"Plot Output","what":"Correlation Plots","title":"Statistics","text":"-depth description correlation plots, see rbiom regression article. Depending arguments given stat.test, can test: mean non-zero? means vary group? slope (trendline) non-horizontal? slopes vary group?","code":"biom <- gems %>%   subset(diarrhea == \"Control\") %>%   subset(country %in% c(\"Bangladesh\", \"Kenya\")) %>%   rarefy()  p1 <- adiv_corrplot(biom, x = \"age\", test = \"emmeans\") p2 <- adiv_corrplot(biom, x = \"age\", test = \"emmeans\", stat.by = \"country\") p3 <- adiv_corrplot(biom, x = \"age\", test = \"emtrends\") p4 <- adiv_corrplot(biom, x = \"age\", test = \"emtrends\", stat.by = \"country\")  plots <- list(   p1 + ggplot2::labs(subtitle = 'Is the mean non-zero?'),    p2 + ggplot2::labs(subtitle = 'Do means vary by group?'),    p3 + ggplot2::labs(subtitle = 'Is the slope non-horizontal?'),    p4 + ggplot2::labs(subtitle = 'Do slopes vary by group?')) %>%   lapply(`+`, ggplot2::labs(x = NULL, y = NULL, caption = NULL))  patchwork::wrap_plots(plots, guides = \"collect\")"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"normality","dir":"Articles","previous_headings":"Background","what":"Normality","title":"Statistics","text":"normal distribution visualized “bell curve”, values mean observed less often. Microbial abundances follow pattern; ’s common observe high low abundances often “medium” abundance.  compensate non-normality, rbiom uses following non-parametric tests categorical variables based ranking permutations. correlation/regression analysis, rbiom provides diagnostic plots determine residual distributions cause concern. enable feature, set check = TRUE.  reading: Applied Multivariate Statistics R: PERMANOVA, Comparison Techniques R Applications — Part 1: Simple Linear Regression, particularly section assumption control.","code":"library(ggplot2)  patchwork::wrap_plots(   widths = c(1, 1.5),    ggplot() +      geom_histogram(aes(x=rnorm(1000)), bins = 10) +      ggtitle(\"Normal Distribution\"),        ggplot(data = taxa_table(rarefy(hmp50), taxa = 4)) +      geom_histogram(aes(x=.abundance), bins = 10) +      facet_wrap(\".taxa\") +      ggtitle(\"Genera Abundance Distributions\") ) adiv_corrplot(biom, x = \"age\", test = \"emmeans\", check = TRUE)"},{"path":"https://cmmr.github.io/rbiom/articles/statistics.html","id":"compositionality","dir":"Articles","previous_headings":"Background","what":"Compositionality","title":"Statistics","text":"Compositional data arises counts don’t represent entire population. microbiome studies, number microbes get sequenced far less number microbes sample collected. Articles Gloor et al McMurdie Holmes propose use analysis tools ( ALDEx2 metagenomeSeq, respectively) apply proper statistical methods situation. Conversely, rbiom correct compositionality. correcting compositionality introduces extra noise dataset severely limits selection metrics visualizations, typically without significant benefit analysis.","code":""},{"path":"https://cmmr.github.io/rbiom/articles/unifrac.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"UniFrac Algorithms","text":"’ll review different UniFrac algorithms explain calculate .","code":""},{"path":"https://cmmr.github.io/rbiom/articles/unifrac.html","id":"input-data","dir":"Articles","previous_headings":"","what":"Input Data","title":"UniFrac Algorithms","text":"OTU matrix two samples five OTUs. phylogenetic tree five OTUs.","code":"json <- '{\"id\":\"\",\"comment\":\"\",\"date\":\"2025-01-29T22:14:00Z\",\"format\":\"1.0.0\",\"type\":\"OTU table\",\"format_url\":\"http://biom-format.org\",\"generated_by\":\"rbiom 2.0.13\",\"matrix_type\":\"sparse\",\"matrix_element_type\":\"int\",\"shape\":[5,2],\"phylogeny\":\"(((OTU_1:0.8,OTU_2:0.5):0.4,OTU_3:0.9):0.2,(OTU_4:0.7,OTU_5:0.3):0.6);\",\"rows\":{\"1\":{\"id\":\"OTU_1\"},\"2\":{\"id\":\"OTU_2\"},\"3\":{\"id\":\"OTU_3\"},\"4\":{\"id\":\"OTU_4\"},\"5\":{\"id\":\"OTU_5\"}},\"columns\":[{\"id\":\"Sample_1\"},{\"id\":\"Sample_2\"}],\"data\":[[2,0,9],[3,0,3],[4,0,3],[0,1,1],[1,1,4],[2,1,2],[3,1,8]]}'  biom <- rbiom::as_rbiom(json, underscores = TRUE) mtx  <- t(as.matrix(biom)) phy  <- biom$tree  L <- phy$edge.length A <- c(9,0,0,0,9,6,3,3) B <- c(7,5,1,4,2,8,8,0) knitr::kable(mtx, format=\"html\", table.attr='class=\"otu_matrix\" cellspacing=\"0\"', align='c') par(xpd = NA) plot(   x          = phy,    direction  = 'downwards',    srt        = 90,    adj        = 0.5,    no.margin  = TRUE,   underscore = TRUE,   x.lim      = c(0.5, 5.5) )  ape::edgelabels(phy$edge.length, bg = 'white', frame = 'none', adj = -0.4)"},{"path":"https://cmmr.github.io/rbiom/articles/unifrac.html","id":"definitions","dir":"Articles","previous_headings":"","what":"Definitions","title":"UniFrac Algorithms","text":"branch indices (green circles) used ordering LL, AA, BB arrays. Values LL drawn input phylogenetic tree. Values AA BB total number OTU observations descending branch; AA Sample_1, BB Sample_2.","code":"local({      phy$edge.length <- c(1, 1, 1, 1, 2, 1, 2, 2)      par(xpd = NA)   plot(     x               = phy,      direction       = 'downwards',      srt             = 90,      adj             = 0.5,      no.margin       = TRUE,     underscore      = TRUE,     x.lim           = c(.8, 6) )      ape::edgelabels(1:8, frame = 'circle')      ape::edgelabels(paste('A =', A), bg = 'white', frame = 'none', adj = c(-0.4, -1.2))   ape::edgelabels(paste('B =', B), bg = 'white', frame = 'none', adj = c(-0.4,  0.0))   ape::edgelabels(paste('L =', L), bg = 'white', frame = 'none', adj = c(-0.3,  1.2)) })"},{"path":"https://cmmr.github.io/rbiom/articles/unifrac.html","id":"unweighted","dir":"Articles","previous_headings":"","what":"Unweighted","title":"UniFrac Algorithms","text":"Lozupone et al, 2005: Unweighted UniFrac R Package rbiom: bdiv_matrix(bdiv = \"unifrac\", weighted=FALSE) R Package phyloseq: UniFrac(weighted=FALSE) R Package abdiv: unweighted_unifrac() qiime2 qiime diversity beta-phylogenetic --p-metric unweighted_unifrac mothur: unifrac.unweighted() First, transform B presence (1) absence (0) indicators. ={9,0,0,0,9,6,3,3}′={1,0,0,0,1,1,1,1}\\begin{align*}  &= \\{9, 0, 0, 0, 9, 6, 3, 3\\} \\\\ ' &= \\{1, 0, 0, 0, 1, 1, 1, 1\\} \\end{align*} B={7,5,1,4,2,8,8,0}B′={1,1,1,1,1,1,1,0}\\begin{align*} B  &= \\{7, 5, 1, 4, 2, 8, 8, 0\\} \\\\ B' &= \\{1, 1, 1, 1, 1, 1, 1, 0\\} \\end{align*} apply formula: U=∑=1nLi(|′−B′|)∑=1nLi(max(′,B′))U=L1(|′1−B′1|)+L2(|′2−B′2|)+⋯+Ln(|′n−B′n|)L1(max(′1,B′1))+L2(max(′2,B′2))+⋯+Ln(max(′n,B′n))U=0.2(|1−1|)+0.4(|0−1|)+⋯+0.3(|1−0|)0.2(max(1,1))+0.4(max(0,1))+⋯+0.3(max(1,0))U=0.2(0)+0.4(1)+0.8(1)+0.5(1)+0.9(0)+0.6(0)+0.7(0)+0.3(1)0.2(1)+0.4(1)+0.8(1)+0.5(1)+0.9(1)+0.6(1)+0.7(1)+0.3(1)U=0.4+0.8+0.5+0.30.2+0.4+0.8+0.5+0.9+0.6+0.7+0.3U=24.4U=0.4545455\\begin{align*} U &= \\displaystyle \\frac{\\sum_{= 1}^{n} L_i(|'_i - B'_i|)}{\\sum_{= 1}^{n} L_i(max('_i,B'_i))}  \\\\ \\\\ U &= \\displaystyle \\frac{L_1(|'_1-B'_1|) + L_2(|'_2-B'_2|) + \\cdots + L_n(|'_n-B'_n|)}{L_1(max('_1,B'_1)) + L_2(max('_2,B'_2)) + \\cdots + L_n(max('_n,B'_n))}  \\\\ \\\\ U &= \\displaystyle \\frac{0.2(|1-1|) + 0.4(|0-1|) + \\cdots + 0.3(|1-0|)}{0.2(max(1,1)) + 0.4(max(0,1)) + \\cdots + 0.3(max(1,0))}  \\\\ \\\\ U &= \\displaystyle \\frac{0.2(0) + 0.4(1) + 0.8(1) + 0.5(1) + 0.9(0) + 0.6(0) + 0.7(0) + 0.3(1)}{0.2(1) + 0.4(1) + 0.8(1) + 0.5(1) + 0.9(1) + 0.6(1) + 0.7(1) + 0.3(1)}  \\\\ \\\\ U &= \\displaystyle \\frac{0.4 + 0.8 + 0.5 + 0.3}{0.2 + 0.4 + 0.8 + 0.5 + 0.9 + 0.6 + 0.7 + 0.3}  \\\\ \\\\ U &= \\displaystyle \\frac{2}{4.4}  \\\\ \\\\ U &= 0.4545455 \\end{align*}","code":""},{"path":"https://cmmr.github.io/rbiom/articles/unifrac.html","id":"weighted","dir":"Articles","previous_headings":"","what":"Weighted","title":"UniFrac Algorithms","text":"Lozupone et al, 2007: Raw Weighted UniFrac R Package rbiom: bdiv_matrix(bdiv = \"unifrac\", weighted=TRUE, normalized=FALSE) R Package phyloseq: UniFrac(weighted=TRUE, normalized=FALSE) R Package abdiv: weighted_unifrac() qiime2 qiime diversity beta-phylogenetic --p-metric weighted_unifrac W=∑=1nLi|AiAT−BiBT|W=L1|A1AT−B1BT|+L2|A2AT−B2BT|+⋯+Ln|AnAT−BnBT|W=0.2|915−715|+0.4|015−515|+⋯+0.3|315−015|W=0.026¯+0.13¯+0.053¯+0.13¯+0.42+0.08+0.23¯+0.06W=1.14\\begin{align*} W &= \\sum_{= 1}^{n} L_i|\\frac{A_i}{A_T} - \\frac{B_i}{B_T}|  \\\\ \\\\ W &= L_1|\\frac{A_1}{A_T} - \\frac{B_1}{B_T}| + L_2|\\frac{A_2}{A_T} - \\frac{B_2}{B_T}| + \\cdots + L_n|\\frac{A_n}{A_T} - \\frac{B_n}{B_T}|  \\\\ \\\\ W &= 0.2|\\frac{9}{15} - \\frac{7}{15}| + 0.4|\\frac{0}{15} - \\frac{5}{15}| + \\cdots + 0.3|\\frac{3}{15} - \\frac{0}{15}|  \\\\ \\\\ W &= 0.02\\overline{6} + 0.1\\overline{3} + 0.05\\overline{3} + 0.1\\overline{3} + 0.42 + 0.08 + 0.2\\overline{3} + 0.06  \\\\ \\\\ W &= 1.14 \\end{align*}","code":""},{"path":"https://cmmr.github.io/rbiom/articles/unifrac.html","id":"normalized","dir":"Articles","previous_headings":"","what":"Normalized","title":"UniFrac Algorithms","text":"Lozupone et al, 2007: Normalized Weighted UniFrac R Package rbiom: bdiv_matrix(bdiv = \"unifrac\", weighted=TRUE, normalized=TRUE) R Package phyloseq: UniFrac(weighted=TRUE, normalized=TRUE) R Package abdiv: weighted_normalized_unifrac() qiime2 qiime diversity beta-phylogenetic --p-metric weighted_normalized_unifrac mothur: unifrac.weighted() N=∑=1nLi|AiAT−BiBT|∑=1nLi(AiAT+BiBT)N=L1|A1AT−B1BT|+L2|A2AT−B2BT|+⋯+Ln|AnAT−BnBT|L1(A1AT+B1BT)+L2(A2AT+B2BT)+⋯+Ln(AnAT+BnBT)N=0.2|915−715|+0.4|015−515|+⋯+0.3|315−015|0.2(915+715)+0.4(015+515)+⋯+0.3(315+015)N=0.026¯+0.13¯+0.053¯+0.13¯+0.42+0.08+0.23¯+0.060.213¯+0.13¯+0.053¯+0.13¯+0.66+0.56+0.513¯+0.06N=1.142.326667N=0.4899713\\begin{align*}  N &= \\displaystyle \\frac   {\\sum_{= 1}^{n} L_i|\\frac{A_i}{A_T} - \\frac{B_i}{B_T}|}   {\\sum_{= 1}^{n} L_i(\\frac{A_i}{A_T} + \\frac{B_i}{B_T})}   \\\\ \\\\    N &= \\displaystyle \\frac   {L_1|\\frac{A_1}{A_T} - \\frac{B_1}{B_T}| + L_2|\\frac{A_2}{A_T} - \\frac{B_2}{B_T}| + \\cdots + L_n|\\frac{A_n}{A_T} - \\frac{B_n}{B_T}|}   {L_1(\\frac{A_1}{A_T} + \\frac{B_1}{B_T}) + L_2(\\frac{A_2}{A_T} + \\frac{B_2}{B_T}) + \\cdots + L_n(\\frac{A_n}{A_T} + \\frac{B_n}{B_T})}   \\\\ \\\\    N &= \\displaystyle \\frac   {0.2|\\frac{9}{15} - \\frac{7}{15}| + 0.4|\\frac{0}{15} - \\frac{5}{15}| + \\cdots + 0.3|\\frac{3}{15} - \\frac{0}{15}|}   {0.2(\\frac{9}{15} + \\frac{7}{15}) + 0.4(\\frac{0}{15} + \\frac{5}{15}) + \\cdots + 0.3(\\frac{3}{15} + \\frac{0}{15})}   \\\\ \\\\    N &= \\displaystyle \\frac   {0.02\\overline{6} + 0.1\\overline{3} + 0.05\\overline{3} + 0.1\\overline{3} + 0.42 + 0.08 + 0.2\\overline{3} + 0.06}   {0.21\\overline{3} + 0.1\\overline{3} + 0.05\\overline{3} + 0.1\\overline{3} + 0.66 + 0.56 + 0.51\\overline{3} + 0.06}   \\\\ \\\\    N &= \\displaystyle \\frac{1.14}{2.326667}  \\\\ \\\\ N &= 0.4899713 \\end{align*}","code":""},{"path":"https://cmmr.github.io/rbiom/articles/unifrac.html","id":"generalized","dir":"Articles","previous_headings":"","what":"Generalized","title":"UniFrac Algorithms","text":"Chen et al. 2012: Generalized UniFrac R Package GUniFrac: GUniFrac(alpha=0.5) R Package abdiv: generalized_unifrac(alpha = 0.5) qiime2 qiime diversity beta-phylogenetic --p-metric generalized_unifrac -0.5 G=∑=1nLi(AiAT+BiBT)0.5|AiAT−BiBTAiAT+BiBT|∑=1nLi(AiAT+BiBT)0.5G=L1(A1AT+B1BT)0.5|A1AT−B1BTA1AT+B1BT|+⋯+Ln(AnAT+BnBT)0.5|AnAT−BnBTAnAT+BnBT|L1(A1AT+B1BT)0.5+⋯+Ln(AnAT+BnBT)0.5G=0.2(915+715)0.5|915−715915+715|+⋯+0.3(315+015)0.5|315−015315+015|0.2(915+715)0.5+⋯+0.3(315+015)0.5G≈0.03+0.23+0.21+0.26+0.49+0.08+0.27+0.130.21+0.23+0.21+0.26+0.77+0.58+0.60+0.13G=1.7014192.986235G=0.569754\\begin{align*}  G &= \\displaystyle \\frac   {\\sum_{= 1}^{n} L_i(\\frac{A_i}{A_T} + \\frac{B_i}{B_T})^{0.5}     |\\displaystyle \\frac       {\\frac{A_i}{A_T} - \\frac{B_i}{B_T}}       {\\frac{A_i}{A_T} + \\frac{B_i}{B_T}} |}   {\\sum_{= 1}^{n} L_i(\\frac{A_i}{A_T} + \\frac{B_i}{B_T})^{0.5}}  \\\\ \\\\  G &= \\displaystyle \\frac   {     L_1(\\frac{A_1}{A_T} + \\frac{B_1}{B_T})^{0.5}       |\\displaystyle \\frac         {\\frac{A_1}{A_T} - \\frac{B_1}{B_T}}         {\\frac{A_1}{A_T} + \\frac{B_1}{B_T}}| +      \\cdots +      L_n(\\frac{A_n}{A_T} + \\frac{B_n}{B_T})^{0.5}       |\\displaystyle \\frac         {\\frac{A_n}{A_T} - \\frac{B_n}{B_T}}         {\\frac{A_n}{A_T} + \\frac{B_n}{B_T}}|   }{     L_1(\\frac{A_1}{A_T} + \\frac{B_1}{B_T})^{0.5} +      \\cdots +      L_n(\\frac{A_n}{A_T} + \\frac{B_n}{B_T})^{0.5}   }     \\\\ \\\\  G &= \\displaystyle \\frac   {     0.2(\\frac{9}{15} + \\frac{7}{15})^{0.5}       |\\displaystyle \\frac         {\\frac{9}{15} - \\frac{7}{15}}         {\\frac{9}{15} + \\frac{7}{15}}| +      \\cdots +      0.3(\\frac{3}{15} + \\frac{0}{15})^{0.5}       |\\displaystyle \\frac         {\\frac{3}{15} - \\frac{0}{15}}         {\\frac{3}{15} + \\frac{0}{15}}|   }{     0.2(\\frac{9}{15} + \\frac{7}{15})^{0.5} +      \\cdots +      0.3(\\frac{3}{15} + \\frac{0}{15})^{0.5}   }     \\\\ \\\\    G &\\approx \\displaystyle \\frac   {0.03 + 0.23 + 0.21 + 0.26 + 0.49 + 0.08 + 0.27 + 0.13}   {0.21 + 0.23 + 0.21 + 0.26 + 0.77 + 0.58 + 0.60+ 0.13}   \\\\ \\\\    G &= \\displaystyle \\frac{1.701419}{2.986235}  \\\\ \\\\ G &= 0.569754  \\end{align*}","code":""},{"path":"https://cmmr.github.io/rbiom/articles/unifrac.html","id":"variance-adjusted","dir":"Articles","previous_headings":"","what":"Variance Adjusted","title":"UniFrac Algorithms","text":"Chang et al, 2011: Variance Adjusted Weighted (VAW) UniFrac R Package abdiv: variance_adjusted_unifrac() qiime2 qiime diversity beta-phylogenetic --p-metric weighted_normalized_unifrac --p-variance-adjusted V=∑=1nLi|AiAT−BiBT|(+BT)(+BT−Ai−Bi)∑=1nLiAiAT+BiBT(+BT)(+BT−Ai−Bi)\\begin{align*}  V &= \\displaystyle \\frac   {\\sum_{= 1}^{n} L_i\\displaystyle \\frac     {|\\frac{A_i}{A_T} - \\frac{B_i}{B_T}|}     {(A_T + B_T)(A_T + B_T - A_i - B_i)} }   {\\sum_{= 1}^{n} L_i\\displaystyle \\frac     {\\frac{A_i}{A_T} + \\frac{B_i}{B_T}}     {(A_T + B_T)(A_T + B_T - A_i - B_i)} }  \\\\ \\\\  \\end{align*}","code":""},{"path":"https://cmmr.github.io/rbiom/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel P. Smith. Author, maintainer. Alkek Center Metagenomics Microbiome Research. Copyright holder, funder.","code":""},{"path":"https://cmmr.github.io/rbiom/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith D (2025). rbiom: Read/Write, Analyze, Visualize 'BIOM' Data. R package version 2.0.13.9006, https://github.com/cmmr/rbiom, https://cmmr.github.io/rbiom/.","code":"@Manual{,   title = {rbiom: Read/Write, Analyze, and Visualize 'BIOM' Data},   author = {Daniel P. Smith},   year = {2025},   note = {R package version 2.0.13.9006, https://github.com/cmmr/rbiom},   url = {https://cmmr.github.io/rbiom/}, }"},{"path":"https://cmmr.github.io/rbiom/index.html","id":"rbiom","dir":"","previous_headings":"","what":"Read/Write, Analyze, and Visualize BIOM Data","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"package toolkit working Biological Observation Matrix (BIOM) files. Features include reading/writing ‘BIOM’ formats, rarefaction, alpha diversity, beta diversity (including ‘UniFrac’), summarizing counts taxonomic level, subsetting, visualizations, statistical analysis. CPU intensive operations written C. Reference material available online https://cmmr.github.io/rbiom/index.html Source code can found https://github.com/cmmr/rbiom","code":""},{"path":"https://cmmr.github.io/rbiom/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"latest stable version can installed CRAN. development version available GitHub.","code":"install.packages(\"pak\") pak::pak(\"rbiom\") pak::pak(\"cmmr/rbiom\")"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/index.html","id":"import-and-rarefy-abundance-counts","dir":"","previous_headings":"Usage","what":"Import and rarefy abundance counts.","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"","code":"library(rbiom)  infile <- system.file(package = \"rbiom\", \"extdata\", \"hmp50.bz2\") biom   <- rarefy(infile)"},{"path":"https://cmmr.github.io/rbiom/index.html","id":"explore-associations-with-metadata","dir":"","previous_headings":"Usage","what":"Explore associations with metadata.","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"","code":"bdiv_ord_plot(biom, stat.by = \"Body Site\", facet.by = \"Sex\") adiv_boxplot(biom, x = \"Sex\", adiv = c(\"otu\", \"shan\"), stat.by = \"Body Site\") taxa_corrplot(biom, x = \"Age\", layers = \"ptc\", taxa = 2, stat.by = \"bod\")"},{"path":"https://cmmr.github.io/rbiom/index.html","id":"summarize-counts-by-taxonomic-rank","dir":"","previous_headings":"Usage","what":"Summarize counts by taxonomic rank.","title":"Read/Write, Analyze, and Visualize BIOM Data","text":"","code":"taxa_heatmap(biom, taxa = 30, tracks = c(\"body\", \"age\")) taxa_stacked(biom, rank = \"Phylum\") taxa_table(biom, 'Phylum') #> # A tibble: 294 × 8 #>    .rank  .sample .taxa          .abundance   Age   BMI `Body Site`   Sex    #>    <fct>  <chr>   <fct>               <dbl> <dbl> <dbl> <fct>         <fct>  #>  1 Phylum HMP01   Firmicutes            856    22    20 Buccal mucosa Female #>  2 Phylum HMP01   Bacteroidetes         199    22    20 Buccal mucosa Female #>  3 Phylum HMP01   Actinobacteria         16    22    20 Buccal mucosa Female #>  4 Phylum HMP01   Proteobacteria         72    22    20 Buccal mucosa Female #>  5 Phylum HMP01   Fusobacteria           32    22    20 Buccal mucosa Female #>  6 Phylum HMP01   Tenericutes             0    22    20 Buccal mucosa Female #>  7 Phylum HMP02   Firmicutes            803    24    23 Buccal mucosa Male   #>  8 Phylum HMP02   Bacteroidetes         192    24    23 Buccal mucosa Male   #>  9 Phylum HMP02   Actinobacteria         52    24    23 Buccal mucosa Male   #> 10 Phylum HMP02   Proteobacteria         96    24    23 Buccal mucosa Male   #> # ℹ 284 more rows"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize alpha diversity with boxplots. — adiv_boxplot","title":"Visualize alpha diversity with boxplots. — adiv_boxplot","text":"Visualize alpha diversity boxplots.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize alpha diversity with boxplots. — adiv_boxplot","text":"","code":"adiv_boxplot(   biom,   x = NULL,   adiv = \"Shannon\",   layers = \"x\",   stat.by = x,   facet.by = NULL,   colors = TRUE,   shapes = TRUE,   patterns = FALSE,   flip = FALSE,   stripe = NULL,   ci = \"ci\",   level = 0.95,   p.adj = \"fdr\",   outliers = NULL,   xlab.angle = \"auto\",   p.label = 0.05,   transform = \"none\",   caption = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize alpha diversity with boxplots. — adiv_boxplot","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . x categorical metadata column name use x-axis. NULL, groups samples single category. adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Multiple/abbreviated values allowed. Default: \"Shannon\" layers One c(\"bar\", \"box\" (\"x\"), \"violin\", \"dot\", \"strip\", \"crossbar\", \"errorbar\", \"linerange\", \"pointrange\"). Single letter abbreviations also accepted. instance, c(\"box\", \"dot\") equivalent c(\"x\", \"d\") \"xd\". Default: \"x\" stat.Dataset field statistical groups. Must categorical. Default: NULL facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE patterns Patterns group. Options similar colors's: TRUE, FALSE, NULL, pattern names (\"brick\", \"chevron\", \"fish\", \"grid\", etc), named vector mapping groups specific pattern names. See \"Aesthetics\" section additional information. Default: FALSE flip Transpose axes, taxa present rows instead columns. Default: FALSE stripe Shade every x position. Default: flip ci calculate min/max crossbar, errorbar, linerange, pointrange layers. Options : \"ci\" (confidence interval), \"range\", \"sd\" (standard deviation), \"se\" (standard error), \"mad\" (median absolute deviation). center mark crossbar pointrange represents mean, except \"mad\" case represents median. Default: \"ci\" level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" outliers Show boxplot outliers? TRUE always show. FALSE always hide. NULL hide overlaying dot strip chart.  Default: NULL xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". p.label Minimum adjusted p-value display plot bracket. p.label = 0.05 - Show p-values <= 0.05. p.label = 0 - show p-values plot. p.label = 1 - Show p-values plot. numeric vector one value provided, used breaks asterisk notation. Default: 0.05 transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" caption Add methodology caption beneath plot. Default: TRUE ... Additional parameters pass along ggplot2 functions. Prefix parameter name layer name pass layer. instance, d.size = 2 ensures points dot layer size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize alpha diversity with boxplots. — adiv_boxplot","text":"ggplot2 plot. computed data points, ggplot2 command, stats table, stats table commands available $data, $code, $stats, $stats$code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_boxplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Visualize alpha diversity with boxplots. — adiv_boxplot","text":"built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Patterns added using fillpattern R package. Options \"brick\", \"chevron\", \"fish\", \"grid\", \"herringbone\", \"hexagon\", \"octagon\", \"rain\", \"saw\", \"shingle\", \"rshingle\", \"stripe\", \"wave\", optionally abbreviated /suffixed modifiers. example, \"hex10_sm\" hexagon pattern rotated 10 degrees shrunk 2x. See fillpattern::fill_pattern() complete documentation options. Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. -z = 65:90; -Z = 97:122 use letters instead shapes plot. Character strings may used well.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/adiv_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize alpha diversity with boxplots. — adiv_boxplot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          adiv_boxplot(biom, x=\"Body Site\", stat.by=\"Body Site\")           adiv_boxplot(biom, x=\"Sex\", stat.by=\"Body Site\", adiv=c(\"otu\", \"shan\"), layers = \"bld\")           adiv_boxplot(biom, x=\"body\", stat.by=\"sex\", adiv=\".all\", flip=TRUE, layers=\"p\")                # Each plot object includes additional information.     fig <- adiv_boxplot(biom, x=\"Body Site\")          ## Computed Data Points -------------------     fig$data #> # A tibble: 49 × 5 #>    .sample .depth .adiv   .diversity `Body Site`    #>  * <chr>    <dbl> <fct>        <dbl> <fct>          #>  1 HMP01     1183 Shannon       1.76 Buccal mucosa  #>  2 HMP02     1183 Shannon       2.56 Buccal mucosa  #>  3 HMP03     1183 Shannon       2.97 Saliva         #>  4 HMP04     1183 Shannon       3.22 Saliva         #>  5 HMP05     1183 Shannon       1.40 Buccal mucosa  #>  6 HMP06     1183 Shannon       3.08 Saliva         #>  7 HMP07     1183 Shannon       1.26 Buccal mucosa  #>  8 HMP08     1183 Shannon       2.49 Saliva         #>  9 HMP09     1183 Shannon       3.59 Saliva         #> 10 HMP10     1183 Shannon       1.76 Anterior nares #> # ℹ 39 more rows          ## Statistics Table -----------------------     fig$stats #> # Model:    wilcox.test(.diversity ~ `Body Site`) #> # A tibble: 10 × 9 #>    `Body Site`        .mean.diff .h1    .p.val  .adj.p .lower .upper    .n .stat #>    <fct>                   <dbl> <fct>   <dbl>   <dbl>  <dbl>  <dbl> <int> <dbl> #>  1 Anterior nares - …    -1.48   != 0  1.83e-4 5.59e-4 -1.89  -1.31     20     0 #>  2 Mid vagina - Sali…    -2.71   != 0  1.83e-4 5.59e-4 -3.05  -2.42     20     0 #>  3 Buccal mucosa - S…    -1.68   != 0  2.46e-4 5.59e-4 -2.19  -0.998    20     1 #>  4 Anterior nares - …    -1.03   != 0  2.80e-4 5.59e-4 -1.34  -0.784    19     0 #>  5 Mid vagina - Stool    -2.20   != 0  2.80e-4 5.59e-4 -2.51  -1.91     19     0 #>  6 Buccal mucosa - S…    -1.17   != 0  2.20e-3 3.67e-3 -1.69  -0.451    19     7 #>  7 Anterior nares - …     1.18   != 0  2.83e-3 4.04e-3  0.789  1.59     20    90 #>  8 Buccal mucosa - M…     1.02   != 0  3.61e-3 4.17e-3  0.411  1.70     20    89 #>  9 Saliva - Stool         0.524  != 0  3.75e-3 4.17e-3  0.234  0.843    19    81 #> 10 Anterior nares - …     0.0464 != 0  9.10e-1 9.10e-1 -0.473  0.659    20    52          ## ggplot2 Command ------------------------     fig$code #> ggplot(data, aes(x = `Body Site`, y = .diversity)) + #>   geom_rect( #>     mapping = aes(xmin = -Inf, xmax = Inf, ymin = 4, ymax = Inf),  #>     color   = NA,  #>     fill    = \"white\" ) + #>   geom_boxplot( #>     mapping = aes(color = `Body Site`, fill = `Body Site`),  #>     alpha   = 0.6,  #>     width   = 0.7 ) + #>   geom_segment( #>     mapping = aes(x = .x, xend = .xend, y = .y, yend = .yend),  #>     data    = ~attr(., \"stat_brackets\") ) + #>   geom_text( #>     mapping = aes(x = .x, y = .y, label = .label),  #>     data    = ~attr(., \"stat_labels\"),  #>     parse   = TRUE,  #>     size    = 3,  #>     vjust   = 0 ) + #>   labs( #>     caption = \"Mann-Whitney p-values, with Benjamini & Hochberg FDR correction.\",  #>     y       = \"Shannon Diversity\" ) + #>   scale_color_manual(values = c(\"#1F77B4\", \"#FF7F0E\", \"#2CA02C\", \"#D62728\", \"#9467BD\")) + #>   scale_fill_manual(values = c(\"#1F77B4\", \"#FF7F0E\", \"#2CA02C\", \"#D62728\", \"#9467BD\")) + #>   scale_x_discrete() + #>   scale_y_continuous( #>     breaks       = c(0, 1, 2, 3),  #>     minor_breaks = c(0.5, 1.5, 2.5, 3.5),  #>     expand       = c(0.02, 0, 0.08, 0) ) + #>   theme_bw() + #>   theme( #>     text               = element_text(size = 14),  #>     panel.grid.major.x = element_blank(),  #>     plot.caption       = element_text(face = \"italic\", size = 9) )"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"Visualize alpha diversity scatterplots trendlines.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"","code":"adiv_corrplot(   biom,   x,   adiv = \"Shannon\",   layers = \"tc\",   stat.by = NULL,   facet.by = NULL,   colors = TRUE,   shapes = TRUE,   test = \"emmeans\",   fit = \"gam\",   at = NULL,   level = 0.95,   p.adj = \"fdr\",   transform = \"none\",   alt = \"!=\",   mu = 0,   caption = TRUE,   check = FALSE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . x Dataset field x-axis values. Equivalent regr argument stats_table(). Required. adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Multiple/abbreviated values allowed. Default: \"Shannon\" layers One c(\"trend\", \"confidence\", \"point\", \"name\", \"residual\"). Single letter abbreviations also accepted. instance, c(\"trend\", \"point\") equivalent c(\"t\", \"p\") \"tp\". Default: \"tc\" stat.Dataset field statistical groups. Must categorical. Default: NULL facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE test Method computing p-values: 'none', 'emmeans', 'emtrends'. Default: 'emmeans' fit fit trendline. 'lm', 'log', 'gam'. Default: 'gam' Position(s) along x-axis means slopes evaluated. Default: NULL, samples 100 evenly spaced positions selects position p-value significant. level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" alt Alternative hypothesis direction. Options '!=' (two-sided; equal mu), '<' (less mu), '>' (greater mu). Default: '!=' mu Reference value test . Default: 0 caption Add methodology caption beneath plot. Default: TRUE check Generate additional plots aid assessing data normality. Default: FALSE ... Additional parameters pass along ggplot2 functions. Prefix parameter name layer name pass layer. instance, p.size = 2 ensures points size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"ggplot2 plot. computed data points, ggplot2 command, stats table, stats table commands available $data, $code, $stats, $stats$code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. -z = 65:90; -Z = 97:122 use letters instead shapes plot. Character strings may used well.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/adiv_corrplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize alpha diversity with scatterplots and trendlines. — adiv_corrplot","text":"","code":"library(rbiom)          p <- adiv_corrplot(babies, \"age\", stat.by = \"deliv\", fit = \"gam\")          p           p$stats #> # Model:    gam(c(.diversity ~ s(`Age (days)`, by = `Delivery mode`, bs = \"cs\") #> #   + , `Delivery mode`), method = \"REML\") #> # A tibble: 1 × 15 #>   `Age (days)` `Delivery mode`   .mean.diff .h1     .p.val   .adj.p .effect.size #>          <dbl> <fct>                  <dbl> <fct>    <dbl>    <dbl>        <dbl> #> 1         218. Cesarean - Vagin…      0.414 != 0  2.68e-11 2.68e-11        0.694 #> # ℹ 8 more variables: .se <dbl>, .n <int>, .df <int>, .t.ratio <dbl>, #> #   .adj.r <dbl>, .aic <dbl>, .bic <dbl>, .loglik <dbl>          p$code #> ggplot(data, aes(x = `Age (days)`, y = .diversity)) + #>   geom_ribbon( #>     mapping   = aes(ymin = .ymin, ymax = .ymax, color = `Delivery mode`, fill = `Delivery mode`),  #>     data      = ~attr(., \"fit\"),  #>     alpha     = 0.25,  #>     linewidth = 0.2 ) + #>   geom_line( #>     mapping = aes(color = `Delivery mode`),  #>     data    = ~attr(., \"fit\") ) + #>   geom_vline( #>     mapping  = aes(xintercept = `Age (days)`),  #>     data     = ~attr(., \"stat_vline\"),  #>     alpha    = 0.2,  #>     linetype = \"dotdash\" ) + #>   geom_label( #>     mapping    = aes(label = .label, hjust = .hjust, vjust = .vjust),  #>     data       = ~attr(., \"stat_labels\"),  #>     label.size = NA,  #>     size       = 4 ) + #>   labs( #>     caption = \"Low p-value indicates trendline means are different.\",  #>     y       = \"Shannon Diversity\" ) + #>   scale_color_manual(values = c(\"#1F77B4\", \"#FF7F0E\")) + #>   scale_fill_manual(values = c(\"#1F77B4\", \"#FF7F0E\")) + #>   scale_x_continuous() + #>   scale_y_continuous(expand = c(0.15, 0, 0.15, 0)) + #>   theme_bw() + #>   theme( #>     text               = element_text(size = 14),  #>     panel.grid.major.x = element_blank(),  #>     panel.grid.minor.x = element_blank(),  #>     plot.caption       = element_text(face = \"italic\", size = 9) )"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","title":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","text":"Create matrix samples x alpha diversity metrics.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","text":"","code":"adiv_matrix(biom, adiv = \".all\", transform = \"none\", cpus = NULL)"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Multiple/abbreviated values allowed. Default: \".\" transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" cpus number CPUs use. Set NULL use available, 1 disable parallel processing. Default: NULL","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","text":"numeric matrix samples rows. first column Depth. Remaining columns alpha diversity metric names given adiv: one OTUs, Shannon, Chao1, Simpson, InvSimpson.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a matrix of samples x alpha diversity metrics. — adiv_matrix","text":"","code":"library(rbiom)          biom <- slice_head(hmp50, n = 5)          adiv_matrix(biom) #>       Depth OTUs  Shannon     Chao1   Simpson InvSimpson #> HMP01  1660   49 1.741152  59.08333 0.5668413   2.308623 #> HMP02  1371   75 2.587403 104.38889 0.8133915   5.358813 #> HMP03  1353   75 2.950982  90.04167 0.8936622   9.403990 #> HMP04  1895   83 3.255785  93.32143 0.9323644  14.785121 #> HMP05  3939   67 1.462650 127.75000 0.5252254   2.106262 #> attr(,\"cmd\") #> [1] \"adiv_matrix(biom)\""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Test alpha diversity for associations with metadata. — adiv_stats","title":"Test alpha diversity for associations with metadata. — adiv_stats","text":"convenience wrapper adiv_table() + stats_table().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test alpha diversity for associations with metadata. — adiv_stats","text":"","code":"adiv_stats(   biom,   regr = NULL,   stat.by = NULL,   adiv = \"Shannon\",   split.by = NULL,   transform = \"none\",   test = \"emmeans\",   fit = \"gam\",   at = NULL,   level = 0.95,   alt = \"!=\",   mu = 0,   p.adj = \"fdr\" )"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test alpha diversity for associations with metadata. — adiv_stats","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . regr Dataset field x-axis (independent; predictive) values. Must numeric. Default: NULL stat.Dataset field statistical groups. Must categorical. Default: NULL adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Multiple/abbreviated values allowed. Default: \"Shannon\" split.Dataset field(s) data split prior calculations. Must categorical. Default: NULL transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" test Method computing p-values: 'wilcox', 'kruskal', 'emmeans', 'emtrends'. Default: 'emmeans' fit fit trendline. 'lm', 'log', 'gam'. Default: 'gam' Position(s) along x-axis means slopes evaluated. Default: NULL, samples 100 evenly spaced positions selects position p-value significant. level confidence level calculating confidence interval. Default: 0.95 alt Alternative hypothesis direction. Options '!=' (two-sided; equal mu), '<' (less mu), '>' (greater mu). Default: '!=' mu Reference value test . Default: 0 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test alpha diversity for associations with metadata. — adiv_stats","text":"tibble data.frame fields table . tibble object provides $code operator print R code used generate statistics.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/adiv_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test alpha diversity for associations with metadata. — adiv_stats","text":"","code":"library(rbiom)           biom <- rarefy(hmp50)            adiv_stats(biom, stat.by = \"Sex\")[,1:6] #> # Model:    gam(.diversity ~ Sex, method = \"REML\") #> # A tibble: 1 × 6 #>   Sex           .mean.diff .h1    .p.val  .adj.p .effect.size #>   <chr>              <dbl> <fct>   <dbl>   <dbl>        <dbl> #> 1 Female - Male     -0.767 != 0  0.00949 0.00949       -0.793            adiv_stats(biom, stat.by = \"Sex\", split.by = \"Body Site\")[,1:6] #> # Model:    gam(.diversity ~ Sex, method = \"REML\") #> # A tibble: 5 × 6 #>   `Body Site`    Sex           .mean.diff .h1   .p.val .adj.p #>   <fct>          <chr>              <dbl> <fct>  <dbl>  <dbl> #> 1 Buccal mucosa  Female - Male    -0.560  != 0   0.230  0.441 #> 2 Saliva         Female - Male    -0.242  != 0   0.231  0.441 #> 3 Stool          Female - Male    -0.192  != 0   0.331  0.441 #> 4 Anterior nares Female - Male    -0.0686 != 0   0.739  0.739 #> 5 Mid vagina     NA               NA      NA    NA     NA              adiv_stats(biom, stat.by = \"Body Site\", test = \"kruskal\") #> # Model:    kruskal.test(.diversity ~ `Body Site`) #> # A tibble: 1 × 6 #>   .stat .h1         .p.val       .adj.p    .n   .df #>   <dbl> <fct>        <dbl>        <dbl> <int> <int> #> 1  38.8 > 0   0.0000000767 0.0000000767    49     4"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the alpha diversity of each sample. — adiv_table","title":"Calculate the alpha diversity of each sample. — adiv_table","text":"Calculate alpha diversity sample.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the alpha diversity of each sample. — adiv_table","text":"","code":"adiv_table(   biom,   adiv = \"Shannon\",   md = \".all\",   transform = \"none\",   cpus = NULL )"},{"path":"https://cmmr.github.io/rbiom/reference/adiv_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the alpha diversity of each sample. — adiv_table","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Multiple/abbreviated values allowed. Default: \"Shannon\" md Dataset field(s) include output data frame, '.' include metadata fields. Default: '.' transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" cpus number CPUs use. Set NULL use available, 1 disable parallel processing. Default: NULL","code":""},{"path":"https://cmmr.github.io/rbiom/reference/adiv_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the alpha diversity of each sample. — adiv_table","text":"data frame alpha diversity values. combination sample/depth/adiv row. Column names .sample, .depth, .adiv, .diversity, followed metadata fields requested md.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/adiv_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the alpha diversity of each sample. — adiv_table","text":"","code":"library(rbiom)           # Subset to 10 samples.     biom <- slice(hmp50, 1:10)     adiv_table(biom) #> # A tibble: 10 × 8 #>    .sample .depth .adiv   .diversity   Age   BMI `Body Site`    Sex    #>    <chr>    <dbl> <fct>        <dbl> <dbl> <dbl> <fct>          <fct>  #>  1 HMP01     1660 Shannon       1.74    22    20 Buccal mucosa  Female #>  2 HMP02     1371 Shannon       2.59    24    23 Buccal mucosa  Male   #>  3 HMP03     1353 Shannon       2.95    28    26 Saliva         Male   #>  4 HMP04     1895 Shannon       3.26    25    23 Saliva         Male   #>  5 HMP05     3939 Shannon       1.46    27    24 Buccal mucosa  Female #>  6 HMP06     4150 Shannon       3.09    32    25 Saliva         Male   #>  7 HMP07     3283 Shannon       1.23    26    22 Buccal mucosa  Male   #>  8 HMP08     1695 Shannon       2.51    27    26 Saliva         Female #>  9 HMP09     2069 Shannon       3.60    33    32 Saliva         Male   #> 10 HMP10     2509 Shannon       1.75    22    20 Anterior nares Female          biom <- rarefy(biom)     adiv_table(biom, md = NULL) #> # A tibble: 10 × 4 #>    .sample .depth .adiv   .diversity #>    <fct>    <dbl> <fct>        <dbl> #>  1 HMP01     1353 Shannon       1.75 #>  2 HMP02     1353 Shannon       2.58 #>  3 HMP03     1353 Shannon       2.95 #>  4 HMP04     1353 Shannon       3.23 #>  5 HMP05     1353 Shannon       1.42 #>  6 HMP06     1353 Shannon       3.09 #>  7 HMP07     1353 Shannon       1.27 #>  8 HMP08     1353 Shannon       2.50 #>  9 HMP09     1353 Shannon       3.61 #> 10 HMP10     1353 Shannon       1.75"},{"path":"https://cmmr.github.io/rbiom/reference/as.list.rbiom.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an rbiom object to a base R list. — as.list.rbiom","title":"Convert an rbiom object to a base R list. — as.list.rbiom","text":"Convert rbiom object base R list.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as.list.rbiom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an rbiom object to a base R list. — as.list.rbiom","text":"","code":"# S3 method for class 'rbiom' as.list(x, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/as.list.rbiom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an rbiom object to a base R list. — as.list.rbiom","text":"x rbiom object, as_rbiom(). ... used.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as.list.rbiom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an rbiom object to a base R list. — as.list.rbiom","text":"list names c('counts', 'metadata', 'taxonomy', 'tree', 'sequences', 'id', 'comment', 'date', 'generated_by').","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/as.matrix.rbiom.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert an rbiom object to a simple count matrix. — as.matrix.rbiom","title":"Convert an rbiom object to a simple count matrix. — as.matrix.rbiom","text":"Identical running .matrix(biom$counts).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as.matrix.rbiom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert an rbiom object to a simple count matrix. — as.matrix.rbiom","text":"","code":"# S3 method for class 'rbiom' as.matrix(x, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/as.matrix.rbiom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert an rbiom object to a simple count matrix. — as.matrix.rbiom","text":"x rbiom object, as_rbiom(). ... used.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as.matrix.rbiom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert an rbiom object to a simple count matrix. — as.matrix.rbiom","text":"base R matrix OTUs rows samples columns.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/as.matrix.rbiom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert an rbiom object to a simple count matrix. — as.matrix.rbiom","text":"","code":"library(rbiom)          as.matrix(hmp50)[1:5,1:5] #>          HMP01 HMP02 HMP03 HMP04 HMP05 #> Unc01yki     0     0     0     0     0 #> Unc53100  1083   543   301   223  2672 #> LtbAci52     0     0     0     0     0 #> CnbTube3     0     0     0     0     0 #> Unc02qsf     0     0     0     0     0"},{"path":"https://cmmr.github.io/rbiom/reference/as_rbiom.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a variety of data types to an rbiom object. — as_rbiom","title":"Convert a variety of data types to an rbiom object. — as_rbiom","text":"Construct rbiom object. returned object R6 reference class. Use b <- $clone() create copies, b <- .","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as_rbiom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a variety of data types to an rbiom object. — as_rbiom","text":"","code":"as_rbiom(biom, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/as_rbiom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a variety of data types to an rbiom object. — as_rbiom","text":"biom Object can coerced rbiom-class object. example: file - Filepath URL biom file. matrix - abundance matrix OTUs rows samples columns. phyloseq-class object - phyloseq Bioconductor R package. list - counts optionally metadata, taxonomy, tree, etc (see details). ... Properties overwrite biom: metadata, taxonomy, tree, etc (see details). Setting underscores pass read_tree().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as_rbiom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a variety of data types to an rbiom object. — as_rbiom","text":"rbiom object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/as_rbiom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a variety of data types to an rbiom object. — as_rbiom","text":"","code":"library(rbiom)          # create a simple matrix ------------------------     mtx <- matrix(       data     = floor(runif(24) * 1000),        nrow     = 6,        dimnames = list(paste0(\"OTU\", 1:6), paste0(\"Sample\", 1:4)) )     mtx #>      Sample1 Sample2 Sample3 Sample4 #> OTU1     320     878     631     635 #> OTU2     945     647       3     690 #> OTU3     662     786     677     588 #> OTU4     474     921     728     165 #> OTU5     339     648     478      41 #> OTU6     807     417     150     462          # and some sample metadata ----------------------     df <- data.frame(       .sample   = paste0(\"Sample\", 1:4),       treatment = c(\"A\", \"B\", \"A\", \"B\"),       days      = c(12, 3, 7, 8) )          # convert data set to rbiom ---------------------     biom <- as_rbiom(mtx, metadata = df, id = \"My BIOM\")     biom #>  #> ══ My BIOM ═════════════════════════════════════════════════ #>  #>       4 Samples: Sample1, Sample2, Sample3, and Sample4  #>       6 OTUs:    OTU1, OTU2, OTU3, OTU4, OTU5, and OTU6  #>       1 Ranks:   .otu  #>       3 Fields:  .sample, treatment, and days  #>         Tree:    <absent> #>  #> ── 2.6k - 4.3k reads/sample ────────────────── 2025-02-04 ── #>"},{"path":"https://cmmr.github.io/rbiom/reference/babies.html","id":null,"dir":"Reference","previous_headings":"","what":"Longitudinal Stool Samples from Infants (n = 2,684) — babies","title":"Longitudinal Stool Samples from Infants (n = 2,684) — babies","text":"Longitudinal Stool Samples Infants (n = 2,684)","code":""},{"path":"https://cmmr.github.io/rbiom/reference/babies.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Longitudinal Stool Samples from Infants (n = 2,684) — babies","text":"","code":"babies"},{"path":"https://cmmr.github.io/rbiom/reference/babies.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Longitudinal Stool Samples from Infants (n = 2,684) — babies","text":"rbiom object 2,684 samples. Includes metadata taxonomy. Subject ID - ID1, ID2, ..., ID12 Sex - Male Female Age (days) - 1 - 266 Child's diet - \"Breast milk\", \"Breast milk formula\", \"Formula\" Sample collection - \"Frozen upon collection\" \"Stored alcohol\" Antibiotic exposure - Yes Antifungal exposure - Yes Delivery mode - Cesarean Vaginal Solid food introduced (Age) - 116 - 247","code":""},{"path":"https://cmmr.github.io/rbiom/reference/babies.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Longitudinal Stool Samples from Infants (n = 2,684) — babies","text":"https://www.nature.com/articles/s41467-018-04641-7 doi:10.1038/s41467-017-01973-8","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize BIOM data with boxplots. — bdiv_boxplot","title":"Visualize BIOM data with boxplots. — bdiv_boxplot","text":"Visualize BIOM data boxplots.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize BIOM data with boxplots. — bdiv_boxplot","text":"","code":"bdiv_boxplot(   biom,   x = NULL,   bdiv = \"Bray-Curtis\",   layers = \"x\",   weighted = TRUE,   tree = NULL,   within = NULL,   between = NULL,   stat.by = x,   facet.by = NULL,   colors = TRUE,   shapes = TRUE,   patterns = FALSE,   flip = FALSE,   stripe = NULL,   ci = \"ci\",   level = 0.95,   p.adj = \"fdr\",   outliers = NULL,   xlab.angle = \"auto\",   p.label = 0.05,   transform = \"none\",   caption = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize BIOM data with boxplots. — bdiv_boxplot","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . x categorical metadata column name use x-axis. NULL, groups samples single category. bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Multiple/abbreviated values allowed. Default: \"Bray-Curtis\" layers One c(\"bar\", \"box\" (\"x\"), \"violin\", \"dot\", \"strip\", \"crossbar\", \"errorbar\", \"linerange\", \"pointrange\"). Single letter abbreviations also accepted. instance, c(\"box\", \"dot\") equivalent c(\"x\", \"d\") \"xd\". Default: \"x\" weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Multiple values allowed. Default: TRUE tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree within, Dataset field(s) intra- inter- sample comparisons. Alternatively, dataset field names given elsewhere can prefixed '==' '!=' assign within , respectively. Default: NULL stat.Dataset field statistical groups. Must categorical. Default: NULL facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE patterns Patterns group. Options similar colors's: TRUE, FALSE, NULL, pattern names (\"brick\", \"chevron\", \"fish\", \"grid\", etc), named vector mapping groups specific pattern names. See \"Aesthetics\" section additional information. Default: FALSE flip Transpose axes, taxa present rows instead columns. Default: FALSE stripe Shade every x position. Default: flip ci calculate min/max crossbar, errorbar, linerange, pointrange layers. Options : \"ci\" (confidence interval), \"range\", \"sd\" (standard deviation), \"se\" (standard error), \"mad\" (median absolute deviation). center mark crossbar pointrange represents mean, except \"mad\" case represents median. Default: \"ci\" level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" outliers Show boxplot outliers? TRUE always show. FALSE always hide. NULL hide overlaying dot strip chart.  Default: NULL xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". p.label Minimum adjusted p-value display plot bracket. p.label = 0.05 - Show p-values <= 0.05. p.label = 0 - show p-values plot. p.label = 1 - Show p-values plot. numeric vector one value provided, used breaks asterisk notation. Default: 0.05 transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" caption Add methodology caption beneath plot. Default: TRUE ... Additional parameters pass along ggplot2 functions. Prefix parameter name layer name pass layer. instance, d.size = 2 ensures points dot layer size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize BIOM data with boxplots. — bdiv_boxplot","text":"ggplot2 plot. computed data points, ggplot2 command, stats table, stats table commands available $data, $code, $stats, $stats$code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_boxplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Visualize BIOM data with boxplots. — bdiv_boxplot","text":"built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Patterns added using fillpattern R package. Options \"brick\", \"chevron\", \"fish\", \"grid\", \"herringbone\", \"hexagon\", \"octagon\", \"rain\", \"saw\", \"shingle\", \"rshingle\", \"stripe\", \"wave\", optionally abbreviated /suffixed modifiers. example, \"hex10_sm\" hexagon pattern rotated 10 degrees shrunk 2x. See fillpattern::fill_pattern() complete documentation options. Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. -z = 65:90; -Z = 97:122 use letters instead shapes plot. Character strings may used well.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize BIOM data with boxplots. — bdiv_boxplot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          bdiv_boxplot(biom, x=\"==Body Site\", bdiv=\"UniFrac\", stat.by=\"Body Site\")"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster samples by beta diversity k-means. — bdiv_clusters","title":"Cluster samples by beta diversity k-means. — bdiv_clusters","text":"Cluster samples beta diversity k-means.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster samples by beta diversity k-means. — bdiv_clusters","text":"","code":"bdiv_clusters(   biom,   bdiv = \"Bray-Curtis\",   weighted = TRUE,   normalized = TRUE,   tree = NULL,   k = 5,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster samples by beta diversity k-means. — bdiv_clusters","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Multiple/abbreviated values allowed. Default: \"Bray-Curtis\" weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Multiple values allowed. Default: TRUE normalized changes \"Weighted UniFrac\" calculation. Divides result total branch weights. Default: TRUE tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree k Number clusters. Default: 5L ... Passed stats::kmeans().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster samples by beta diversity k-means. — bdiv_clusters","text":"numeric factor assigning samples clusters.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster samples by beta diversity k-means. — bdiv_clusters","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)     biom$metadata$bray_cluster <- bdiv_clusters(biom)          pull(biom, 'bray_cluster')[1:10] #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06 HMP07 HMP08 HMP09 HMP10  #>     5     3     3     3     5     3     5     3     3     2  #> Levels: 1 2 3 4 5          bdiv_ord_plot(biom, stat.by = \"bray_cluster\")"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_corrplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize beta diversity with scatterplots and trendlines. — bdiv_corrplot","title":"Visualize beta diversity with scatterplots and trendlines. — bdiv_corrplot","text":"Visualize beta diversity scatterplots trendlines.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_corrplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize beta diversity with scatterplots and trendlines. — bdiv_corrplot","text":"","code":"bdiv_corrplot(   biom,   x,   bdiv = \"Bray-Curtis\",   layers = \"tc\",   weighted = TRUE,   tree = NULL,   within = NULL,   between = NULL,   stat.by = NULL,   facet.by = NULL,   colors = TRUE,   shapes = TRUE,   test = \"emmeans\",   fit = \"gam\",   at = NULL,   level = 0.95,   p.adj = \"fdr\",   transform = \"none\",   ties = \"random\",   seed = 0,   alt = \"!=\",   mu = 0,   caption = TRUE,   check = FALSE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_corrplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize beta diversity with scatterplots and trendlines. — bdiv_corrplot","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . x Dataset field x-axis values. Equivalent regr argument stats_table(). Required. bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Multiple/abbreviated values allowed. Default: \"Bray-Curtis\" layers One c(\"trend\", \"confidence\", \"point\", \"name\", \"residual\"). Single letter abbreviations also accepted. instance, c(\"trend\", \"point\") equivalent c(\"t\", \"p\") \"tp\". Default: \"tc\" weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Multiple values allowed. Default: TRUE tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree within, Dataset field(s) intra- inter- sample comparisons. Alternatively, dataset field names given elsewhere can prefixed '==' '!=' assign within , respectively. Default: NULL stat.Dataset field statistical groups. Must categorical. Default: NULL facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE test Method computing p-values: 'none', 'emmeans', 'emtrends'. Default: 'emmeans' fit fit trendline. 'lm', 'log', 'gam'. Default: 'gam' Position(s) along x-axis means slopes evaluated. Default: NULL, samples 100 evenly spaced positions selects position p-value significant. level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" ties transform=\"rank\", rank identical values. Options : c(\"average\", \"first\", \"last\", \"random\", \"max\", \"min\"). See rank() details. Default: \"random\" seed Random seed permutations. Must non-negative integer. Default: 0 alt Alternative hypothesis direction. Options '!=' (two-sided; equal mu), '<' (less mu), '>' (greater mu). Default: '!=' mu Reference value test . Default: 0 caption Add methodology caption beneath plot. Default: TRUE check Generate additional plots aid assessing data normality. Default: FALSE ... Additional parameters pass along ggplot2 functions. Prefix parameter name layer name pass layer. instance, p.size = 2 ensures points size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_corrplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize beta diversity with scatterplots and trendlines. — bdiv_corrplot","text":"ggplot2 plot. computed data points, ggplot2 command, stats table, stats table commands available $data, $code, $stats, $stats$code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_corrplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Visualize beta diversity with scatterplots and trendlines. — bdiv_corrplot","text":"built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. -z = 65:90; -Z = 97:122 use letters instead shapes plot. Character strings may used well.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_corrplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize beta diversity with scatterplots and trendlines. — bdiv_corrplot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)     bdiv_corrplot(biom, \"Age\", stat.by = \"Sex\", layers = \"tcp\")"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Display beta diversities in an all vs all grid. — bdiv_heatmap","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"Display beta diversities vs grid.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"","code":"bdiv_heatmap(   biom,   bdiv = \"Bray-Curtis\",   weighted = TRUE,   tree = NULL,   tracks = NULL,   grid = \"devon\",   label = TRUE,   label_size = NULL,   rescale = \"none\",   clust = \"complete\",   trees = TRUE,   asp = 1,   tree_height = 10,   track_height = 10,   legend = \"right\",   title = TRUE,   xlab.angle = \"auto\",   underscores = FALSE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Multiple/abbreviated values allowed. Default: \"Bray-Curtis\" weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Multiple values allowed. Default: TRUE tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree tracks character vector metadata fields display tracks top plot. , list expected tracks argument plot_heatmap(). Default: NULL grid Color palette name, list entries label, colors, range, bins, na.color, /guide. See Track Definitions section details. Default: \"devon\" label Label matrix rows columns. can supply list logical vector length two control row labels column labels separately, example label = c(rows = TRUE, cols = FALSE), simply label = c(TRUE, FALSE). valid options \"rows\", \"cols\", \"\", \"bottom\", \"right\", \"none\". Default: TRUE label_size font size use row column labels. can supply numeric vector length two control row label sizes column label sizes separately, example c(rows = 20, cols = 8), simply c(20, 8). Default: NULL, computes: pmax(8, pmin(20, 100 / dim(mtx))) rescale Rescale rows columns common min/max. Options: \"none\", \"rows\", \"cols\". Default: \"none\" clust Clustering algorithm reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example clust = c(rows = \"complete\", cols = NA), simply clust = c(\"complete\", NA). Options : FALSE NA - Disable reordering. hclust class object E.g. stats::hclust(). method name - \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\", \"centroid\". Default: \"complete\" trees Draw dendrogram rows (left) columns (top). can supply list logical vector length two control row tree column tree separately, example trees = c(rows = TRUE, cols = FALSE), simply trees = c(TRUE, FALSE). valid options \"rows\", \"cols\", \"\", \"left\", \"top\", \"none\". Default: TRUE asp Aspect ratio (height/width) entire grid. Default: 1 (square) tree_height, track_height height dendrogram annotation tracks percentage overall grid size. Use numeric vector length two assign c(top, left) independently. Default: 10 (10% grid's height) legend place legend. Options : \"right\" \"bottom\". Default: \"right\" title Plot title. Set TRUE default title, NULL title, character string. Default: TRUE xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". underscores parsing tree, underscores kept ? default converted spaces (unless entire ID quoted). Default FALSE ... Additional arguments pass ggplot2::theme(). example, labs.subtitle = \"Plot subtitle\".","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"ggplot2 plot. computed data points ggplot command available $data $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":"annotation-tracks","dir":"Reference","previous_headings":"","what":"Annotation Tracks","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"Metadata can displayed colored tracks heatmap. Common use cases provided , thorough documentation available https://cmmr.github.io/rbiom . following entries track definitions understood: colors - pre-defined palette name custom set colors map . range - c(min,max) use scale values. label - Label track. Defaults name list element. side - Options \"top\" (default) \"left\". na.color - color use NA values. bins - Bin gradient many bins/steps. guide - list arguments guide_colorbar() guide_legend(). built-color palettes colorblind-friendly. Categorical palette names: \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Numeric palette names: \"reds\", \"oranges\", \"greens\", \"purples\", \"grays\", \"acton\", \"bamako\", \"batlow\", \"bilbao\", \"buda\", \"davos\", \"devon\", \"grayC\", \"hawaii\", \"imola\", \"lajolla\", \"lapaz\", \"nuuk\", \"oslo\", \"tokyo\", \"turku\", \"bam\", \"berlin\", \"broc\", \"cork\", \"lisbon\", \"roma\", \"tofino\", \"vanimo\", \"vik\".","code":"## Categorical ---------------------------- tracks = \"Body Site\" tracks = list('Body Site' = \"bright\") tracks = list('Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"))  ## Numeric -------------------------------- tracks = \"Age\" tracks = list('Age' = \"reds\")  ## Multiple Tracks ------------------------ tracks = c(\"Body Site\", \"Age\") tracks = list('Body Site' = \"bright\", 'Age' = \"reds\") tracks = list(   'Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"),   'Age'       = list('colors' = \"reds\") )"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display beta diversities in an all vs all grid. — bdiv_heatmap","text":"","code":"library(rbiom)          # Keep and rarefy the 10 most deeply sequenced samples.     hmp10 <- rarefy(hmp50, n = 10)          bdiv_heatmap(hmp10, tracks=c(\"Body Site\", \"Age\")) #> Warning: The `underscores` theme element is not defined in the element hierarchy.           bdiv_heatmap(hmp10, bdiv=\"uni\", weighted=c(TRUE,FALSE), tracks=\"sex\") #> Warning: The `underscores` theme element is not defined in the element hierarchy. #> Warning: The `underscores` theme element is not defined in the element hierarchy."},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","title":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","text":"Ordinate samples taxa 2D plane based beta diversity distances.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","text":"","code":"bdiv_ord_plot(   biom,   bdiv = \"Bray-Curtis\",   ord = \"PCoA\",   weighted = TRUE,   layers = \"petm\",   stat.by = NULL,   facet.by = NULL,   colors = TRUE,   shapes = TRUE,   tree = NULL,   test = \"adonis2\",   seed = 0,   permutations = 999,   rank = -1,   taxa = 4,   p.top = Inf,   p.adj = \"fdr\",   unc = \"singly\",   caption = TRUE,   underscores = FALSE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Multiple/abbreviated values allowed. Default: \"Bray-Curtis\" ord Method reducing dimensionality. Options : \"PCoA\" - Principal coordinate analysis; ape::pcoa(). \"UMAP\" - Uniform manifold approximation projection; uwot::umap(). \"NMDS\" - Nonmetric multidimensional scaling; vegan::metaMDS(). \"tSNE\" - t-distributed stochastic neighbor embedding; tsne::tsne(). Multiple/abbreviated values allowed. Default: \"PCoA\" weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Multiple values allowed. Default: TRUE layers One c(\"point\", \"spider\", \"ellipse\", \"name\", \"mean\", \"taxon\", \"arrow\"). first four sample-centric; last three taxa-centric. Single letter abbreviations also accepted. instance, c(\"point\", \"ellipse\") equivalent c(\"p\", \"e\") \"pe\". Default: \"pe\" stat.categorical numeric metadata field statistics calculated. Required. facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree test Permutational test accessing significance. Options : \"adonis2\" - Permutational MANOVA; vegan::adonis2(). \"mrpp\" - Multiple response permutation procedure; vegan::mrpp(). \"none\" - run statistics. Abbreviations allowed. Default: \"adonis2\" seed Random seed permutations. Must non-negative integer. Default: 0 permutations Number random permutations use. Default: 999 rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. p.top display taxa significant differences abundance. p.top >= 1, p.top significant taxa displayed. p.top less one, taxa adjusted p-value <= p.top displayed. Recommended used combination taxa parameter set lower bound mean abundance considered taxa. Default: Inf p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" caption Add methodology caption beneath plot. Default: TRUE underscores parsing tree, underscores kept ? default converted spaces (unless entire ID quoted). Default FALSE ... Parameters layer geoms (e.g. ggplot2::geom_point()). Prefixing parameter names layer name ensures particular parameter passed , , layer. instance, point.size = 2 p.size = 2 ensures points size set 2. Points can also controlled pt. prefix.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","text":"ggplot2 plot. computed sample coordinates ggplot command available $data $code respectively. stat.given, $stats $stats$code set. rank given, $data$taxa_coords, $taxa_stats, $taxa_stats$code set.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Ordinate samples and taxa on a 2D plane based on beta diversity distances. — bdiv_ord_plot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          bdiv_ord_plot(biom, layers=\"pemt\", stat.by=\"Body Site\", rank=\"g\")"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","title":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","text":"biplot parameters (taxa, unc, p.top, p.adj) effect rank NULL.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","text":"","code":"bdiv_ord_table(   biom,   bdiv = \"Bray-Curtis\",   ord = \"PCoA\",   weighted = TRUE,   md = NULL,   k = 2,   stat.by = NULL,   split.by = NULL,   tree = NULL,   test = \"adonis2\",   seed = 0,   permutations = 999,   rank = NULL,   taxa = 6,   p.top = Inf,   p.adj = \"fdr\",   unc = \"singly\",   underscores = FALSE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Multiple/abbreviated values allowed. Default: \"Bray-Curtis\" ord Method reducing dimensionality. Options : \"PCoA\" - Principal coordinate analysis; ape::pcoa(). \"UMAP\" - Uniform manifold approximation projection; uwot::umap(). \"NMDS\" - Nonmetric multidimensional scaling; vegan::metaMDS(). \"tSNE\" - t-distributed stochastic neighbor embedding; tsne::tsne(). Multiple/abbreviated values allowed. Default: \"PCoA\" weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Multiple values allowed. Default: TRUE md Dataset field(s) include output data frame, '.' include metadata fields. Default: '.' k Number ordination dimensions return. Either 2L 3L. Default: 2L stat.categorical numeric metadata field statistics calculated. Required. split.Dataset field(s) data split prior calculations. Must categorical. Default: NULL tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree test Permutational test accessing significance. Options : \"adonis2\" - Permutational MANOVA; vegan::adonis2(). \"mrpp\" - Multiple response permutation procedure; vegan::mrpp(). \"none\" - run statistics. Abbreviations allowed. Default: \"adonis2\" seed Random seed permutations. Must non-negative integer. Default: 0 permutations Number random permutations use. Default: 999 rank rank(s) taxa compute biplot coordinates statistics , NULL disable. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: NULL. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. p.top display taxa significant differences abundance. p.top >= 1, p.top significant taxa displayed. p.top less one, taxa adjusted p-value <= p.top displayed. Recommended used combination taxa parameter set lower bound mean abundance considered taxa. Default: Inf p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" underscores parsing tree, underscores kept ? default converted spaces (unless entire ID quoted). Default FALSE ... Additional arguments pass uwot::umap(), ape::pcoa(), vegan::metaMDS(), tsne::tsne().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","text":"data.frame columns .sample, .weighted, .bdiv, .ord, .x, .y, (optionally) .z. columns given md, split., stat.included well. stat.given, $stats $stats$code) set. rank given, $taxa_coords, $taxa_stats, $taxa_stats$code set.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_ord_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate PCoA and other ordinations, including taxa biplots and statistics. — bdiv_ord_table","text":"","code":"library(rbiom)          ord <- bdiv_ord_table(hmp50, \"bray\", \"pcoa\", stat.by=\"Body Site\", rank=\"g\")     head(ord) #> # A tibble: 6 × 7 #>   .weighted .bdiv       .ord  .sample     .x       .y `Body Site`   #>   <lgl>     <chr>       <fct> <chr>    <dbl>    <dbl> <fct>         #> 1 TRUE      Bray-Curtis PCoA  HMP01   -0.387 -0.00895 Buccal mucosa #> 2 TRUE      Bray-Curtis PCoA  HMP02   -0.461 -0.0135  Buccal mucosa #> 3 TRUE      Bray-Curtis PCoA  HMP03   -0.407 -0.0143  Saliva        #> 4 TRUE      Bray-Curtis PCoA  HMP04   -0.378 -0.0123  Saliva        #> 5 TRUE      Bray-Curtis PCoA  HMP05   -0.452 -0.0114  Buccal mucosa #> 6 TRUE      Bray-Curtis PCoA  HMP06   -0.411 -0.0123  Saliva                 ord$stats #> # Test:     adonis2 ~ `Body Site`. 999 permutations. #> # A tibble: 1 × 7 #>   .weighted .bdiv          .n .stat    .z .p.val .adj.p #>   <lgl>     <chr>       <int> <dbl> <dbl>  <dbl>  <dbl> #> 1 TRUE      Bray-Curtis    50  19.2  72.2  0.001  0.001          ord$taxa_stats #> # Test:     adonis2 ~ taxa. 999 permutations. #> # A tibble: 6 × 9 #>   .weighted .bdiv       .rank .taxa                .n .stat    .z .p.val .adj.p #>   <lgl>     <chr>       <fct> <fct>             <int> <dbl> <dbl>  <dbl>  <dbl> #> 1 TRUE      Bray-Curtis Genus Lactobacillus        50  8.62  16.8  0.001  0.001 #> 2 TRUE      Bray-Curtis Genus Streptococcus        50 10.1   19.5  0.001  0.001 #> 3 TRUE      Bray-Curtis Genus Bacteroides          50  8.72  16.7  0.001  0.001 #> 4 TRUE      Bray-Curtis Genus Corynebacterium 1    50  8.53  16.0  0.001  0.001 #> 5 TRUE      Bray-Curtis Genus Haemophilus          50  6.56  12.3  0.001  0.001 #> 6 TRUE      Bray-Curtis Genus Propionibacterium    50  5.84  11.3  0.001  0.001"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Test beta diversity for associations with metadata. — bdiv_stats","title":"Test beta diversity for associations with metadata. — bdiv_stats","text":"convenience wrapper bdiv_table() + stats_table().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test beta diversity for associations with metadata. — bdiv_stats","text":"","code":"bdiv_stats(   biom,   regr = NULL,   stat.by = NULL,   bdiv = \"Bray-Curtis\",   weighted = TRUE,   tree = NULL,   within = NULL,   between = NULL,   split.by = NULL,   transform = \"none\",   test = \"emmeans\",   fit = \"gam\",   at = NULL,   level = 0.95,   alt = \"!=\",   mu = 0,   p.adj = \"fdr\" )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test beta diversity for associations with metadata. — bdiv_stats","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . regr Dataset field x-axis (independent; predictive) values. Must numeric. Default: NULL stat.Dataset field statistical groups. Must categorical. Default: NULL bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Multiple/abbreviated values allowed. Default: \"Bray-Curtis\" weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Multiple values allowed. Default: TRUE tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree within, Dataset field(s) intra- inter- sample comparisons. Alternatively, dataset field names given elsewhere can prefixed '==' '!=' assign within , respectively. Default: NULL split.Dataset field(s) data split prior calculations. Must categorical. Default: NULL transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" test Method computing p-values: 'wilcox', 'kruskal', 'emmeans', 'emtrends'. Default: 'emmeans' fit fit trendline. 'lm', 'log', 'gam'. Default: 'gam' Position(s) along x-axis means slopes evaluated. Default: NULL, samples 100 evenly spaced positions selects position p-value significant. level confidence level calculating confidence interval. Default: 0.95 alt Alternative hypothesis direction. Options '!=' (two-sided; equal mu), '<' (less mu), '>' (greater mu). Default: '!=' mu Reference value test . Default: 0 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test beta diversity for associations with metadata. — bdiv_stats","text":"tibble data.frame fields table . tibble object provides $code operator print R code used generate statistics.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test beta diversity for associations with metadata. — bdiv_stats","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)            bdiv_stats(biom, stat.by = \"Sex\", bdiv = c(\"bray\", \"unifrac\"))[,1:7] #> # Model:    gam(.distance ~ Sex, method = \"REML\") #> # A tibble: 6 × 7 #>   .bdiv       Sex                   .mean.diff .h1    .p.val .adj.p .effect.size #>   <fct>       <chr>                      <dbl> <fct>   <dbl>  <dbl>        <dbl> #> 1 Bray-Curtis Female - Male            0.0599  != 0  0.00402 0.0219      0.261   #> 2 Bray-Curtis Male - Female vs Male   -0.0489  != 0  0.00730 0.0219     -0.235   #> 3 UniFrac     Female - Female vs M…   -0.0259  != 0  0.0866  0.173      -0.109   #> 4 UniFrac     Male - Female vs Male   -0.0249  != 0  0.187   0.281      -0.115   #> 5 Bray-Curtis Female - Female vs M…    0.0110  != 0  0.430   0.515       0.0503  #> 6 UniFrac     Female - Male           -0.00105 != 0  0.963   0.963      -0.00419          biom <- subset(biom, `Body Site` %in% c('Saliva', 'Stool', 'Buccal mucosa'))     bdiv_stats(biom, stat.by = \"Body Site\", split.by = \"==Sex\")[,1:6] #> # Model:    gam(.distance ~ `Body Site`, method = \"REML\") #> # A tibble: 30 × 6 #>    Sex    `Body Site`                         .mean.diff .h1     .p.val   .adj.p #>    <fct>  <chr>                                    <dbl> <fct>    <dbl>    <dbl> #>  1 Female Buccal mucosa - Buccal mucosa vs S…     -0.791 != 0  1.66e-35 2.91e-34 #>  2 Female Buccal mucosa - Saliva vs Stool         -0.789 != 0  1.94e-35 2.91e-34 #>  3 Female Buccal mucosa - Buccal mucosa vs S…     -0.596 != 0  5.30e-23 5.30e-22 #>  4 Male   Saliva - Saliva vs Stool                -0.528 != 0  4.09e-22 3.06e-21 #>  5 Male   Saliva - Buccal mucosa vs Stool         -0.526 != 0  5.30e-22 3.18e-21 #>  6 Female Buccal mucosa vs Saliva - Buccal m…     -0.195 != 0  2.44e-20 1.22e-19 #>  7 Female Buccal mucosa vs Saliva - Saliva v…     -0.193 != 0  3.80e-20 1.63e-19 #>  8 Female Saliva - Buccal mucosa vs Stool         -0.505 != 0  5.18e-20 1.94e-19 #>  9 Female Saliva - Saliva vs Stool                -0.503 != 0  5.95e-20 1.98e-19 #> 10 Male   Buccal mucosa - Saliva vs Stool         -0.531 != 0  9.76e-19 2.93e-18 #> # ℹ 20 more rows"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance / dissimilarity between samples. — bdiv_table","title":"Distance / dissimilarity between samples. — bdiv_table","text":"Distance / dissimilarity samples.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance / dissimilarity between samples. — bdiv_table","text":"","code":"bdiv_table(   biom,   bdiv = \"Bray-Curtis\",   weighted = TRUE,   normalized = TRUE,   tree = NULL,   md = \".all\",   within = NULL,   between = NULL,   delta = \".all\",   transform = \"none\",   ties = \"random\",   seed = 0,   cpus = NULL )  bdiv_matrix(   biom,   bdiv = \"Bray-Curtis\",   weighted = TRUE,   normalized = TRUE,   tree = NULL,   within = NULL,   between = NULL,   transform = \"none\",   ties = \"random\",   seed = 0,   cpus = NULL,   underscores = FALSE )  bdiv_distmat(   biom,   bdiv = \"Bray-Curtis\",   weighted = TRUE,   normalized = TRUE,   tree = NULL,   within = NULL,   between = NULL,   transform = \"none\",   cpus = NULL )"},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance / dissimilarity between samples. — bdiv_table","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Multiple/abbreviated values allowed. Default: \"Bray-Curtis\" weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Multiple values allowed. Default: TRUE normalized changes \"Weighted UniFrac\" calculation. Divides result total branch weights. Default: TRUE tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree md Dataset field(s) include output data frame, '.' include metadata fields. Default: '.' within, Dataset field(s) intra- inter- sample comparisons. Alternatively, dataset field names given elsewhere can prefixed '==' '!=' assign within , respectively. Default: NULL delta numeric metadata, report absolute difference values two samples, instance 2 instead \"10 vs 12\". Default: TRUE transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" ties transform=\"rank\", rank identical values. Options : c(\"average\", \"first\", \"last\", \"random\", \"max\", \"min\"). See rank() details. Default: \"random\" seed Random seed permutations. Must non-negative integer. Default: 0 cpus number CPUs use. Set NULL use available, 1 disable parallel processing. Default: NULL underscores parsing tree, underscores kept ? default converted spaces (unless entire ID quoted). Default FALSE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance / dissimilarity between samples. — bdiv_table","text":"bdiv_matrix() - R matrix samples x samples. bdiv_distmat() - dist-class distance matrix. bdiv_table() - tibble data.frame columns names .sample1, .sample2, .weighted, .bdiv, .distance, fields requested md. Numeric metadata fields returned abs(x - y); categorical metadata fields \"x\", \"y\", \"x vs y\".","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_table.html","id":"metadata-comparisons","dir":"Reference","previous_headings":"","what":"Metadata Comparisons","title":"Distance / dissimilarity between samples. — bdiv_table","text":"Prefix metadata fields == != limit comparisons within groups, respectively. example, stat.= '==Sex' run calculations intra-group comparisons, returning \"Male\" \"Female\", \"Female vs Male\". Similarly, setting stat.= '!=Body Site' show inter-group comparisons, \"Saliva vs Stool\", \"Anterior nares vs Buccal mucosa\", . effect can achieved using within parameters. stat.= '==Sex' equivalent stat.= 'Sex', within = 'Sex'.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdiv_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance / dissimilarity between samples. — bdiv_table","text":"","code":"library(rbiom)          # Subset to four samples     biom <- hmp50$clone()     biom$counts <- biom$counts[,c(\"HMP18\", \"HMP19\", \"HMP20\", \"HMP21\")]          # Return in long format with metadata     bdiv_table(biom, 'unifrac', md = \".all\") #> # A tibble: 6 × 9 #>   .sample1 .sample2 .weighted .bdiv   .distance   Age   BMI `Body Site`    Sex   #>   <chr>    <chr>    <lgl>     <fct>       <dbl> <dbl> <dbl> <fct>          <fct> #> 1 HMP18    HMP19    TRUE      UniFrac     0.735     0     3 Saliva vs Sto… Fema… #> 2 HMP18    HMP20    TRUE      UniFrac     0.765     1     2 Saliva vs Sto… Fema… #> 3 HMP18    HMP21    TRUE      UniFrac     0.771     4     2 Saliva vs Sto… Male  #> 4 HMP19    HMP20    TRUE      UniFrac     0.433     1     5 Stool          Fema… #> 5 HMP19    HMP21    TRUE      UniFrac     0.387     4     1 Stool          Fema… #> 6 HMP20    HMP21    TRUE      UniFrac     0.150     5     4 Stool          Fema…          # Only look at distances among the stool samples     bdiv_table(biom, 'unifrac', md = c(\"==Body Site\", \"Sex\")) #> # A tibble: 3 × 7 #>   .sample1 .sample2 .weighted .bdiv   .distance `Body Site` Sex            #>   <chr>    <chr>    <lgl>     <fct>       <dbl> <fct>       <fct>          #> 1 HMP19    HMP20    TRUE      UniFrac     0.433 Stool       Female         #> 2 HMP19    HMP21    TRUE      UniFrac     0.387 Stool       Female vs Male #> 3 HMP20    HMP21    TRUE      UniFrac     0.150 Stool       Female vs Male          # Or between males and females     bdiv_table(biom, 'unifrac', md = c(\"Body Site\", \"!=Sex\")) #> # A tibble: 4 × 7 #>   .sample1 .sample2 .weighted .bdiv   .distance `Body Site`     Sex            #>   <chr>    <chr>    <lgl>     <fct>       <dbl> <fct>           <fct>          #> 1 HMP18    HMP19    TRUE      UniFrac     0.735 Saliva vs Stool Female vs Male #> 2 HMP18    HMP20    TRUE      UniFrac     0.765 Saliva vs Stool Female vs Male #> 3 HMP19    HMP21    TRUE      UniFrac     0.387 Stool           Female vs Male #> 4 HMP20    HMP21    TRUE      UniFrac     0.150 Stool           Female vs Male          # All-vs-all matrix     bdiv_matrix(biom, 'unifrac') #>           HMP18     HMP19     HMP20     HMP21 #> HMP18 0.0000000 0.7353910 0.7649262 0.7705909 #> HMP19 0.7353910 0.0000000 0.4332007 0.3874131 #> HMP20 0.7649262 0.4332007 0.0000000 0.1503528 #> HMP21 0.7705909 0.3874131 0.1503528 0.0000000 #> attr(,\"cmd\") #> [1] \"bdiv_matrix(biom, \\\"unifrac\\\")\"          # All-vs-all distance matrix     dm <- bdiv_distmat(biom, 'unifrac')     dm #>           HMP18     HMP19     HMP20 #> HMP19 0.7353910                     #> HMP20 0.7649262 0.4332007           #> HMP21 0.7705909 0.3874131 0.1503528     plot(hclust(dm))"},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to each subset of an rbiom object. — bdply","title":"Apply a function to each subset of an rbiom object. — bdply","text":"blply() bdply() let divide biom dataset smaller pieces, run function smaller rbiom objects, return results data.frame list.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to each subset of an rbiom object. — bdply","text":"","code":"bdply(biom, vars, FUN, ..., iters = list(), prefix = FALSE)  blply(biom, vars, FUN, ..., iters = list(), prefix = FALSE)"},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to each subset of an rbiom object. — bdply","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . vars character vector metadata fields. unique combination values columns used create subsetted rbiom object pass FUN. NULL, biom passed FUN unaltered. Unambiguous abbreviations metadata fields also accepted. FUN function execute subset biom. bdply(), returned value coerced data.frame. blply(), returned value unmodified. ... Additional arguments pass FUN. iters named list values pass FUN. Unlike ..., iterated combinations. Default: list() prefix TRUE, prefixes names iters '.' final data.frame 'split_labels' attribute. Default: FALSE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a function to each subset of an rbiom object. — bdply","text":"bdply(), tibble data.frame comprising accumulated outputs FUN, along columns specified vars iters. blply(), named list details vars iters attr(,'split_labels').","code":""},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a function to each subset of an rbiom object. — bdply","text":"can also specify additional variables function iterate unique combinations. Calls plyr::ddply() plyr::dlply() internally.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/bdply.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a function to each subset of an rbiom object. — bdply","text":"","code":"library(rbiom)          bdply(hmp50, \"Sex\", `$`, 'n_samples') #> # A tibble: 2 × 2 #>   Sex       V1 #>   <fct>  <int> #> 1 Female    30 #> 2 Male      20          blply(hmp50, \"Sex\", `$`, 'n_samples') %>% unlist() #> Female   Male  #>     30     20           bdply(hmp50, c(\"Body Site\", \"Sex\"), function (b) {       adm <- adiv_matrix(b)[,c(\"Shannon\", \"Simpson\")]       apply(adm, 2L, mean)     }) #> # A tibble: 9 × 4 #>   `Body Site`    Sex    Shannon Simpson #>   <fct>          <fct>    <dbl>   <dbl> #> 1 Anterior nares Female   1.43    0.681 #> 2 Anterior nares Male     1.51    0.665 #> 3 Buccal mucosa  Female   1.17    0.408 #> 4 Buccal mucosa  Male     1.71    0.602 #> 5 Mid vagina     Female   0.407   0.167 #> 6 Saliva         Female   2.93    0.893 #> 7 Saliva         Male     3.17    0.913 #> 8 Stool          Female   2.43    0.850 #> 9 Stool          Male     2.51    0.835          iters <- list(w = c(TRUE, FALSE), d = c(\"bray\", \"euclid\"))     bdply(hmp50, \"Sex\", iters = iters, function (b, w, d) {       r <- range(bdiv_distmat(biom = b, bdiv = d, weighted = w))       round(data.frame(min = r[[1]], max = r[[2]]))     }) #> # A tibble: 8 × 5 #>   Sex    w     d        min   max #>   <fct>  <lgl> <chr>  <dbl> <dbl> #> 1 Female TRUE  bray       0     1 #> 2 Female FALSE bray       0     1 #> 3 Female TRUE  euclid   123 17185 #> 4 Female FALSE euclid     3    12 #> 5 Male   TRUE  bray       0     1 #> 6 Male   FALSE bray       0     1 #> 7 Male   TRUE  euclid   292 11855 #> 8 Male   FALSE euclid     5    14"},{"path":"https://cmmr.github.io/rbiom/reference/biom_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine several rbiom objects into one. — biom_merge","title":"Combine several rbiom objects into one. — biom_merge","text":"WARNING: generally ill-advised merge BIOM datasets, OTUs mappings dependent upstream clustering equivalent BIOM files.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/biom_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine several rbiom objects into one. — biom_merge","text":"","code":"biom_merge(   ...,   metadata = NA,   taxonomy = NA,   tree = NULL,   sequences = NA,   id = NA,   comment = NA )"},{"path":"https://cmmr.github.io/rbiom/reference/biom_merge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine several rbiom objects into one. — biom_merge","text":"... number rbiom objects (e.g. as_rbiom()), lists rbiom objects, valid arguments biom parameter as_rbiom() (instance file names). metadata, taxonomy, tree, sequences, id, comment Replace corresponding data merged rbiom object values. Set NULL inherit particular component. default, NA, attempt create component based ... values. merged phylogenetic tree inferred.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/biom_merge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine several rbiom objects into one. — biom_merge","text":"rbiom object.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/biom_merge.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine several rbiom objects into one. — biom_merge","text":"","code":"library(rbiom)          b1 <- as_rbiom(hmp50$counts[,1:4])     b2 <- as_rbiom(hmp50$counts[,5:8])          biom <- biom_merge(b1, b2)     print(biom) #>  #> ══ Merged BIOM ═════════════════════════════════════════════ #>  #>       8 Samples: HMP01, HMP02, HMP03, ..., and HMP08  #>     168 OTUs:    Unc53100, PpbAcne6, UncO2012, ...  #>       1 Ranks:   .otu  #>       1 Fields:  .sample  #>         Tree:    <absent> #>  #> ── 1.4k - 4.2k reads/sample ────────────────── 2025-02-04 ── #>           biom$tree     <- hmp50$tree     biom$metadata <- hmp50$metadata #> Warning: ℹ Ignoring metadata for 42 samples not currently in biom object: \"HMP09\", #>   \"HMP10\", \"HMP11\", \"HMP12\", \"HMP13\", \"HMP14\", \"HMP15\", \"HMP16\", \"HMP17\", #>   \"HMP18\", \"HMP19\", \"HMP20\", \"HMP21\", \"HMP22\", \"HMP23\", \"HMP24\", \"HMP25\", #>   \"HMP26\", …, \"HMP49\", and \"HMP50\".     print(biom) #>  #> ══ Merged BIOM ═════════════════════════════════════════════ #>  #>       8 Samples: HMP01, HMP02, HMP03, ..., and HMP08  #>     168 OTUs:    Unc53100, PpbAcne6, UncO2012, ...  #>       1 Ranks:   .otu  #>       5 Fields:  .sample, Age, BMI, Body Site, and Sex  #>         Tree:    <present> #>  #> ── 1.4k - 4.2k reads/sample ────────────────── 2025-02-04 ── #>"},{"path":"https://cmmr.github.io/rbiom/reference/convert_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert biom data to an external package class. — convert_to","title":"Convert biom data to an external package class. — convert_to","text":"Requires relevant Bioconductor R package installed: convert_to_phyloseq - phyloseq convert_to_SE - SummarizedExperiment convert_to_TSE - TreeSummarizedExperiment","code":""},{"path":"https://cmmr.github.io/rbiom/reference/convert_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert biom data to an external package class. — convert_to","text":"","code":"convert_to_SE(biom, ...)  convert_to_TSE(biom, ...)  convert_to_phyloseq(biom, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/convert_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert biom data to an external package class. — convert_to","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . ... Used.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/convert_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert biom data to an external package class. — convert_to","text":"phyloseq, SummarizedExperiment, TreeSummarizedExperiment object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/convert_to.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert biom data to an external package class. — convert_to","text":"SummarizedExperiment object includes counts, metadata, taxonomy. phyloseq TreeSummarizedExperiment additionally includes tree sequences.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/convert_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert biom data to an external package class. — convert_to","text":"","code":"if (FALSE) { # \\dontrun{     library(rbiom)      print(hmp50)      # Requires 'phyloseq', a Bioconductor R package     if (nzchar(system.file(package = \"phyloseq\"))) {       physeq <- convert_to_phyloseq(hmp50)       print(physeq)     }      # Requires 'SummarizedExperiment', a Bioconductor R package     if (nzchar(system.file(package = \"SummarizedExperiment\"))) {       se <- convert_to_SE(hmp50)       print(se)     }      # Requires 'TreeSummarizedExperiment', a Bioconductor R package     if (nzchar(system.file(package = \"TreeSummarizedExperiment\"))) {       tse <- convert_to_TSE(hmp50)       print(tse)     } } # }"},{"path":"https://cmmr.github.io/rbiom/reference/distmat_ord_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Run ordinations on a distance matrix. — distmat_ord_table","title":"Run ordinations on a distance matrix. — distmat_ord_table","text":"Run ordinations distance matrix.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/distmat_ord_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run ordinations on a distance matrix. — distmat_ord_table","text":"","code":"distmat_ord_table(dm, ord = \"PCoA\", k = 2L, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/distmat_ord_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run ordinations on a distance matrix. — distmat_ord_table","text":"dm dist-class distance matrix, returned bdiv_distmat() stats::dist(). Required. ord Method reducing dimensionality. Options : \"PCoA\" - Principal coordinate analysis; ape::pcoa(). \"UMAP\" - Uniform manifold approximation projection; uwot::umap(). \"NMDS\" - Nonmetric multidimensional scaling; vegan::metaMDS(). \"tSNE\" - t-distributed stochastic neighbor embedding; tsne::tsne(). Multiple/abbreviated values allowed. Default: \"PCoA\" k Number ordination dimensions return. Either 2L 3L. Default: 2L ... Additional arguments ord.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/distmat_ord_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run ordinations on a distance matrix. — distmat_ord_table","text":"data.frame columns .sample, .ord, .x, .y, (optionally) .z.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/distmat_ord_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run ordinations on a distance matrix. — distmat_ord_table","text":"","code":"library(rbiom)           dm  <- bdiv_distmat(hmp50, \"bray\")     ord <- distmat_ord_table(dm, \"PCoA\")     head(ord) #> # Ordination: pcoa(D = dm) #> # A tibble:   6 × 4 #>   .ord  .sample     .x       .y #>   <fct> <chr>    <dbl>    <dbl> #> 1 PCoA  HMP01   -0.358  0.00236 #> 2 PCoA  HMP02   -0.420  0.0104  #> 3 PCoA  HMP03   -0.382  0.0135  #> 4 PCoA  HMP04   -0.388  0.00485 #> 5 PCoA  HMP05   -0.415 -0.0115  #> 6 PCoA  HMP06   -0.414 -0.00703"},{"path":"https://cmmr.github.io/rbiom/reference/distmat_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","title":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","text":"Run statistics distance matrix vs categorical numeric variable.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/distmat_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","text":"","code":"distmat_stats(dm, groups, test = \"adonis2\", seed = 0, permutations = 999)"},{"path":"https://cmmr.github.io/rbiom/reference/distmat_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","text":"dm dist-class distance matrix, returned bdiv_distmat() stats::dist(). Required. groups named vector grouping values. names correspond attr(dm, 'Labels'). Values can either categorical numeric. Required. test Permutational test accessing significance. Options : \"adonis2\" - Permutational MANOVA; vegan::adonis2(). \"mrpp\" - Multiple response permutation procedure; vegan::mrpp(). \"none\" - run statistics. Abbreviations allowed. Default: \"adonis2\" seed Random seed permutations. Must non-negative integer. Default: 0 permutations Number random permutations use. Default: 999","code":""},{"path":"https://cmmr.github.io/rbiom/reference/distmat_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","text":"data.frame summary statistics vegan::permustats(). columns : .n - size distance matrix. .stat - observed statistic. mrpp, overall weighted mean group mean distances. .z - difference observed statistic mean permutations divided standard deviation permutations (also known z-values). Evaluated permuted values without observed statistic. .p.val - Probability calculated test. R commands reproducing results $code.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/distmat_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run statistics on a distance matrix vs a categorical or numeric variable. — distmat_stats","text":"","code":"library(rbiom)          hmp10        <- hmp50$clone()     hmp10$counts <- hmp10$counts[,1:10]          dm <- bdiv_distmat(hmp10, 'unifrac')          distmat_stats(dm, groups = pull(hmp10, 'Body Site')) #> # A tibble: 1 × 4 #>      .n .stat    .z .p.val #>   <int> <dbl> <dbl>  <dbl> #> 1    10  9.61  11.5  0.001          distmat_stats(dm, groups = pull(hmp10, 'Age')) #> # A tibble: 1 × 4 #>      .n .stat    .z .p.val #>   <int> <dbl> <dbl>  <dbl> #> 1    10  3.84  3.25  0.021          # See the R code used to calculate these statistics:     stats <- distmat_stats(dm, groups = pull(hmp10, 'Age'))     stats$code #> grouping <- groups[attr(dm, 'Labels')] #> set.seed(0) #>  #> vegan::adonis2(formula = dm ~ grouping, permutations = 999) %>% #>   vegan::permustats() %>% #>   summary() %>% #>   with(data.frame(.stat = statistic, .z = z, .p.val = p)) %>% #>   tryCatch( #>     error   = function (e) data.frame(.stat=NA, .z=NA, .p.val=NA),  #>     warning = function (w) data.frame(.stat=NA, .z=NA, .p.val=NA) ) %>% #>   data.frame(row.names = NULL, .n = attr(dm, 'Size'), .)"},{"path":"https://cmmr.github.io/rbiom/reference/documentation_biom.rbiom.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_biom.rbiom — documentation_biom.rbiom","title":"documentation_biom.rbiom — documentation_biom.rbiom","text":"documentation_biom.rbiom","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_biom.rbiom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_biom.rbiom — documentation_biom.rbiom","text":"biom rbiom object, as_rbiom(). .data rbiom object, as_rbiom(). x rbiom object, as_rbiom(). object rbiom object, as_rbiom(). data rbiom object, as_rbiom().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_clusters — documentation_clusters","title":"documentation_clusters — documentation_clusters","text":"documentation_clusters","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_clusters — documentation_clusters","text":"k Number clusters. Default: 5L rank taxa rank use. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: .otu.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"documentation_clusters — documentation_clusters","text":"numeric factor assigning samples clusters.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_cmp.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_cmp — documentation_cmp","title":"documentation_cmp — documentation_cmp","text":"documentation_cmp","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_cmp.html","id":"metadata-comparisons","dir":"Reference","previous_headings":"","what":"Metadata Comparisons","title":"documentation_cmp — documentation_cmp","text":"Prefix metadata fields == != limit comparisons within groups, respectively. example, stat.= '==Sex' run calculations intra-group comparisons, returning \"Male\" \"Female\", \"Female vs Male\". Similarly, setting stat.= '!=Body Site' show inter-group comparisons, \"Saliva vs Stool\", \"Anterior nares vs Buccal mucosa\", . effect can achieved using within parameters. stat.= '==Sex' equivalent stat.= 'Sex', within = 'Sex'.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_default.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_default — documentation_default","title":"documentation_default — documentation_default","text":"documentation_default","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_default.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_default — documentation_default","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . mtx matrix-like object. tree phylo object representing phylogenetic relationships taxa biom. required computing UniFrac distances. Default: biom$tree underscores parsing tree, underscores kept ? default converted spaces (unless entire ID quoted). Default FALSE md Dataset field(s) include output data frame, '.' include metadata fields. Default: '.' adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Multiple/abbreviated values allowed. Default: \"Shannon\" bdiv Beta diversity distance algorithm(s) use. Options : \"Bray-Curtis\", \"Manhattan\", \"Euclidean\", \"Jaccard\", \"UniFrac\". \"UniFrac\", phylogenetic tree must present biom explicitly provided via tree=. Multiple/abbreviated values allowed. Default: \"Bray-Curtis\" taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. ord Method reducing dimensionality. Options : \"PCoA\" - Principal coordinate analysis; ape::pcoa(). \"UMAP\" - Uniform manifold approximation projection; uwot::umap(). \"NMDS\" - Nonmetric multidimensional scaling; vegan::metaMDS(). \"tSNE\" - t-distributed stochastic neighbor embedding; tsne::tsne(). Multiple/abbreviated values allowed. Default: \"PCoA\" weighted Take relative abundances account. weighted=FALSE, presence/absence considered. Multiple values allowed. Default: TRUE normalized changes \"Weighted UniFrac\" calculation. Divides result total branch weights. Default: TRUE delta numeric metadata, report absolute difference values two samples, instance 2 instead \"10 vs 12\". Default: TRUE rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE sparse TRUE, returns slam::simple_triplet_matrix(), otherwise returns normal R matrix object. Default: FALSE p.top display taxa significant differences abundance. p.top >= 1, p.top significant taxa displayed. p.top less one, taxa adjusted p-value <= p.top displayed. Recommended used combination taxa parameter set lower bound mean abundance considered taxa. Default: Inf y.transform transformation apply y-axis. Visualizing differences high- low-abundance taxa best done non-linear axis. Options : \"sqrt\" - square-root transformation \"log1p\" - log(y + 1) transformation \"none\" - transformation methods allow visualization high- low-abundance taxa simultaneously, without complaint 'zero' count observations. Default: \"sqrt\" Use xaxis.transform yaxis.transform pass custom values directly ggplot2's scale_* functions. flip Transpose axes, taxa present rows instead columns. Default: FALSE stripe Shade every x position. Default: flip ci calculate min/max crossbar, errorbar, linerange, pointrange layers. Options : \"ci\" (confidence interval), \"range\", \"sd\" (standard deviation), \"se\" (standard error), \"mad\" (median absolute deviation). center mark crossbar pointrange represents mean, except \"mad\" case represents median. Default: \"ci\" p.label Minimum adjusted p-value display plot bracket. p.label = 0.05 - Show p-values <= 0.05. p.label = 0 - show p-values plot. p.label = 1 - Show p-values plot. numeric vector one value provided, used breaks asterisk notation. Default: 0.05 level confidence level calculating confidence interval. Default: 0.95 caption Add methodology caption beneath plot. Default: TRUE outliers Show boxplot outliers? TRUE always show. FALSE always hide. NULL hide overlaying dot strip chart.  Default: NULL xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". k Number ordination dimensions return. Either 2L 3L. Default: 2L split.Dataset field(s) data split prior calculations. Must categorical. Default: NULL dm dist-class distance matrix, returned bdiv_distmat() stats::dist(). Required. groups named vector grouping values. names correspond attr(dm, 'Labels'). Values can either categorical numeric. Required. df dataset (data.frame tibble object). \"Dataset fields\" mentioned match column names df. Required. regr Dataset field x-axis (independent; predictive) values. Must numeric. Default: NULL resp Dataset field y-axis (dependent; response) values, taxa abundance alpha diversity. Default: attr(df, 'response') stat.Dataset field statistical groups. Must categorical. Default: NULL color.Dataset field group color . Must categorical. Default: stat.shape.Dataset field group shapes. Must categorical. Default: stat.facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE patterns Patterns group. Options similar colors's: TRUE, FALSE, NULL, pattern names (\"brick\", \"chevron\", \"fish\", \"grid\", etc), named vector mapping groups specific pattern names. See \"Aesthetics\" section additional information. Default: FALSE test Method computing p-values: 'wilcox', 'kruskal', 'emmeans', 'emtrends'. Default: 'emmeans' fit fit trendline. 'lm', 'log', 'gam'. Default: 'gam' Position(s) along x-axis means slopes evaluated. Default: NULL, samples 100 evenly spaced positions selects position p-value significant. alt Alternative hypothesis direction. Options '!=' (two-sided; equal mu), '<' (less mu), '>' (greater mu). Default: '!=' mu Reference value test . Default: 0 check Generate additional plots aid assessing data normality. Default: FALSE within, Dataset field(s) intra- inter- sample comparisons. Alternatively, dataset field names given elsewhere can prefixed '==' '!=' assign within , respectively. Default: NULL seed Random seed permutations. Must non-negative integer. Default: 0 cpus number CPUs use. Set NULL use available, 1 disable parallel processing. Default: NULL permutations Number random permutations use. Default: 999 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" depths Rarefaction depths show plot, NULL auto-select. Default: NULL rline draw horizontal line plot, intended show particular rarefaction depth. Set TRUE show auto-selected rarefaction depth FALSE show line. Default: NULL clone Create copy biom modifying. FALSE, biom modified place side-effect. See speed ups use cases. Default: TRUE labels Show sample names bar. Default: FALSE transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" ties transform=\"rank\", rank identical values. Options : c(\"average\", \"first\", \"last\", \"random\", \"max\", \"min\"). See rank() details. Default: \"random\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_dist_test.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_dist_test — documentation_dist_test","title":"documentation_dist_test — documentation_dist_test","text":"documentation_dist_test","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_dist_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_dist_test — documentation_dist_test","text":"stat.categorical numeric metadata field statistics calculated. Required. test Permutational test accessing significance. Options : \"adonis2\" - Permutational MANOVA; vegan::adonis2(). \"mrpp\" - Multiple response permutation procedure; vegan::mrpp(). \"none\" - run statistics. Abbreviations allowed. Default: \"adonis2\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_heatmap — documentation_heatmap","title":"documentation_heatmap — documentation_heatmap","text":"documentation_heatmap","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_heatmap — documentation_heatmap","text":"grid Color palette name, list entries label, colors, range, bins, na.color, /guide. See Track Definitions section details. Default: list(label = \"Grid Value\", colors = \"imola\") label Label matrix rows columns. can supply list logical vector length two control row labels column labels separately, example label = c(rows = TRUE, cols = FALSE), simply label = c(TRUE, FALSE). valid options \"rows\", \"cols\", \"\", \"bottom\", \"right\", \"none\". Default: TRUE label_size font size use row column labels. can supply numeric vector length two control row label sizes column label sizes separately, example c(rows = 20, cols = 8), simply c(20, 8). Default: NULL, computes: pmax(8, pmin(20, 100 / dim(mtx))) rescale Rescale rows columns common min/max. Options: \"none\", \"rows\", \"cols\". Default: \"none\" trees Draw dendrogram rows (left) columns (top). can supply list logical vector length two control row tree column tree separately, example trees = c(rows = TRUE, cols = FALSE), simply trees = c(TRUE, FALSE). valid options \"rows\", \"cols\", \"\", \"left\", \"top\", \"none\". Default: TRUE clust Clustering algorithm reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example clust = c(rows = \"complete\", cols = NA), simply clust = c(\"complete\", NA). Options : FALSE NA - Disable reordering. hclust class object E.g. stats::hclust(). method name - \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\", \"centroid\". Default: \"complete\" dist Distance algorithm use reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example dist = c(rows = \"euclidean\", cols = \"maximum\"), simply dist = c(\"euclidean\", \"maximum\"). Options : dist class object E.g. stats::dist() bdiv_distmat(). method name - \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\", \"minkowski\". Default: \"euclidean\" tree_height, track_height height dendrogram annotation tracks percentage overall grid size. Use numeric vector length two assign c(top, left) independently. Default: 10 (10% grid's height) asp Aspect ratio (height/width) entire grid. Default: 1 (square) legend place legend. Options : \"right\" \"bottom\". Default: \"right\" title Plot title. Set TRUE default title, NULL title, character string. Default: TRUE ... Additional arguments pass ggplot2::theme().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"documentation_heatmap — documentation_heatmap","text":"ggplot2 plot. computed data points ggplot command available $data $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_plot_return.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_plot_return — documentation_plot_return","title":"documentation_plot_return — documentation_plot_return","text":"documentation_plot_return","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_plot_return.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"documentation_plot_return — documentation_plot_return","text":"ggplot2 plot. computed data points ggplot command available $data $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_rank.2.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_rank.2 — documentation_rank.2","title":"documentation_rank.2 — documentation_rank.2","text":"documentation_rank.2","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_rank.2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_rank.2 — documentation_rank.2","text":"rank rank(s) taxa compute biplot coordinates statistics , NULL disable. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_rank.NULL.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_rank.NULL — documentation_rank.NULL","title":"documentation_rank.NULL — documentation_rank.NULL","text":"documentation_rank.NULL","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_rank.NULL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_rank.NULL — documentation_rank.NULL","text":"rank rank(s) taxa compute biplot coordinates statistics , NULL disable. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: NULL.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_return.biom.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_return.biom — documentation_return.biom","title":"documentation_return.biom — documentation_return.biom","text":"documentation_return.biom","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_return.biom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"documentation_return.biom — documentation_return.biom","text":"rbiom object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_taxa.4.html","id":null,"dir":"Reference","previous_headings":"","what":"documentation_taxa.4 — documentation_taxa.4","title":"documentation_taxa.4 — documentation_taxa.4","text":"documentation_taxa.4","code":""},{"path":"https://cmmr.github.io/rbiom/reference/documentation_taxa.4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"documentation_taxa.4 — documentation_taxa.4","text":"taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 4.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/export.html","id":null,"dir":"Reference","previous_headings":"","what":"Export data to QIIME 2 or mothur. — export","title":"Export data to QIIME 2 or mothur. — export","text":"Populates directory following files, formatted according QIIME 2 mothur's specifications. biom_counts.tsv biom_metadata.tsv biom_taxonomy.tsv biom_tree.nwk biom_seqs.fna biom_counts.tsv always created. others dependent whether content present biom argument.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/export.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Export data to QIIME 2 or mothur. — export","text":"","code":"write_mothur(biom, dir = tempfile(), prefix = \"biom_\")  write_qiime2(biom, dir = tempfile(), prefix = \"biom_\")"},{"path":"https://cmmr.github.io/rbiom/reference/export.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Export data to QIIME 2 or mothur. — export","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . dir save files. directory exist, created. Default: tempfile() prefix string prepend file name. Default: 'biom_'","code":""},{"path":"https://cmmr.github.io/rbiom/reference/export.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Export data to QIIME 2 or mothur. — export","text":"normalized directory path written (invisibly).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/export.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Export data to QIIME 2 or mothur. — export","text":"","code":"library(rbiom)          tdir <- tempfile()          write_qiime2(hmp50, tdir, 'qiime2_')     write_mothur(hmp50, tdir, 'mothur_')          list.files(tdir) #>  [1] \"mothur_counts.tsv\"   \"mothur_metadata.tsv\" \"mothur_seqs.fna\"     #>  [4] \"mothur_taxonomy.tsv\" \"mothur_tree.nwk\"     \"qiime2_counts.tsv\"   #>  [7] \"qiime2_metadata.tsv\" \"qiime2_seqs.fna\"     \"qiime2_taxonomy.tsv\" #> [10] \"qiime2_tree.nwk\"              readLines(file.path(tdir, 'qiime2_metadata.tsv'), n = 4) #> [1] \"sample-id\\tAge\\tBMI\\t\\\"Body Site\\\"\\tSex\"               #> [2] \"#q2:types\\tnumeric\\tnumeric\\tcategorical\\tcategorical\" #> [3] \"HMP01\\t22\\t20\\t\\\"Buccal mucosa\\\"\\tFemale\"              #> [4] \"HMP02\\t24\\t23\\t\\\"Buccal mucosa\\\"\\tMale\"                         readLines(file.path(tdir, 'mothur_taxonomy.tsv'), n = 3) #> [1] \"OTU\\tSize\\tTaxonomy\"                                                                  #> [2] \"1\\t24096\\tBacteria;Firmicutes;Bacilli;Lactobacillales;Lactobacillaceae;Lactobacillus\" #> [3] \"2\\t23409\\tBacteria;Firmicutes;Bacilli;Lactobacillales;Streptococcaceae;Streptococcus\"          unlink(tdir, recursive = TRUE)"},{"path":"https://cmmr.github.io/rbiom/reference/gems.html","id":null,"dir":"Reference","previous_headings":"","what":"Global Enteric Multicenter Study (n = 1,006) — gems","title":"Global Enteric Multicenter Study (n = 1,006) — gems","text":"Global Enteric Multicenter Study (n = 1,006)","code":""},{"path":"https://cmmr.github.io/rbiom/reference/gems.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global Enteric Multicenter Study (n = 1,006) — gems","text":"","code":"gems"},{"path":"https://cmmr.github.io/rbiom/reference/gems.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global Enteric Multicenter Study (n = 1,006) — gems","text":"rbiom object 1,006 samples. Includes metadata taxonomy. diarrhea - Case Control age - 0 - 4.8 (years old) country - Bangladesh, Gambia, Kenya, Mali","code":""},{"path":"https://cmmr.github.io/rbiom/reference/gems.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Global Enteric Multicenter Study (n = 1,006) — gems","text":"doi:10.1186/gb-2014-15-6-r76  doi:10.1093/nar/gkx1027","code":""},{"path":"https://cmmr.github.io/rbiom/reference/glimpse.rbiom.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a glimpse of your metadata. — glimpse.rbiom","title":"Get a glimpse of your metadata. — glimpse.rbiom","text":"Get glimpse metadata.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/glimpse.rbiom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a glimpse of your metadata. — glimpse.rbiom","text":"","code":"# S3 method for class 'rbiom' glimpse(x, width = NULL, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/glimpse.rbiom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a glimpse of your metadata. — glimpse.rbiom","text":"x rbiom object, as_rbiom(). width Width output. See pillar::glimpse() documentation. Default: NULL ... used.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/glimpse.rbiom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a glimpse of your metadata. — glimpse.rbiom","text":"original biom, invisibly.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/glimpse.rbiom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a glimpse of your metadata. — glimpse.rbiom","text":"","code":"library(rbiom)          glimpse(hmp50) #> Rows: 50 #> Columns: 5 #> $ .sample     <chr> \"HMP01\", \"HMP02\", \"HMP03\", \"HMP04\", \"HMP05\", \"HMP06\", \"HMP… #> $ Age         <dbl> 22, 24, 28, 25, 27, 32, 26, 27, 33, 22, 24, 35, 24, 32, 25… #> $ BMI         <dbl> 20, 23, 26, 23, 24, 25, 22, 26, 32, 20, 23, 26, 21, 26, 21… #> $ `Body Site` <fct> Buccal mucosa, Buccal mucosa, Saliva, Saliva, Buccal mucos… #> $ Sex         <fct> Female, Male, Male, Male, Female, Male, Male, Female, Male…"},{"path":"https://cmmr.github.io/rbiom/reference/hmp50.html","id":null,"dir":"Reference","previous_headings":"","what":"Human Microbiome Project - demo dataset (n = 50) — hmp50","title":"Human Microbiome Project - demo dataset (n = 50) — hmp50","text":"Human Microbiome Project - demo dataset (n = 50)","code":""},{"path":"https://cmmr.github.io/rbiom/reference/hmp50.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Human Microbiome Project - demo dataset (n = 50) — hmp50","text":"","code":"hmp50"},{"path":"https://cmmr.github.io/rbiom/reference/hmp50.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Human Microbiome Project - demo dataset (n = 50) — hmp50","text":"rbiom object 50 samples. Includes metadata, taxonomy, phylogeny, sequences. Sex - Male Female Body Site - Anterior nares, Buccal mucosa, Mid vagina, Saliva, Stool Age - 21 - 40 BMI - 19 - 32","code":""},{"path":"https://cmmr.github.io/rbiom/reference/hmp50.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Human Microbiome Project - demo dataset (n = 50) — hmp50","text":"https://portal.hmpdacc.org","code":""},{"path":"https://cmmr.github.io/rbiom/reference/modify_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create, modify, and delete metadata fields. — modify_metadata","title":"Create, modify, and delete metadata fields. — modify_metadata","text":"mutate() creates new fields $metadata functions existing metadata fields. can also modify (name existing field) delete fields (setting value NULL).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/modify_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create, modify, and delete metadata fields. — modify_metadata","text":"","code":"# S3 method for class 'rbiom' mutate(.data, ..., clone = TRUE)  # S3 method for class 'rbiom' rename(.data, ..., clone = TRUE)"},{"path":"https://cmmr.github.io/rbiom/reference/modify_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create, modify, and delete metadata fields. — modify_metadata","text":".data rbiom object, as_rbiom(). ... Passed dplyr::mutate() dplyr::rename(). clone Create copy biom modifying. FALSE, biom modified place side-effect. See speed ups use cases. Default: TRUE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/modify_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create, modify, and delete metadata fields. — modify_metadata","text":"rbiom object.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/modify_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create, modify, and delete metadata fields. — modify_metadata","text":"","code":"library(rbiom)           biom <- slice_max(hmp50, BMI, n = 6)     biom$metadata #> # A tibble: 7 × 5 #>   .sample   Age   BMI `Body Site`    Sex    #> * <chr>   <dbl> <dbl> <fct>          <fct>  #> 1 HMP09      33    32 Saliva         Male   #> 2 HMP25      33    32 Anterior nares Male   #> 3 HMP37      38    31 Mid vagina     Female #> 4 HMP27      24    30 Saliva         Female #> 5 HMP43      24    30 Mid vagina     Female #> 6 HMP36      24    29 Stool          Male   #> 7 HMP48      24    29 Anterior nares Male            # Add a new field to the metadata     biom <- mutate(biom, Obsese = BMI >= 30)     biom$metadata #> # A tibble: 7 × 6 #>   .sample   Age   BMI `Body Site`    Sex    Obsese #> * <chr>   <dbl> <dbl> <fct>          <fct>  <lgl>  #> 1 HMP09      33    32 Saliva         Male   TRUE   #> 2 HMP25      33    32 Anterior nares Male   TRUE   #> 3 HMP37      38    31 Mid vagina     Female TRUE   #> 4 HMP27      24    30 Saliva         Female TRUE   #> 5 HMP43      24    30 Mid vagina     Female TRUE   #> 6 HMP36      24    29 Stool          Male   FALSE  #> 7 HMP48      24    29 Anterior nares Male   FALSE           # Rename a metadata field     biom <- rename(biom, 'Age (years)' = \"Age\")     biom$metadata #> # A tibble: 7 × 6 #>   .sample `Age (years)`   BMI `Body Site`    Sex    Obsese #> * <chr>           <dbl> <dbl> <fct>          <fct>  <lgl>  #> 1 HMP09              33    32 Saliva         Male   TRUE   #> 2 HMP25              33    32 Anterior nares Male   TRUE   #> 3 HMP37              38    31 Mid vagina     Female TRUE   #> 4 HMP27              24    30 Saliva         Female TRUE   #> 5 HMP43              24    30 Mid vagina     Female TRUE   #> 6 HMP36              24    29 Stool          Male   FALSE  #> 7 HMP48              24    29 Anterior nares Male   FALSE"},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"Create heatmap tracks dendrograms matrix.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"","code":"plot_heatmap(   mtx,   grid = list(label = \"Grid Value\", colors = \"imola\"),   tracks = NULL,   label = TRUE,   label_size = NULL,   rescale = \"none\",   trees = TRUE,   clust = \"complete\",   dist = \"euclidean\",   asp = 1,   tree_height = 10,   track_height = 10,   legend = \"right\",   title = NULL,   xlab.angle = \"auto\",   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"mtx numeric matrix named rows columns. grid Color palette name, list entries label, colors, range, bins, na.color, /guide. See Track Definitions section details. Default: list(label = \"Grid Value\", colors = \"imola\") tracks List track definitions. See details . Default: NULL. label Label matrix rows columns. can supply list logical vector length two control row labels column labels separately, example label = c(rows = TRUE, cols = FALSE), simply label = c(TRUE, FALSE). valid options \"rows\", \"cols\", \"\", \"bottom\", \"right\", \"none\". Default: TRUE label_size font size use row column labels. can supply numeric vector length two control row label sizes column label sizes separately, example c(rows = 20, cols = 8), simply c(20, 8). Default: NULL, computes: pmax(8, pmin(20, 100 / dim(mtx))) rescale Rescale rows columns common min/max. Options: \"none\", \"rows\", \"cols\". Default: \"none\" trees Draw dendrogram rows (left) columns (top). can supply list logical vector length two control row tree column tree separately, example trees = c(rows = TRUE, cols = FALSE), simply trees = c(TRUE, FALSE). valid options \"rows\", \"cols\", \"\", \"left\", \"top\", \"none\". Default: TRUE clust Clustering algorithm reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example clust = c(rows = \"complete\", cols = NA), simply clust = c(\"complete\", NA). Options : FALSE NA - Disable reordering. hclust class object E.g. stats::hclust(). method name - \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\", \"centroid\". Default: \"complete\" dist Distance algorithm use reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example dist = c(rows = \"euclidean\", cols = \"maximum\"), simply dist = c(\"euclidean\", \"maximum\"). Options : dist class object E.g. stats::dist() bdiv_distmat(). method name - \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\", \"minkowski\". Default: \"euclidean\" asp Aspect ratio (height/width) entire grid. Default: 1 (square) tree_height, track_height height dendrogram annotation tracks percentage overall grid size. Use numeric vector length two assign c(top, left) independently. Default: 10 (10% grid's height) legend place legend. Options : \"right\" \"bottom\". Default: \"right\" title Plot title. Default: NULL. xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". ... Additional arguments pass ggplot2::theme().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"ggplot2 plot. computed data points ggplot command available $data $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":"track-definitions","dir":"Reference","previous_headings":"","what":"Track Definitions","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"One colored tracks can placed left /top heatmap grid visualize associated metadata values. following entries track definitions understood: values - metadata values. unnamed, order must match matrix. range - c(min,max) use scale values. label - Label track. Defaults name list element. side - Options \"top\" (default) \"left\". colors - pre-defined palette name custom set colors map . na.color - color use NA values. bins - Bin gradient many bins/steps. guide - list arguments guide_colorbar() guide_legend(). built-color palettes colorblind-friendly. See Mapping Metadata Aesthetics images palettes. Categorical palette names: \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Numeric palette names: \"reds\", \"oranges\", \"greens\", \"purples\", \"grays\", \"acton\", \"bamako\", \"batlow\", \"bilbao\", \"buda\", \"davos\", \"devon\", \"grayC\", \"hawaii\", \"imola\", \"lajolla\", \"lapaz\", \"nuuk\", \"oslo\", \"tokyo\", \"turku\", \"bam\", \"berlin\", \"broc\", \"cork\", \"lisbon\", \"roma\", \"tofino\", \"vanimo\", \"vik\".","code":"## Categorical ---------------------------- cat_vals <- sample(c(\"Male\", \"Female\"), 10, replace = TRUE) tracks   <- list('Sex' = cat_vals) tracks   <- list('Sex' = list(values = cat_vals, colors = \"bright\")) tracks   <- list('Sex' = list(   values = cat_vals,   colors = c('Male' = \"blue\", 'Female' = \"red\")) )  ## Numeric -------------------------------- num_vals <- sample(25:40, 10, replace = TRUE) tracks   <- list('Age' = num_vals) tracks   <- list('Age' = list(values = num_vals, colors = \"greens\")) tracks   <- list('Age' = list(values = num_vals, range = c(0,50))) tracks   <- list('Age' = list(   label  = \"Age (Years)\",   values = num_vals,   colors = c(\"azure\", \"darkblue\", \"darkorchid\") ))  ## Multiple Tracks ------------------------ tracks <- list('Sex' = cat_vals, 'Age' = num_vals) tracks <- list(   list(label = \"Sex\", values = cat_vals, colors = \"bright\"),   list(label = \"Age\", values = num_vals, colors = \"greens\") )   mtx           <- matrix(sample(1:50), ncol = 10) dimnames(mtx) <- list(letters[1:5], LETTERS[1:10]) plot_heatmap(mtx = mtx, tracks = tracks)"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/plot_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a heatmap with tracks and dendrograms from any matrix. — plot_heatmap","text":"","code":"library(rbiom)           set.seed(123)     mtx <- matrix(runif(5*8), nrow = 5, dimnames = list(LETTERS[1:5], letters[1:8]))          plot_heatmap(mtx)      plot_heatmap(mtx, grid=\"oranges\")      plot_heatmap(mtx, grid=list(colors = \"oranges\", label = \"Some %\", bins = 5))           tracks <- list(       'Number' = sample(1:ncol(mtx)),       'Person' = list(         values = factor(sample(c(\"Alice\", \"Bob\"), ncol(mtx), TRUE)),         colors = c('Alice' = \"purple\", 'Bob' = \"darkcyan\") ),       'State' = list(         side   = \"left\",         values = sample(c(\"TX\", \"OR\", \"WA\"), nrow(mtx), TRUE),         colors = \"bright\" )     )          plot_heatmap(mtx, tracks=tracks)"},{"path":"https://cmmr.github.io/rbiom/reference/pull.rbiom.html","id":null,"dir":"Reference","previous_headings":"","what":"Map sample names to metadata field values. — pull.rbiom","title":"Map sample names to metadata field values. — pull.rbiom","text":"Map sample names metadata field values.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/pull.rbiom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map sample names to metadata field values. — pull.rbiom","text":"","code":"# S3 method for class 'rbiom' pull(.data, var = -1, name = \".sample\", ...)"},{"path":"https://cmmr.github.io/rbiom/reference/pull.rbiom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map sample names to metadata field values. — pull.rbiom","text":".data rbiom object, as_rbiom(). var metadata field name specified : metadata field name retrieve. Can abbreviated. positive integer, giving position counting left. negative integer, giving position counting right. Default: -1 name column used names named vector. Specified similar manner var. Default: \".sample\" ... used.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/pull.rbiom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map sample names to metadata field values. — pull.rbiom","text":"vector metadata values, named sample names.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/pull.rbiom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map sample names to metadata field values. — pull.rbiom","text":"","code":"library(rbiom)          pull(hmp50, 'Age') %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>    22    24    28    25    27    32           pull(hmp50, 'bod') %>% head(4) #>         HMP01         HMP02         HMP03         HMP04  #> Buccal mucosa Buccal mucosa        Saliva        Saliva  #> Levels: Anterior nares Buccal mucosa Mid vagina Saliva Stool"},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"Visualize rarefaction curves scatterplots trendlines.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"","code":"rare_corrplot(   biom,   adiv = \"Shannon\",   layers = \"tc\",   rline = TRUE,   stat.by = NULL,   facet.by = NULL,   colors = TRUE,   shapes = TRUE,   test = \"none\",   fit = \"log\",   at = NULL,   level = 0.95,   p.adj = \"fdr\",   transform = \"none\",   alt = \"!=\",   mu = 0,   caption = TRUE,   check = FALSE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Multiple/abbreviated values allowed. Default: \"Shannon\" layers One c(\"trend\", \"confidence\", \"point\", \"name\", \"residual\"). Single letter abbreviations also accepted. instance, c(\"trend\", \"point\") equivalent c(\"t\", \"p\") \"tp\". Default: \"tc\" rline draw horizontal line plot, intended show particular rarefaction depth. Set TRUE show auto-selected rarefaction depth FALSE show line. Default: NULL stat.Dataset field statistical groups. Must categorical. Default: NULL facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE test Method computing p-values: 'none', 'emmeans', 'emtrends'. Default: 'emmeans' fit fit trendline. Options 'lm', 'log', 'gam'. Default: 'log' Position(s) along x-axis means slopes evaluated. Default: NULL, samples 100 evenly spaced positions selects position p-value significant. level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" alt Alternative hypothesis direction. Options '!=' (two-sided; equal mu), '<' (less mu), '>' (greater mu). Default: '!=' mu Reference value test . Default: 0 caption Add methodology caption beneath plot. Default: TRUE check Generate additional plots aid assessing data normality. Default: FALSE ... Additional parameters pass along ggplot2 functions. Prefix parameter name layer name pass layer. instance, p.size = 2 ensures points size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"ggplot2 plot. computed data points, ggplot2 command, stats table, stats table commands available $data, $code, $stats, $stats$code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. -z = 65:90; -Z = 97:122 use letters instead shapes plot. Character strings may used well.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rare_corrplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize rarefaction curves with scatterplots and trendlines. — rare_corrplot","text":"","code":"library(rbiom)          biom <- subset(hmp50, `Body Site` %in% c('Saliva', 'Stool'))     rare_corrplot(biom, stat.by = \"body\", adiv = c(\"sh\", \"o\"), facet.by = \"Sex\")"},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Combines rare_corrplot and rare_stacked into a single figure. — rare_multiplot","title":"Combines rare_corrplot and rare_stacked into a single figure. — rare_multiplot","text":"Combines rare_corrplot rare_stacked single figure.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combines rare_corrplot and rare_stacked into a single figure. — rare_multiplot","text":"","code":"rare_multiplot(   biom,   adiv = \"Shannon\",   layers = \"tc\",   rline = TRUE,   stat.by = NULL,   facet.by = NULL,   colors = TRUE,   shapes = TRUE,   test = \"none\",   fit = \"log\",   at = NULL,   level = 0.95,   p.adj = \"fdr\",   transform = \"none\",   alt = \"!=\",   mu = 0,   caption = TRUE,   check = FALSE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combines rare_corrplot and rare_stacked into a single figure. — rare_multiplot","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . adiv Alpha diversity metric(s) use. Options : \"OTUs\", \"Shannon\", \"Chao1\", \"Simpson\", /\"InvSimpson\". Set adiv=\".\" use metrics. Multiple/abbreviated values allowed. Default: \"Shannon\" layers One c(\"trend\", \"confidence\", \"point\", \"name\", \"residual\"). Single letter abbreviations also accepted. instance, c(\"trend\", \"point\") equivalent c(\"t\", \"p\") \"tp\". Default: \"tc\" rline draw horizontal line plot, intended show particular rarefaction depth. Set TRUE show auto-selected rarefaction depth FALSE show line. Default: NULL stat.Dataset field statistical groups. Must categorical. Default: NULL facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE test Method computing p-values: 'none', 'emmeans', 'emtrends'. Default: 'emmeans' fit fit trendline. Options 'lm', 'log', 'gam'. Default: 'log' Position(s) along x-axis means slopes evaluated. Default: NULL, samples 100 evenly spaced positions selects position p-value significant. level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" alt Alternative hypothesis direction. Options '!=' (two-sided; equal mu), '<' (less mu), '>' (greater mu). Default: '!=' mu Reference value test . Default: 0 caption Add methodology caption beneath plot. Default: TRUE check Generate additional plots aid assessing data normality. Default: FALSE ... Additional parameters pass along ggplot2 functions. Prefix parameter name layer name pass layer. instance, p.size = 2 ensures points size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combines rare_corrplot and rare_stacked into a single figure. — rare_multiplot","text":"ggplot2 plot. computed data points, ggplot2 command, stats table, stats table commands available $data, $code, $stats, $stats$code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Combines rare_corrplot and rare_stacked into a single figure. — rare_multiplot","text":"built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. -z = 65:90; -Z = 97:122 use letters instead shapes plot. Character strings may used well.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rare_multiplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combines rare_corrplot and rare_stacked into a single figure. — rare_multiplot","text":"","code":"library(rbiom)          rare_multiplot(hmp50, stat.by = \"Body Site\")"},{"path":"https://cmmr.github.io/rbiom/reference/rare_stacked.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize the number of observations per sample. — rare_stacked","title":"Visualize the number of observations per sample. — rare_stacked","text":"Visualize number observations per sample.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_stacked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize the number of observations per sample. — rare_stacked","text":"","code":"rare_stacked(   biom,   rline = TRUE,   counts = TRUE,   labels = TRUE,   y.transform = \"log10\",   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/rare_stacked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize the number of observations per sample. — rare_stacked","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . rline draw horizontal line plot, intended show particular rarefaction depth. Set TRUE show auto-selected rarefaction depth, FALSE show line, integer custom position. Default: TRUE. counts Display number samples reads remaining rarefying rline reads per sample. Default: TRUE. labels Show sample names bar. Default: TRUE. y.transform Y-axis transformation. Options \"log10\" \"none\".  Default: \"log10\". Use xaxis.transform yaxis.transform pass custom values directly ggplot2's scale_* functions. ... Additional parameters pass along ggplot2 functions. Prefix parameter name r. ensure gets passed () geom_hline. instance, r.color = \"black\" ensures horizontal rarefaction line color set \"black\".","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rare_stacked.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize the number of observations per sample. — rare_stacked","text":"ggplot2 plot. computed data points ggplot command available $data $code, respectively.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rare_stacked.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize the number of observations per sample. — rare_stacked","text":"","code":"library(rbiom)           rare_stacked(hmp50)           rare_stacked(hmp50, rline = 500, r.linewidth = 2, r.linetype = \"twodash\")           fig <- rare_stacked(hmp50, counts = FALSE)     fig$code #> ggplot(data) + #>   geom_rect( #>     mapping = aes(xmin = .xmin, xmax = .xmax, ymin = .ymin, ymax = .ymax, fill = .group),  #>     color   = NA ) + #>   geom_hline( #>     yintercept = 1183,  #>     color      = \"red\",  #>     linetype   = \"dashed\" ) + #>   labs( #>     fill = \"Reads\",  #>     x    = \"Sample\",  #>     y    = \"Sequencing Depth\\n(log10 scale)\" ) + #>   scale_x_discrete() + #>   scale_y_continuous( #>     breaks       = 10^(0:5),  #>     minor_breaks = as.vector(2:9 %o% 10^(0:4)),  #>     labels       = scales::label_number(scale_cut = scales::cut_si(\"\")),  #>     expand       = c(0, 0),  #>     transform    = \"log10\" ) + #>   theme_bw() + #>   theme( #>     text               = element_text(size = 14),  #>     panel.grid.major.x = element_blank() )"},{"path":"https://cmmr.github.io/rbiom/reference/rarefy.html","id":null,"dir":"Reference","previous_headings":"","what":"Rarefy OTU counts. — rarefy","title":"Rarefy OTU counts. — rarefy","text":"Sub-sample OTU observations samples equal number. called data non-integer abundances, values re-scaled integers 1 depth sum depth.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rarefy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rarefy OTU counts. — rarefy","text":"","code":"rarefy(biom, depth = 0.1, n = NULL, seed = 0, clone = TRUE, cpus = NULL)"},{"path":"https://cmmr.github.io/rbiom/reference/rarefy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rarefy OTU counts. — rarefy","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . depth many observations keep per sample. 0 < depth < 1, taken minimum percentage dataset's observations keep. Ignored n specified. Default: 0.1 n number samples keep. 0 < n < 1, taken percentage samples keep. negative, number percentage samples dropped. 0, samples kept. NULL, depth used instead. Default: NULL seed integer seed randomizing observations keep drop. need create different random rarefactions data, set seed different number time. clone Create copy biom modifying. FALSE, biom modified place side-effect. See speed ups use cases. Default: TRUE cpus number CPUs use. Set NULL use available, 1 disable parallel processing. Default: NULL","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rarefy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rarefy OTU counts. — rarefy","text":"rbiom object.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rarefy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rarefy OTU counts. — rarefy","text":"","code":"library(rbiom)          sample_sums(hmp50) %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>  1660  1371  1353  1895  3939  4150           biom <- rarefy(hmp50)     sample_sums(biom) %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>  1183  1183  1183  1183  1183  1183"},{"path":"https://cmmr.github.io/rbiom/reference/rarefy_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform a counts matrix. — rarefy_cols","title":"Transform a counts matrix. — rarefy_cols","text":"Rarefaction subset counts samples number observations. Rescaling rows cols scales matrix values row sums column sums equal 1.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rarefy_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform a counts matrix. — rarefy_cols","text":"","code":"rarefy_cols(mtx, depth = 0.1, n = NULL, seed = 0L, cpus = NULL)  rescale_cols(mtx)  rescale_rows(mtx)"},{"path":"https://cmmr.github.io/rbiom/reference/rarefy_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform a counts matrix. — rarefy_cols","text":"mtx matrix-like object. depth many observations keep per sample. 0 < depth < 1, taken minimum percentage dataset's observations keep. Ignored n specified. Default: 0.1 n number samples keep. 0 < n < 1, taken percentage samples keep. negative, number percentage samples dropped. 0, samples kept. NULL, depth used instead. Default: NULL seed positive integer use seeding random number generator. need create different random rarefactions matrix, set seed value different number time. cpus number CPUs use. Set NULL use available, 1 disable parallel processing. Default: NULL","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rarefy_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform a counts matrix. — rarefy_cols","text":"rarefied rescaled matrix.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rarefy_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform a counts matrix. — rarefy_cols","text":"","code":"library(rbiom)          # rarefy_cols --------------------------------------     biom <- hmp50$clone()     sample_sums(biom) %>% head(10) #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06 HMP07 HMP08 HMP09 HMP10  #>  1660  1371  1353  1895  3939  4150  3283  1695  2069  2509       biom$counts %<>% rarefy_cols(depth=1000)     sample_sums(biom) %>% head(10) #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06 HMP07 HMP08 HMP09 HMP10  #>  1000  1000  1000  1000  1000  1000  1000  1000  1000  1000                # rescaling ----------------------------------------     mtx <- matrix(sample(1:20), nrow=4)     mtx #>      [,1] [,2] [,3] [,4] [,5] #> [1,]    6   19    7   17   18 #> [2,]   20   11   15   13   16 #> [3,]   12    2    4    1   14 #> [4,]    5    8    3    9   10          rowSums(mtx) #> [1] 67 75 33 35     rowSums(rescale_rows(mtx)) #> [1] 1 1 1 1          colSums(mtx) #> [1] 43 40 29 40 58     colSums(rescale_cols(mtx)) #> [1] 1 1 1 1 1"},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions in package rbiom. — rbiom-deprecated","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"functions listed deprecated defunct near future. possible, alternative functions similar functionality also mentioned. Help pages deprecated functions available help(\"<function>-deprecated\").","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"","code":"alpha.div(biom, rarefy = FALSE)  beta.div(   biom,   method = \"Bray-Curtis\",   weighted = TRUE,   tree = NULL,   long = FALSE,   md = FALSE )  counts(biom)  info(biom)  metadata(biom, field = NULL, cleanup = FALSE)  nsamples(biom)  ntaxa(biom)  phylogeny(biom)  read.biom(src, tree = \"auto\", prune = FALSE)  read.fasta(file, ids = NULL)  read.tree(src)  sample.names(biom)  # S3 method for class 'rbiom' select(   .data,   samples = NULL,   nTop = NULL,   nRandom = NULL,   seed = 0,   biom = NULL,   ... )  sequences(biom)  subtree(tree, tips)  taxa.names(biom)  taxa.ranks(biom)  taxa.rollup(   biom,   rank = \"OTU\",   map = NULL,   lineage = FALSE,   sparse = FALSE,   taxa = NULL,   long = FALSE,   md = FALSE )  taxonomy(biom, ranks = NULL, unc = \"asis\")  tips(x)  unifrac(biom, weighted = TRUE, tree = NULL)  write.biom(biom, file, format = \"json\")  write.fasta(seqs, outfile = NULL)  write.tree(tree, file = NULL)  write.xlsx(biom, outfile, depth = 0.1, seed = 0)  as.percent(biom)  comments(biom)  depth(biom)  depths_barplot(   biom,   rline = TRUE,   counts = TRUE,   labels = TRUE,   transform = \"log10\",   ... )  has.phylogeny(biom)  has.sequences(biom)  id(biom)  is.rarefied(biom)  repair(biom)  sample_subset(x, ...)  sample.sums(biom, long = FALSE, md = FALSE)  taxa_max(biom, rank = -1, lineage = FALSE, unc = \"singly\")  taxa.means(biom, rank = NULL)  taxa.sums(biom, rank = NULL)  top.taxa(biom, rank = \"OTU\", n = Inf)  top_taxa(biom, rank = \"OTU\", n = Inf)  comments(x) <- value  counts(x) <- value  id(x) <- value  metadata(x) <- value  phylogeny(x) <- value  sample.names(x) <- value  sequences(x) <- value  taxa.names(x) <- value  taxa.ranks(x) <- value  taxonomy(x) <- value"},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"alpha-div","dir":"Reference","previous_headings":"","what":"alpha.div","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use adiv_matrix() adiv_table() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"beta-div","dir":"Reference","previous_headings":"","what":"beta.div","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use bdiv_table() bdiv_distmat() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"counts","dir":"Reference","previous_headings":"","what":"counts","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use $counts instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"info","dir":"Reference","previous_headings":"","what":"info","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$id, biom$comment, etc instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"metadata","dir":"Reference","previous_headings":"","what":"metadata","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$metadata pull(biom, field) instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"nsamples","dir":"Reference","previous_headings":"","what":"nsamples","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$n_samples instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"ntaxa","dir":"Reference","previous_headings":"","what":"ntaxa","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$n_otus instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"phylogeny","dir":"Reference","previous_headings":"","what":"phylogeny","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$tree instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"read-biom","dir":"Reference","previous_headings":"","what":"read.biom","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use as_rbiom() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"read-fasta","dir":"Reference","previous_headings":"","what":"read.fasta","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use read_fasta() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"read-tree","dir":"Reference","previous_headings":"","what":"read.tree","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use read_tree() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"sample-names","dir":"Reference","previous_headings":"","what":"sample.names","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$samples instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"select","dir":"Reference","previous_headings":"","what":"select","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use slice() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"sequences","dir":"Reference","previous_headings":"","what":"sequences","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$sequences instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"subtree","dir":"Reference","previous_headings":"","what":"subtree","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use tree_subset() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-names","dir":"Reference","previous_headings":"","what":"taxa.names","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$otus instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-ranks","dir":"Reference","previous_headings":"","what":"taxa.ranks","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$ranks instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-rollup","dir":"Reference","previous_headings":"","what":"taxa.rollup","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use taxa_table() taxa_matrix() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxonomy","dir":"Reference","previous_headings":"","what":"taxonomy","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use $taxonomy instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"tips","dir":"Reference","previous_headings":"","what":"tips","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use tree$tip.label instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"unifrac","dir":"Reference","previous_headings":"","what":"unifrac","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use bdiv_distmat() bdiv_table() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"write-biom","dir":"Reference","previous_headings":"","what":"write.biom","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use write_biom() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"write-fasta","dir":"Reference","previous_headings":"","what":"write.fasta","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use write_fasta() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"write-tree","dir":"Reference","previous_headings":"","what":"write.tree","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use write_tree() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"write-xlsx","dir":"Reference","previous_headings":"","what":"write.xlsx","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use write_xlsx() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"as-percent","dir":"Reference","previous_headings":"","what":"as.percent","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$counts %<>% rescale_cols() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"comments","dir":"Reference","previous_headings":"","what":"comments","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$comment instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"depth","dir":"Reference","previous_headings":"","what":"depth","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use sample_sums() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"depths-barplot","dir":"Reference","previous_headings":"","what":"depths_barplot","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use rare_stacked() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"has-phylogeny","dir":"Reference","previous_headings":"","what":"has.phylogeny","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use !.null(biom$tree) instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"has-sequences","dir":"Reference","previous_headings":"","what":"has.sequences","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use !.null(biom$sequences) instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"id","dir":"Reference","previous_headings":"","what":"id","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$id instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"is-rarefied","dir":"Reference","previous_headings":"","what":"is.rarefied","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use !.null(biom$depth) instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"repair","dir":"Reference","previous_headings":"","what":"repair","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use as_rbiom(.list(biom)) instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"sample-subset","dir":"Reference","previous_headings":"","what":"sample_subset","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$metadata %<>% base::subset() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"sample-sums","dir":"Reference","previous_headings":"","what":"sample.sums","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use sample_sums() adiv_table() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-max","dir":"Reference","previous_headings":"","what":"taxa_max","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use taxa_apply(biom, max, sort = 'desc') instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-means","dir":"Reference","previous_headings":"","what":"taxa.means","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use taxa_means() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-sums","dir":"Reference","previous_headings":"","what":"taxa.sums","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use taxa_sums() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"top-taxa","dir":"Reference","previous_headings":"","what":"top.taxa","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use taxa_sums() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"top-taxa-1","dir":"Reference","previous_headings":"","what":"top_taxa","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use taxa_sums() instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"comments-set","dir":"Reference","previous_headings":"","what":"comments-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$comment <- instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"counts-set","dir":"Reference","previous_headings":"","what":"counts-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$counts <- instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"id-set","dir":"Reference","previous_headings":"","what":"id-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$id <- instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"metadata-set","dir":"Reference","previous_headings":"","what":"metadata-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$metadata <- instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"phylogeny-set","dir":"Reference","previous_headings":"","what":"phylogeny-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$tree <- instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"sample-names-set","dir":"Reference","previous_headings":"","what":"sample.names-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$samples <- instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"sequences-set","dir":"Reference","previous_headings":"","what":"sequences-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$sequences <- instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-names-set","dir":"Reference","previous_headings":"","what":"taxa.names-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$otus <- instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxa-ranks-set","dir":"Reference","previous_headings":"","what":"taxa.ranks-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$ranks <- instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-deprecated.html","id":"taxonomy-set","dir":"Reference","previous_headings":"","what":"taxonomy-set","title":"Deprecated functions in package rbiom. — rbiom-deprecated","text":"Use biom$taxonomy <- instead.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-package.html","id":null,"dir":"Reference","previous_headings":"","what":"rbiom: Read/Write, Transform, and Summarize BIOM Data — rbiom-package","title":"rbiom: Read/Write, Transform, and Summarize BIOM Data — rbiom-package","text":"toolkit working Biological Observation Matrix (BIOM) files. Features include reading/writing BIOM formats, rarefaction, alpha diversity, beta diversity (including UniFrac), summarizing counts taxonomic level, sample subsetting. Standalone functions reading, writing, subsetting phylogenetic trees also provided. CPU intensive operations encoded C multi-thread support.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-package.html","id":"multithreading","dir":"Reference","previous_headings":"","what":"Multithreading","title":"rbiom: Read/Write, Transform, and Summarize BIOM Data — rbiom-package","text":"Many rbiom functions support multithreading: default behavior function run many cores available local compute environment. wish limit number simultaneous threads, set RcppParallel's numThreads option. instance:","code":"RcppParallel::setThreadOptions(numThreads = 4)"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/rbiom-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"rbiom: Read/Write, Transform, and Summarize BIOM Data — rbiom-package","text":"Maintainer: Daniel P. Smith dansmith01@gmail.com (ORCID) contributors: Alkek Center Metagenomics Microbiome Research [copyright holder, funder]","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":null,"dir":"Reference","previous_headings":"","what":"Working with rbiom Objects. — rbiom_objects","title":"Working with rbiom Objects. — rbiom_objects","text":"Rbiom objects make easy access manipulate BIOM data, ensuring disparate components remain sync. objects behave largely like lists, can access assign using $ operator. sections list fields can read /written, helper functions common tasks like rarefying subsetting. create rbiom object, see as_rbiom(). Use $clone() create copy rbiom object. necessary rbiom objects passed reference. usual <- assignment operator simply create second reference object - create second object. See speed ups details.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":"readable-fields","dir":"Reference","previous_headings":"","what":"Readable Fields","title":"Working with rbiom Objects. — rbiom_objects","text":"Reading fields change rbiom object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":"writable-fields","dir":"Reference","previous_headings":"","what":"Writable Fields","title":"Working with rbiom Objects. — rbiom_objects","text":"Assigning new values components trigger validation checks inter-component synchronization.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":"transformations","dir":"Reference","previous_headings":"","what":"Transformations","title":"Working with rbiom Objects. — rbiom_objects","text":"functions return rbiom object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/rbiom_objects.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Working with rbiom Objects. — rbiom_objects","text":"","code":"library(rbiom)          # Duplicate the HMP50 example dataset.     biom <- hmp50$clone()               # Display an overall summary of the rbiom object.     biom #>  #> ══ Human Microbiome Project - 50 Sample Demo ═══════════════ #>  #> Oral, nasal, vaginal, and fecal samples from a diverse set #> of healthy volunteers. Source: Human Microbiome Project #> (<https://hmpdacc.org>). #>  #>      50 Samples: HMP01, HMP02, HMP03, ..., and HMP50  #>     490 OTUs:    Unc01yki, Unc53100, LtbAci52, ...  #>       7 Ranks:   .otu, Kingdom, Phylum, ..., and Genus  #>       5 Fields:  .sample, Age, BMI, Body Site, and Sex  #>         Tree:    <present> #>  #> ── 182 - 22k reads/sample ──────────────────── 2023-09-22 ── #>                # Markdown syntax for comments is recommended.     biom$comment %>% cli::cli_text() #> Oral, nasal, vaginal, and fecal samples from a diverse set of healthy #> volunteers. Source: [Human Microbiome Project](https://hmpdacc.org).               # Demonstrate a few accessors.     biom$n_samples #> [1] 50     biom$fields #> [1] \".sample\"   \"Age\"       \"BMI\"       \"Body Site\" \"Sex\"           biom$metadata #> # A tibble: 50 × 5 #>    .sample   Age   BMI `Body Site`    Sex    #>  * <chr>   <dbl> <dbl> <fct>          <fct>  #>  1 HMP01      22    20 Buccal mucosa  Female #>  2 HMP02      24    23 Buccal mucosa  Male   #>  3 HMP03      28    26 Saliva         Male   #>  4 HMP04      25    23 Saliva         Male   #>  5 HMP05      27    24 Buccal mucosa  Female #>  6 HMP06      32    25 Saliva         Male   #>  7 HMP07      26    22 Buccal mucosa  Male   #>  8 HMP08      27    26 Saliva         Female #>  9 HMP09      33    32 Saliva         Male   #> 10 HMP10      22    20 Anterior nares Female #> # ℹ 40 more rows               # Edit the metadata table.     biom$metadata$rand <- sample(1:50)     biom %<>% mutate(Obese = BMI >= 30, Sex = NULL)     biom %<>% rename('Years Old' = \"Age\")     biom$metadata #> # A tibble: 50 × 6 #>    .sample `Years Old`   BMI `Body Site`     rand Obese #>  * <chr>         <dbl> <dbl> <fct>          <int> <lgl> #>  1 HMP01            22    20 Buccal mucosa     25 FALSE #>  2 HMP02            24    23 Buccal mucosa     42 FALSE #>  3 HMP03            28    26 Saliva            44 FALSE #>  4 HMP04            25    23 Saliva            20 FALSE #>  5 HMP05            27    24 Buccal mucosa     41 FALSE #>  6 HMP06            32    25 Saliva            24 FALSE #>  7 HMP07            26    22 Buccal mucosa      5 FALSE #>  8 HMP08            27    26 Saliva            35 FALSE #>  9 HMP09            33    32 Saliva            29 TRUE  #> 10 HMP10            22    20 Anterior nares     9 FALSE #> # ℹ 40 more rows               # Subset the rbiom object     biom %<>% subset(`Body Site` == \"Saliva\" & !Obese)     biom$metadata #> # A tibble: 8 × 6 #>   .sample `Years Old`   BMI `Body Site`  rand Obese #> * <chr>         <dbl> <dbl> <fct>       <int> <lgl> #> 1 HMP03            28    26 Saliva         44 FALSE #> 2 HMP04            25    23 Saliva         20 FALSE #> 3 HMP06            32    25 Saliva         24 FALSE #> 4 HMP08            27    26 Saliva         35 FALSE #> 5 HMP18            28    24 Saliva         37 FALSE #> 6 HMP28            23    19 Saliva         23 FALSE #> 7 HMP29            36    25 Saliva          2 FALSE #> 8 HMP30            24    21 Saliva         49 FALSE               # Rarefy to an even sampling depth     sample_sums(biom) #> HMP03 HMP04 HMP06 HMP08 HMP18 HMP28 HMP29 HMP30  #>  1353  1895  4150  1695  2202  1695  2423  3938           biom %<>% rarefy()     sample_sums(biom) #> HMP03 HMP04 HMP06 HMP08 HMP18 HMP28 HMP29 HMP30  #>  1353  1353  1353  1353  1353  1353  1353  1353"},{"path":"https://cmmr.github.io/rbiom/reference/read_biom.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse counts, metadata, taxonomy, and phylogeny from a BIOM file. — read_biom","title":"Parse counts, metadata, taxonomy, and phylogeny from a BIOM file. — read_biom","text":"Parse counts, metadata, taxonomy, phylogeny BIOM file.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_biom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse counts, metadata, taxonomy, and phylogeny from a BIOM file. — read_biom","text":"","code":"read_biom(src, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/read_biom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse counts, metadata, taxonomy, and phylogeny from a BIOM file. — read_biom","text":"src Input data either file path, URL, JSON string. BIOM files can formatted according version 1.0 (JSON) 2.1 (HDF5) specifications, classical tabular format. URLs must begin http://, https://, ftp://, ftps://. JSON files must { first character. Compressed (gzip bzip2) BIOM files also supported. NOTE: read HDF5 formatted BIOM files, BioConductor R package rhdf5 must installed. ... Properties set new rbiom object, example, metadata, id, comment, tree.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_biom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse counts, metadata, taxonomy, and phylogeny from a BIOM file. — read_biom","text":"rbiom object.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/read_biom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Parse counts, metadata, taxonomy, and phylogeny from a BIOM file. — read_biom","text":"","code":"library(rbiom)      infile <- system.file(\"extdata\", \"hmp50.bz2\", package = \"rbiom\")     biom <- read_biom(infile)      print(biom) #>  #> ══ Human Microbiome Project - 50 Sample Demo ═══════════════ #>  #> Oral, nasal, vaginal, and fecal samples from a diverse set #> of healthy volunteers. Source: Human Microbiome Project #> (<https://hmpdacc.org>). #>  #>      50 Samples: HMP01, HMP02, HMP03, ..., and HMP50  #>     490 OTUs:    Unc01yki, Unc53100, LtbAci52, ...  #>       7 Ranks:   .otu, Kingdom, Phylum, ..., and Genus  #>       5 Fields:  .sample, Age, BMI, Body Site, and Sex  #>         Tree:    <present> #>  #> ── 182 - 22k reads/sample ──────────────────── 2023-09-22 ── #>       # Taxa Abundances     biom$counts[1:4,1:10] %>% as.matrix() #>          HMP01 HMP02 HMP03 HMP04 HMP05 HMP06 HMP07 HMP08 HMP09 HMP10 #> Unc01yki     0     0     0     0     0     0     0     0     0     2 #> Unc53100  1083   543   301   223  2672   748  2436   321    57    28 #> LtbAci52     0     0     0     0     0     0     0     0     0     0 #> CnbTube3     0     0     0     0     0     0     0     0     0   659          biom$taxonomy %>% head() #> # A tibble: 6 × 7 #>   .otu     Kingdom  Phylum         Class          Order             Family Genus #>   <chr>    <fct>    <fct>          <fct>          <fct>             <fct>  <fct> #> 1 Unc01yki Bacteria Firmicutes     Bacilli        Lactobacillales   Lacto… Lact… #> 2 Unc53100 Bacteria Firmicutes     Bacilli        Lactobacillales   Strep… Stre… #> 3 LtbAci52 Bacteria Firmicutes     Bacilli        Lactobacillales   Lacto… Lact… #> 4 CnbTube3 Bacteria Actinobacteria Actinobacteria Corynebacteriales Coryn… Cory… #> 5 Unc02qsf Bacteria Firmicutes     Bacilli        Bacillales        Staph… Stap… #> 6 PpbAcne6 Bacteria Actinobacteria Actinobacteria Propionibacteria… Propi… Prop…      # Metadata     biom$metadata %>% head() #> # A tibble: 6 × 5 #>   .sample   Age   BMI `Body Site`   Sex    #>   <chr>   <dbl> <dbl> <fct>         <fct>  #> 1 HMP01      22    20 Buccal mucosa Female #> 2 HMP02      24    23 Buccal mucosa Male   #> 3 HMP03      28    26 Saliva        Male   #> 4 HMP04      25    23 Saliva        Male   #> 5 HMP05      27    24 Buccal mucosa Female #> 6 HMP06      32    25 Saliva        Male            table(biom$metadata$Sex, biom$metadata$`Body Site`) #>          #>          Anterior nares Buccal mucosa Mid vagina Saliva Stool #>   Female              5             5         10      5     5 #>   Male                5             5          0      5     5          sprintf(\"Mean age: %.1f\", mean(biom$metadata$Age)) #> [1] \"Mean age: 27.8\"      # Phylogenetic tree     biom$tree %>%       tree_subset(1:10) %>%       plot()"},{"path":"https://cmmr.github.io/rbiom/reference/read_fasta.html","id":null,"dir":"Reference","previous_headings":"","what":"Parse a fasta file into a named character vector. — read_fasta","title":"Parse a fasta file into a named character vector. — read_fasta","text":"Parse fasta file named character vector.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_fasta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Parse a fasta file into a named character vector. — read_fasta","text":"","code":"read_fasta(file, ids = NULL)"},{"path":"https://cmmr.github.io/rbiom/reference/read_fasta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Parse a fasta file into a named character vector. — read_fasta","text":"file file/URL fasta-formatted sequences. Can optionally compressed gzip, bzip2, xz, lzma. ids Character vector IDs retrieve. default, NULL, retrieve everything.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_fasta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Parse a fasta file into a named character vector. — read_fasta","text":"named character vector names fasta headers values sequences.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_tree.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a newick formatted phylogenetic tree. — read_tree","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"phylogenetic tree required computing UniFrac distance matrices. can load tree file providing tree string directly. tree must Newick format, also known parenthetic format New Hampshire format.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_tree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"","code":"read_tree(src, underscores = FALSE)"},{"path":"https://cmmr.github.io/rbiom/reference/read_tree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"src Input data either file path, URL, Newick string. Compressed (gzip bzip2) files also supported. underscores parsing tree, underscores kept ? default converted spaces (unless entire ID quoted). Default FALSE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/read_tree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"phylo class object representing tree.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/read_tree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a newick formatted phylogenetic tree. — read_tree","text":"","code":"library(rbiom)          infile <- system.file(\"extdata\", \"newick.tre\", package = \"rbiom\")     tree <- read_tree(infile)     print(tree) #>  #> Phylogenetic tree with 20 tips and 19 internal nodes. #>  #> Tip labels: #>   Pa5Bac29, AtlPorci, AciSp313, MxlBact8, MxlBacte, PseS1107, ... #>  #> Rooted; includes branch length(s).          tree <- read_tree(\"         (A:0.99,((B:0.87,C:0.89):0.51,(((D:0.16,(E:0.83,F:0.96)         :0.94):0.69,(G:0.92,(H:0.62,I:0.85):0.54):0.23):0.74,J:0.1         2):0.43):0.67);\")     plot(tree)"},{"path":"https://cmmr.github.io/rbiom/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr left_join, mutate, pull, relocate, rename, select, slice, slice_head, slice_max, slice_min, slice_sample, slice_tail magrittr %<>%, %>% parallelly availableCores pillar glimpse plyr ., ddply, ldply, llply stats na.omit","code":""},{"path":"https://cmmr.github.io/rbiom/reference/sample_sums.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize the taxa observations in each sample. — sample_sums","title":"Summarize the taxa observations in each sample. — sample_sums","text":"Summarize taxa observations sample.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/sample_sums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize the taxa observations in each sample. — sample_sums","text":"","code":"sample_sums(biom, rank = -1, sort = NULL, unc = \"singly\")  sample_apply(biom, FUN, rank = -1, sort = NULL, unc = \"singly\", ...)"},{"path":"https://cmmr.github.io/rbiom/reference/sample_sums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize the taxa observations in each sample. — sample_sums","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. sort Sort result. Options: NULL - sort; \"asc\" - ascending order (smallest largest); \"desc\" - descending order (largest smallest). Ignored result simple numeric vector. Default: NULL unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" FUN function apply column taxa_matrix(). ... Optional arguments FUN.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/sample_sums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize the taxa observations in each sample. — sample_sums","text":"sample_sums, named numeric vector number observations sample. sample_apply, named vector list results FUN. names taxa IDs.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/sample_sums.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize the taxa observations in each sample. — sample_sums","text":"","code":"library(rbiom)     library(ggplot2)          sample_sums(hmp50, sort = 'asc') %>% head() #> HMP36 HMP24 HMP03 HMP02 HMP42 HMP17  #>   182  1183  1353  1371  1489  1579           # Unique OTUs and \"cultured\" classes per sample     nnz <- function (x) sum(x > 0) # number of non-zeroes     sample_apply(hmp50, nnz, 'otu') %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>    49    75    75    83    67   105      sample_apply(hmp50, nnz, 'class', unc = 'drop') %>% head() #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06  #>    10    13    12    13    12    15           # Number of reads in each sample's most abundant family     sample_apply(hmp50, base::max, 'f', sort = 'desc') %>% head() #> HMP44 HMP25 HMP11 HMP21 HMP34 HMP46  #> 16220  9581  6308  5786  4645  4050           ggplot() + geom_histogram(aes(x=sample_sums(hmp50)), bins = 20)"},{"path":"https://cmmr.github.io/rbiom/reference/slice_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset to a specific number of samples. — slice_metadata","title":"Subset to a specific number of samples. — slice_metadata","text":"Subset specific number samples.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/slice_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset to a specific number of samples. — slice_metadata","text":"","code":"# S3 method for class 'rbiom' slice(.data, ..., .by = NULL, .preserve = FALSE, clone = TRUE)  # S3 method for class 'rbiom' slice_head(.data, n, prop, by = NULL, clone = TRUE, ...)  # S3 method for class 'rbiom' slice_tail(.data, n, prop, by = NULL, clone = TRUE, ...)  # S3 method for class 'rbiom' slice_min(   .data,   order_by,   n,   prop,   by = NULL,   with_ties = TRUE,   na_rm = FALSE,   clone = TRUE,   ... )  # S3 method for class 'rbiom' slice_max(   .data,   order_by,   n,   prop,   by = NULL,   with_ties = TRUE,   na_rm = FALSE,   clone = TRUE,   ... )  # S3 method for class 'rbiom' slice_sample(   .data,   n,   prop,   by = NULL,   weight_by = NULL,   replace = FALSE,   clone = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/slice_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset to a specific number of samples. — slice_metadata","text":".data rbiom object, as_rbiom(). ... slice(), integer row indexes. slice_*() functions, used. See dplyr::slice(). .,  <tidy-select> Optionally, selection columns group just operation, functioning alternative group_by(). details examples, see ?dplyr_by. .preserve Relevant .data input grouped. .preserve = FALSE (default), grouping structure recalculated based resulting data, otherwise grouping kept . clone Create copy biom modifying. FALSE, biom modified place side-effect. See speed ups use cases. Default: TRUE n, prop Provide either n, number rows, prop, proportion rows select. neither supplied, n = 1 used. n greater number rows group (prop > 1), result silently truncated group size. prop rounded towards zero generate integer number rows. negative value n prop subtracted group size. example, n = -2 group 5 rows select 5 - 2 = 3 rows; prop = -0.25 8 rows select 8 * (1 - 0.25) = 6 rows. order_by <data-masking> Variable function variables order . order multiple variables, wrap data frame tibble. with_ties ties kept together? default, TRUE, may return rows request. Use FALSE ignore ties, return first n rows. na_rm missing values order_by removed result? FALSE, NA values sorted end (like arrange()), included insufficient non-missing values reach n/prop. weight_by <data-masking> Sampling weights. must evaluate vector non-negative numbers length input. Weights automatically standardised sum 1. replace sampling performed (TRUE) without (FALSE, default) replacement.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/slice_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset to a specific number of samples. — slice_metadata","text":"rbiom object.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/slice_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset to a specific number of samples. — slice_metadata","text":"","code":"library(rbiom)          # The last 3 samples in the metadata table.     biom <- slice_tail(hmp50, n = 3)     biom$metadata #> # A tibble: 3 × 5 #>   .sample   Age   BMI `Body Site`    Sex    #> * <chr>   <dbl> <dbl> <fct>          <fct>  #> 1 HMP48      24    29 Anterior nares Male   #> 2 HMP49      21    22 Mid vagina     Female #> 3 HMP50      31    20 Mid vagina     Female          # The 3 oldest subjects sampled.     biom <- slice_max(hmp50, Age, n = 3)     biom$metadata #> # A tibble: 3 × 5 #>   .sample   Age   BMI `Body Site`    Sex    #> * <chr>   <dbl> <dbl> <fct>          <fct>  #> 1 HMP34      40    27 Anterior nares Female #> 2 HMP37      38    31 Mid vagina     Female #> 3 HMP44      38    19 Mid vagina     Female          # Pick 3 samples at random.     biom <- slice_sample(hmp50, n = 3)     biom$metadata #> # A tibble: 3 × 5 #>   .sample   Age   BMI `Body Site`   Sex    #> * <chr>   <dbl> <dbl> <fct>         <fct>  #> 1 HMP11      24    23 Buccal mucosa Female #> 2 HMP12      35    26 Stool         Male   #> 3 HMP38      26    25 Mid vagina    Female"},{"path":"https://cmmr.github.io/rbiom/reference/speed.html","id":null,"dir":"Reference","previous_headings":"","what":"Speed Ups. — speed","title":"Speed Ups. — speed","text":"working large datasets, can make use tips tricks speed operations rbiom objects.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/speed.html","id":"skip-cloning","dir":"Reference","previous_headings":"","what":"Skip Cloning","title":"Speed Ups. — speed","text":"Functions modify rbiom objects, like subset() rarefy(), automatically clone object modifying . make functions behave R users expect - performance trade . Rather :   Modify biom place like :","code":"biom <- subset(biom, ...) biom <- rarefy(biom) subset(biom, clone = FALSE, ...) rarefy(biom, clone = FALSE)  # Or: biom$metadata %<>% subset(...) biom$counts %<>% rarefy_cols()"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/speed.html","id":"sequences","dir":"Reference","previous_headings":"","what":"Sequences","title":"Speed Ups. — speed","text":"Reference sequences OTUs imported along rest dataset stored $sequences. However, rbiom currently use sequences anything (except writing back write_biom() write_fasta()). can delete rbiom object :","code":"biom$sequences <- NULL"},{"path":"https://cmmr.github.io/rbiom/reference/speed.html","id":"tree","dir":"Reference","previous_headings":"","what":"Tree","title":"Speed Ups. — speed","text":"phylogenetic reference tree OTUs used calculating UniFrac distances. using UniFrac, tree can dropped rbiom object :   Alternatively, can store tree separately rbiom object provide just functions use . example:","code":"biom$tree <- NULL tree <- biom$tree biom$tree <- NULL dm <- bdiv_distmat(biom, 'unifrac', tree = tree)"},{"path":"https://cmmr.github.io/rbiom/reference/speed.html","id":"increase-caching","dir":"Reference","previous_headings":"","what":"Increase Caching","title":"Speed Ups. — speed","text":"Caching enabled default - 20 MB per R session. large datasets, increasing cache size can help. size specified bytes R option environment variable.   can also specify cache directory results can preserved one R session next.   quick notes caching: Setting cache directory \"FALSE\" disable caching. R options override environment variables. key hash algorithm can set options(rbiom.cache_hash=rlang::hash).","code":"options(rbiom.cache_size=200 * 1024 ^ 2) # 200 MB Sys.setenv(RBIOM_CACHE_SIZE=1024 ^ 3)    # 1 GB options(rbiom.cache_dir=tools::R_user_dir(\"rbiom\", \"cache\")) Sys.setenv(RBIOM_CACHE_DIR=\"~/rbiom_cache\")"},{"path":"https://cmmr.github.io/rbiom/reference/speed.html","id":"summary-layers","dir":"Reference","previous_headings":"","what":"Summary Layers","title":"Speed Ups. — speed","text":"figure-generating functions allow display every data point. However, thousands data points, rendering every single one can slow. Instead, set layers parameter use options.","code":"adiv_boxplot(biom, layers = \"bl\")  # bar, linerange adiv_corrplot(biom, layers = \"tc\") # trend, confidence bdiv_ord_plot(biom, layers = \"e\")  # ellipse"},{"path":"https://cmmr.github.io/rbiom/reference/stats_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize categorical metadata effects on numeric values. — stats_boxplot","title":"Visualize categorical metadata effects on numeric values. — stats_boxplot","text":"Visualize categorical metadata effects numeric values.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize categorical metadata effects on numeric values. — stats_boxplot","text":"","code":"stats_boxplot(   df,   x = NULL,   y = attr(df, \"response\"),   layers = \"x\",   stat.by = x,   facet.by = NULL,   colors = TRUE,   shapes = TRUE,   patterns = FALSE,   test = \"auto\",   flip = FALSE,   stripe = NULL,   ci = \"ci\",   level = 0.95,   p.adj = \"fdr\",   p.top = Inf,   outliers = NULL,   xlab.angle = \"auto\",   p.label = 0.05,   caption = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/stats_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize categorical metadata effects on numeric values. — stats_boxplot","text":"df dataset (data.frame tibble object). \"Dataset fields\" mentioned match column names df. Required. x categorical metadata column name use x-axis. NULL, groups samples single category. y numeric metadata column name use y-axis. Default: attr(df, 'response') layers One c(\"bar\", \"box\" (\"x\"), \"violin\", \"dot\", \"strip\", \"crossbar\", \"errorbar\", \"linerange\", \"pointrange\"). Single letter abbreviations also accepted. instance, c(\"box\", \"dot\") equivalent c(\"x\", \"d\") \"xd\". Default: \"x\" stat.Dataset field statistical groups. Must categorical. Default: NULL facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE patterns Patterns group. Options similar colors's: TRUE, FALSE, NULL, pattern names (\"brick\", \"chevron\", \"fish\", \"grid\", etc), named vector mapping groups specific pattern names. See \"Aesthetics\" section additional information. Default: FALSE test Method computing p-values: 'auto' 'none'. 'auto' choose Wilcox Kruskal-Wallis depending number groups. flip Transpose axes, taxa present rows instead columns. Default: FALSE stripe Shade every x position. Default: flip ci calculate min/max crossbar, errorbar, linerange, pointrange layers. Options : \"ci\" (confidence interval), \"range\", \"sd\" (standard deviation), \"se\" (standard error), \"mad\" (median absolute deviation). center mark crossbar pointrange represents mean, except \"mad\" case represents median. Default: \"ci\" level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" p.top display taxa significant differences abundance. p.top >= 1, p.top significant taxa displayed. p.top less one, taxa adjusted p-value <= p.top displayed. Recommended used combination taxa parameter set lower bound mean abundance considered taxa. Default: Inf outliers Show boxplot outliers? TRUE always show. FALSE always hide. NULL hide overlaying dot strip chart.  Default: NULL xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". p.label Minimum adjusted p-value display plot bracket. p.label = 0.05 - Show p-values <= 0.05. p.label = 0 - show p-values plot. p.label = 1 - Show p-values plot. numeric vector one value provided, used breaks asterisk notation. Default: 0.05 caption Add methodology caption beneath plot. Default: TRUE ... Additional parameters pass along ggplot2 functions. Prefix parameter name layer name pass layer. instance, d.size = 2 ensures points dot layer size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize categorical metadata effects on numeric values. — stats_boxplot","text":"ggplot2 plot. computed data points, ggplot2 command, stats table, stats table commands available $data, $code, $stats, $stats$code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_boxplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Visualize categorical metadata effects on numeric values. — stats_boxplot","text":"built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Patterns added using fillpattern R package. Options \"brick\", \"chevron\", \"fish\", \"grid\", \"herringbone\", \"hexagon\", \"octagon\", \"rain\", \"saw\", \"shingle\", \"rshingle\", \"stripe\", \"wave\", optionally abbreviated /suffixed modifiers. example, \"hex10_sm\" hexagon pattern rotated 10 degrees shrunk 2x. See fillpattern::fill_pattern() complete documentation options. Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. -z = 65:90; -Z = 97:122 use letters instead shapes plot. Character strings may used well.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/stats_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize categorical metadata effects on numeric values. — stats_boxplot","text":"","code":"library(rbiom)          df <- adiv_table(rarefy(hmp50))     stats_boxplot(df, x = \"Body Site\")      stats_boxplot(df, x = \"Sex\", stat.by = \"Body Site\", layers = \"be\")"},{"path":"https://cmmr.github.io/rbiom/reference/stats_corrplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize regression with scatterplots and trendlines. — stats_corrplot","title":"Visualize regression with scatterplots and trendlines. — stats_corrplot","text":"Visualize regression scatterplots trendlines.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_corrplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize regression with scatterplots and trendlines. — stats_corrplot","text":"","code":"stats_corrplot(   df,   x,   y = attr(df, \"response\"),   layers = \"tc\",   stat.by = NULL,   facet.by = NULL,   colors = TRUE,   shapes = TRUE,   test = \"emmeans\",   fit = \"gam\",   at = NULL,   level = 0.95,   p.adj = \"fdr\",   p.top = Inf,   alt = \"!=\",   mu = 0,   caption = TRUE,   check = FALSE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/stats_corrplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize regression with scatterplots and trendlines. — stats_corrplot","text":"df dataset (data.frame tibble object). \"Dataset fields\" mentioned match column names df. Required. x Dataset field x-axis values. Equivalent regr argument stats_table(). Required. y numeric metadata column name use y-axis. Default: attr(df, 'response') layers One c(\"trend\", \"confidence\", \"point\", \"name\", \"residual\"). Single letter abbreviations also accepted. instance, c(\"trend\", \"point\") equivalent c(\"t\", \"p\") \"tp\". Default: \"tc\" stat.Dataset field statistical groups. Must categorical. Default: NULL facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE test Method computing p-values: 'none', 'emmeans', 'emtrends'. Default: 'emmeans' fit fit trendline. 'lm', 'log', 'gam'. Default: 'gam' Position(s) along x-axis means slopes evaluated. Default: NULL, samples 100 evenly spaced positions selects position p-value significant. level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" p.top display taxa significant differences abundance. p.top >= 1, p.top significant taxa displayed. p.top less one, taxa adjusted p-value <= p.top displayed. Recommended used combination taxa parameter set lower bound mean abundance considered taxa. Default: Inf alt Alternative hypothesis direction. Options '!=' (two-sided; equal mu), '<' (less mu), '>' (greater mu). Default: '!=' mu Reference value test . Default: 0 caption Add methodology caption beneath plot. Default: TRUE check Generate additional plots aid assessing data normality. Default: FALSE ... Additional parameters pass along ggplot2 functions. Prefix parameter name layer name pass layer. instance, p.size = 2 ensures points size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_corrplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize regression with scatterplots and trendlines. — stats_corrplot","text":"ggplot2 plot. computed data points, ggplot2 command, stats table, stats table commands available $data, $code, $stats, $stats$code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_corrplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Visualize regression with scatterplots and trendlines. — stats_corrplot","text":"built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. -z = 65:90; -Z = 97:122 use letters instead shapes plot. Character strings may used well.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/stats_corrplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize regression with scatterplots and trendlines. — stats_corrplot","text":"","code":"library(rbiom)          biom <- subset(hmp50, `Body Site` %in% c('Saliva', 'Stool'))     df   <- adiv_table(rarefy(biom))     stats_corrplot(df, \"age\", stat.by = \"body\")      stats_corrplot(       df       = df,        x        = \"Age\",        stat.by  = \"Body Site\",        facet.by = \"Sex\",        layers   = \"trend\" )"},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":null,"dir":"Reference","previous_headings":"","what":"Run non-parametric statistics on a data.frame. — stats_table","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"simple interface lower-level statistics functions, including stats::wilcox.test(), stats::kruskal.test(), emmeans::emmeans(), emmeans::emtrends().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"","code":"stats_table(   df,   regr = NULL,   resp = attr(df, \"response\"),   stat.by = NULL,   split.by = NULL,   test = \"emmeans\",   fit = \"gam\",   at = NULL,   level = 0.95,   alt = \"!=\",   mu = 0,   p.adj = \"fdr\" )"},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"df dataset (data.frame tibble object). \"Dataset fields\" mentioned match column names df. Required. regr Dataset field x-axis (independent; predictive) values. Must numeric. Default: NULL resp Dataset field y-axis (dependent; response) values, taxa abundance alpha diversity. Default: attr(df, 'response') stat.Dataset field statistical groups. Must categorical. Default: NULL split.Dataset field(s) data split prior calculations. Must categorical. Default: NULL test Method computing p-values: 'wilcox', 'kruskal', 'emmeans', 'emtrends'. Default: 'emmeans' fit fit trendline. 'lm', 'log', 'gam'. Default: 'gam' Position(s) along x-axis means slopes evaluated. Default: NULL, samples 100 evenly spaced positions selects position p-value significant. level confidence level calculating confidence interval. Default: 0.95 alt Alternative hypothesis direction. Options '!=' (two-sided; equal mu), '<' (less mu), '>' (greater mu). Default: '!=' mu Reference value test . Default: 0 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"tibble data.frame fields table . tibble object provides $code operator print R code used generate statistics.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/stats_table.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run non-parametric statistics on a data.frame. — stats_table","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          df <- taxa_table(biom, rank = \"Family\")     stats_table(df, stat.by = \"Body Site\")[,1:6] #> # Model:    gam(.abundance ~ `Body Site`, method = \"REML\") #> # A tibble: 10 × 6 #>    `Body Site`                    .mean.diff .h1   .p.val .adj.p .effect.size #>    <chr>                               <dbl> <fct>  <dbl>  <dbl>        <dbl> #>  1 Mid vagina - Saliva                84.1   != 0   0.136  0.510      0.274   #>  2 Buccal mucosa - Saliva             60.4   != 0   0.160  0.510      0.258   #>  3 Anterior nares - Mid vagina       -84.6   != 0   0.167  0.510     -0.254   #>  4 Anterior nares - Buccal mucosa    -60.9   != 0   0.214  0.510     -0.228   #>  5 Mid vagina - Stool                 73.8   != 0   0.255  0.510      0.215   #>  6 Buccal mucosa - Stool              50.1   != 0   0.336  0.560      0.181   #>  7 Buccal mucosa - Mid vagina        -23.7   != 0   0.724  0.889     -0.0646  #>  8 Saliva - Stool                    -10.3   != 0   0.766  0.889     -0.0560  #>  9 Anterior nares - Stool            -10.8   != 0   0.800  0.889     -0.0476  #> 10 Anterior nares - Saliva            -0.500 != 0   0.988  0.988     -0.00284          df <- adiv_table(biom)     stats_table(df, stat.by = \"Sex\", split.by = \"Body Site\")[,1:7] #> # Model:    gam(.diversity ~ Sex, method = \"REML\") #> # A tibble: 5 × 7 #>   `Body Site`    Sex           .mean.diff .h1   .p.val .adj.p .effect.size #>   <fct>          <chr>              <dbl> <fct>  <dbl>  <dbl>        <dbl> #> 1 Buccal mucosa  Female - Male    -0.560  != 0   0.230  0.441       -0.822 #> 2 Saliva         Female - Male    -0.242  != 0   0.231  0.441       -0.820 #> 3 Stool          Female - Male    -0.192  != 0   0.331  0.441       -0.701 #> 4 Anterior nares Female - Male    -0.0686 != 0   0.739  0.739       -0.218 #> 5 Mid vagina     NA               NA      NA    NA     NA           NA"},{"path":"https://cmmr.github.io/rbiom/reference/subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset an rbiom object by sample names, OTU names, metadata, or taxonomy. — subset","title":"Subset an rbiom object by sample names, OTU names, metadata, or taxonomy. — subset","text":"Dropping samples OTUs lead observations removed OTU matrix (biom$counts). OTUs samples zero observations automatically removed rbiom object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset an rbiom object by sample names, OTU names, metadata, or taxonomy. — subset","text":"","code":"# S3 method for class 'rbiom' subset(x, subset, clone = TRUE, ...)  # S3 method for class 'rbiom' x[i, j, ..., clone = TRUE, drop = FALSE]  # S3 method for class 'rbiom' na.omit(object, fields = \".all\", clone = TRUE, ...)  subset_taxa(x, subset, clone = TRUE, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset an rbiom object by sample names, OTU names, metadata, or taxonomy. — subset","text":"x rbiom object, as_rbiom(). subset Logical expression rows keep. See base::subset(). clone Create copy biom modifying. FALSE, biom modified place side-effect. See speed ups use cases. Default: TRUE ... used. , j sample OTU names keep. logical/integer vector indicating sample names biom$samples biom$otus keep. Subsetting [] takes samples, whereas [,j] takes otus j samples (corresponding [rows, cols] underlying biom$counts matrix). drop used object rbiom object, as_rbiom(). fields metadata field(s) check NAs, \".\" check metadata fields.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset an rbiom object by sample names, OTU names, metadata, or taxonomy. — subset","text":"rbiom object.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset an rbiom object by sample names, OTU names, metadata, or taxonomy. — subset","text":"","code":"library(rbiom)     library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following object is masked from ‘package:rbiom’: #>  #>     id #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union          # Subset to specific samples     biom <- hmp50[c('HMP20', 'HMP42', 'HMP12')]     biom$metadata #> # A tibble: 3 × 5 #>   .sample   Age   BMI `Body Site` Sex    #> * <chr>   <dbl> <dbl> <fct>       <fct>  #> 1 HMP20      27    22 Stool       Female #> 2 HMP42      34    19 Mid vagina  Female #> 3 HMP12      35    26 Stool       Male            # Subset to specific OTUs     biom <- hmp50[c('LtbAci52', 'UncO2012'),] # <- Trailing ,     biom$taxonomy #> # A tibble: 2 × 7 #>   .otu     Kingdom  Phylum        Class       Order           Family       Genus #> * <chr>    <fct>    <fct>         <fct>       <fct>           <fct>        <fct> #> 1 LtbAci52 Bacteria Firmicutes    Bacilli     Lactobacillales Lactobacill… Lact… #> 2 UncO2012 Bacteria Bacteroidetes Bacteroidia Bacteroidales   Bacteroidac… Bact…          # Subset to specific samples and OTUs     biom <- hmp50[c('LtbAci52', 'UncO2012'), c('HMP20', 'HMP42', 'HMP12')]     as.matrix(biom) #>          HMP20 HMP42 HMP12 #> LtbAci52     0  1167     0 #> UncO2012   119     1  1196          # Subset samples according to metadata     biom <- subset(hmp50, `Body Site` %in% c('Saliva') & Age < 25)     biom$metadata #> # A tibble: 3 × 5 #>   .sample   Age   BMI `Body Site` Sex    #> * <chr>   <dbl> <dbl> <fct>       <fct>  #> 1 HMP27      24    30 Saliva      Female #> 2 HMP28      23    19 Saliva      Female #> 3 HMP30      24    21 Saliva      Female          # Subset OTUs according to taxonomy     biom <- subset_taxa(hmp50, Phylum == 'Cyanobacteria')     biom$taxonomy #> # A tibble: 4 × 7 #>   .otu     Kingdom  Phylum        Class           Order             Family Genus #> * <chr>    <fct>    <fct>         <fct>           <fct>             <fct>  <fct> #> 1 Hu4Lup30 Bacteria Cyanobacteria Chloroplast     o                 f      g     #> 2 Unc02oth Bacteria Cyanobacteria Melainabacteria Obscuribacterales f      g     #> 3 PinJeffr Bacteria Cyanobacteria Chloroplast     o                 f      g     #> 4 Unc48787 Bacteria Cyanobacteria Melainabacteria Gastranaerophila… f      g              # Remove samples with NA metadata values     biom <- mutate(hmp50, BS2 = na_if(`Body Site`, 'Saliva'))     biom$metadata #> # A tibble: 50 × 6 #>    .sample   Age   BMI `Body Site`    Sex    BS2            #>  * <chr>   <dbl> <dbl> <fct>          <fct>  <fct>          #>  1 HMP01      22    20 Buccal mucosa  Female Buccal mucosa  #>  2 HMP02      24    23 Buccal mucosa  Male   Buccal mucosa  #>  3 HMP03      28    26 Saliva         Male   NA             #>  4 HMP04      25    23 Saliva         Male   NA             #>  5 HMP05      27    24 Buccal mucosa  Female Buccal mucosa  #>  6 HMP06      32    25 Saliva         Male   NA             #>  7 HMP07      26    22 Buccal mucosa  Male   Buccal mucosa  #>  8 HMP08      27    26 Saliva         Female NA             #>  9 HMP09      33    32 Saliva         Male   NA             #> 10 HMP10      22    20 Anterior nares Female Anterior nares #> # ℹ 40 more rows     biom <- na.omit(biom)     biom$metadata #> # A tibble: 40 × 6 #>    .sample   Age   BMI `Body Site`    Sex    BS2            #>  * <chr>   <dbl> <dbl> <fct>          <fct>  <fct>          #>  1 HMP01      22    20 Buccal mucosa  Female Buccal mucosa  #>  2 HMP02      24    23 Buccal mucosa  Male   Buccal mucosa  #>  3 HMP05      27    24 Buccal mucosa  Female Buccal mucosa  #>  4 HMP07      26    22 Buccal mucosa  Male   Buccal mucosa  #>  5 HMP10      22    20 Anterior nares Female Anterior nares #>  6 HMP11      24    23 Buccal mucosa  Female Buccal mucosa  #>  7 HMP12      35    26 Stool          Male   Stool          #>  8 HMP13      24    21 Buccal mucosa  Female Buccal mucosa  #>  9 HMP14      32    26 Buccal mucosa  Male   Buccal mucosa  #> 10 HMP15      25    21 Anterior nares Female Anterior nares #> # ℹ 30 more rows"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_boxplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize BIOM data with boxplots. — taxa_boxplot","title":"Visualize BIOM data with boxplots. — taxa_boxplot","text":"Visualize BIOM data boxplots.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_boxplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize BIOM data with boxplots. — taxa_boxplot","text":"","code":"taxa_boxplot(   biom,   x = NULL,   rank = -1,   layers = \"x\",   taxa = 6,   unc = \"singly\",   other = FALSE,   p.top = Inf,   stat.by = x,   facet.by = NULL,   colors = TRUE,   shapes = TRUE,   patterns = FALSE,   flip = FALSE,   stripe = NULL,   ci = \"ci\",   level = 0.95,   p.adj = \"fdr\",   outliers = NULL,   xlab.angle = \"auto\",   p.label = 0.05,   transform = \"none\",   y.transform = \"sqrt\",   caption = TRUE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_boxplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize BIOM data with boxplots. — taxa_boxplot","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . x categorical metadata column name use x-axis. NULL, puts taxa along x-axis. Default: NULL rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. layers One c(\"bar\", \"box\" (\"x\"), \"violin\", \"dot\", \"strip\", \"crossbar\", \"errorbar\", \"linerange\", \"pointrange\"). Single letter abbreviations also accepted. instance, c(\"box\", \"dot\") equivalent c(\"x\", \"d\") \"xd\". Default: \"x\" taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE p.top display taxa significant differences abundance. p.top >= 1, p.top significant taxa displayed. p.top less one, taxa adjusted p-value <= p.top displayed. Recommended used combination taxa parameter set lower bound mean abundance considered taxa. Default: Inf stat.Dataset field statistical groups. Must categorical. Default: NULL facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE patterns Patterns group. Options similar colors's: TRUE, FALSE, NULL, pattern names (\"brick\", \"chevron\", \"fish\", \"grid\", etc), named vector mapping groups specific pattern names. See \"Aesthetics\" section additional information. Default: FALSE flip Transpose axes, taxa present rows instead columns. Default: FALSE stripe Shade every x position. Default: flip ci calculate min/max crossbar, errorbar, linerange, pointrange layers. Options : \"ci\" (confidence interval), \"range\", \"sd\" (standard deviation), \"se\" (standard error), \"mad\" (median absolute deviation). center mark crossbar pointrange represents mean, except \"mad\" case represents median. Default: \"ci\" level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" outliers Show boxplot outliers? TRUE always show. FALSE always hide. NULL hide overlaying dot strip chart.  Default: NULL xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". p.label Minimum adjusted p-value display plot bracket. p.label = 0.05 - Show p-values <= 0.05. p.label = 0 - show p-values plot. p.label = 1 - Show p-values plot. numeric vector one value provided, used breaks asterisk notation. Default: 0.05 transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" y.transform transformation apply y-axis. Visualizing differences high- low-abundance taxa best done non-linear axis. Options : \"sqrt\" - square-root transformation \"log1p\" - log(y + 1) transformation \"none\" - transformation methods allow visualization high- low-abundance taxa simultaneously, without complaint 'zero' count observations. Default: \"sqrt\" Use xaxis.transform yaxis.transform pass custom values directly ggplot2's scale_* functions. caption Add methodology caption beneath plot. Default: TRUE ... Additional parameters pass along ggplot2 functions. Prefix parameter name layer name pass layer. instance, d.size = 2 ensures points dot layer size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_boxplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize BIOM data with boxplots. — taxa_boxplot","text":"ggplot2 plot. computed data points, ggplot2 command, stats table, stats table commands available $data, $code, $stats, $stats$code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_boxplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Visualize BIOM data with boxplots. — taxa_boxplot","text":"built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Patterns added using fillpattern R package. Options \"brick\", \"chevron\", \"fish\", \"grid\", \"herringbone\", \"hexagon\", \"octagon\", \"rain\", \"saw\", \"shingle\", \"rshingle\", \"stripe\", \"wave\", optionally abbreviated /suffixed modifiers. example, \"hex10_sm\" hexagon pattern rotated 10 degrees shrunk 2x. See fillpattern::fill_pattern() complete documentation options. Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. -z = 65:90; -Z = 97:122 use letters instead shapes plot. Character strings may used well.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_boxplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize BIOM data with boxplots. — taxa_boxplot","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          taxa_boxplot(biom, stat.by = \"Body Site\", stripe = TRUE)      taxa_boxplot(biom, layers = \"bed\", rank = c(\"Phylum\", \"Genus\"), flip = TRUE)      taxa_boxplot(       biom    = subset(biom, `Body Site` %in% c('Saliva', 'Stool')),        taxa    = 3,        layers  = \"ps\",        stat.by = \"Body Site\",       colors  = c('Saliva' = \"blue\", 'Stool' = \"red\") )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Cluster samples by taxa abundances k-means. — taxa_clusters","title":"Cluster samples by taxa abundances k-means. — taxa_clusters","text":"Cluster samples taxa abundances k-means.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cluster samples by taxa abundances k-means. — taxa_clusters","text":"","code":"taxa_clusters(biom, rank = \".otu\", k = 5, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cluster samples by taxa abundances k-means. — taxa_clusters","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . rank taxa rank use. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: .otu. k Number clusters. Default: 5L ... Passed stats::kmeans().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_clusters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cluster samples by taxa abundances k-means. — taxa_clusters","text":"numeric factor assigning samples clusters.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_clusters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cluster samples by taxa abundances k-means. — taxa_clusters","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)     biom$metadata$otu_cluster <- taxa_clusters(biom)          pull(biom, 'otu_cluster')[1:10] #> HMP01 HMP02 HMP03 HMP04 HMP05 HMP06 HMP07 HMP08 HMP09 HMP10  #>     4     4     4     4     4     4     4     4     4     4  #> Levels: 1 2 3 4 5          bdiv_ord_plot(biom, layers = \"p\", stat.by = \"otu_cluster\")"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"Visualize taxa abundance scatterplots trendlines.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"","code":"taxa_corrplot(   biom,   x,   rank = -1,   layers = \"tc\",   taxa = 6,   lineage = FALSE,   unc = \"singly\",   other = FALSE,   stat.by = NULL,   facet.by = NULL,   colors = TRUE,   shapes = TRUE,   test = \"emmeans\",   fit = \"gam\",   at = NULL,   level = 0.95,   p.adj = \"fdr\",   transform = \"none\",   ties = \"random\",   seed = 0,   alt = \"!=\",   mu = 0,   caption = TRUE,   check = FALSE,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . x Dataset field x-axis values. Equivalent regr argument stats_table(). Required. rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. layers One c(\"trend\", \"confidence\", \"point\", \"name\", \"residual\"). Single letter abbreviations also accepted. instance, c(\"trend\", \"point\") equivalent c(\"t\", \"p\") \"tp\". Default: \"tc\" taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE stat.Dataset field statistical groups. Must categorical. Default: NULL facet.Dataset field(s) use faceting. Must categorical. Default: NULL colors color groups. Options : TRUE - Automatically select colorblind-friendly colors. FALSE NULL - use colors. palette name - Auto-select colors set. E.g. \"okabe\" character vector - Custom colors use. E.g. c(\"red\", \"#00FF00\") named character vector - Explicit mapping. E.g. c(Male = \"blue\", Female = \"red\") See \"Aesthetics\" section additional information. Default: TRUE shapes Shapes group. Options similar colors's: TRUE, FALSE, NULL, shape names (typically integers 0 - 17), named vector mapping groups specific shape names. See \"Aesthetics\" section additional information. Default: TRUE test Method computing p-values: 'none', 'emmeans', 'emtrends'. Default: 'emmeans' fit fit trendline. 'lm', 'log', 'gam'. Default: 'gam' Position(s) along x-axis means slopes evaluated. Default: NULL, samples 100 evenly spaced positions selects position p-value significant. level confidence level calculating confidence interval. Default: 0.95 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\" transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" ties transform=\"rank\", rank identical values. Options : c(\"average\", \"first\", \"last\", \"random\", \"max\", \"min\"). See rank() details. Default: \"random\" seed Random seed permutations. Must non-negative integer. Default: 0 alt Alternative hypothesis direction. Options '!=' (two-sided; equal mu), '<' (less mu), '>' (greater mu). Default: '!=' mu Reference value test . Default: 0 caption Add methodology caption beneath plot. Default: TRUE check Generate additional plots aid assessing data normality. Default: FALSE ... Additional parameters pass along ggplot2 functions. Prefix parameter name layer name pass layer. instance, p.size = 2 ensures points size set 2.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"ggplot2 plot. computed data points, ggplot2 command, stats table, stats table commands available $data, $code, $stats, $stats$code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"built-color palettes colorblind-friendly. available categorical palette names : \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Shapes can given per base R - numbers 0 17 various shapes, decimal value ascii character, e.g. -z = 65:90; -Z = 97:122 use letters instead shapes plot. Character strings may used well.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_corrplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualize taxa abundance with scatterplots and trendlines. — taxa_corrplot","text":"","code":"library(rbiom)           biom <- rarefy(subset(hmp50, `Body Site` %in% c('Buccal mucosa', 'Saliva')))     taxa_corrplot(biom, x = \"BMI\", stat.by = \"Body Site\", taxa = 'Streptococcus')"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Display taxa abundances as a heatmap. — taxa_heatmap","title":"Display taxa abundances as a heatmap. — taxa_heatmap","text":"Display taxa abundances heatmap.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display taxa abundances as a heatmap. — taxa_heatmap","text":"","code":"taxa_heatmap(   biom,   rank = -1,   taxa = 6,   tracks = NULL,   grid = \"bilbao\",   other = FALSE,   unc = \"singly\",   lineage = FALSE,   label = TRUE,   label_size = NULL,   rescale = \"none\",   trees = TRUE,   clust = \"complete\",   dist = \"euclidean\",   asp = 1,   tree_height = 10,   track_height = 10,   legend = \"right\",   title = TRUE,   xlab.angle = \"auto\",   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display taxa abundances as a heatmap. — taxa_heatmap","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. tracks character vector metadata fields display tracks top plot. , list expected tracks argument plot_heatmap(). Default: NULL grid Color palette name, list expected plot_heatmap(). Default: \"bilbao\" Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE label Label matrix rows columns. can supply list logical vector length two control row labels column labels separately, example label = c(rows = TRUE, cols = FALSE), simply label = c(TRUE, FALSE). valid options \"rows\", \"cols\", \"\", \"bottom\", \"right\", \"none\". Default: TRUE label_size font size use row column labels. can supply numeric vector length two control row label sizes column label sizes separately, example c(rows = 20, cols = 8), simply c(20, 8). Default: NULL, computes: pmax(8, pmin(20, 100 / dim(mtx))) rescale Rescale rows columns common min/max. Options: \"none\", \"rows\", \"cols\". Default: \"none\" trees Draw dendrogram rows (left) columns (top). can supply list logical vector length two control row tree column tree separately, example trees = c(rows = TRUE, cols = FALSE), simply trees = c(TRUE, FALSE). valid options \"rows\", \"cols\", \"\", \"left\", \"top\", \"none\". Default: TRUE clust Clustering algorithm reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example clust = c(rows = \"complete\", cols = NA), simply clust = c(\"complete\", NA). Options : FALSE NA - Disable reordering. hclust class object E.g. stats::hclust(). method name - \"ward.D\", \"ward.D2\", \"single\", \"complete\", \"average\", \"mcquitty\", \"median\", \"centroid\". Default: \"complete\" dist Distance algorithm use reordering rows columns similarity. can supply list character vector length two control row column clustering separately, example dist = c(rows = \"euclidean\", cols = \"maximum\"), simply dist = c(\"euclidean\", \"maximum\"). Options : dist class object E.g. stats::dist() bdiv_distmat(). method name - \"euclidean\", \"maximum\", \"manhattan\", \"canberra\", \"binary\", \"minkowski\". Default: \"euclidean\" asp Aspect ratio (height/width) entire grid. Default: 1 (square) tree_height, track_height height dendrogram annotation tracks percentage overall grid size. Use numeric vector length two assign c(top, left) independently. Default: 10 (10% grid's height) legend place legend. Options : \"right\" \"bottom\". Default: \"right\" title Plot title. Set TRUE default title, NULL title, character string. Default: TRUE xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". ... Additional arguments pass ggplot2::theme().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display taxa abundances as a heatmap. — taxa_heatmap","text":"ggplot2 plot. computed data points ggplot command available $data $code, respectively.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_heatmap.html","id":"annotation-tracks","dir":"Reference","previous_headings":"","what":"Annotation Tracks","title":"Display taxa abundances as a heatmap. — taxa_heatmap","text":"Metadata can displayed colored tracks heatmap. Common use cases provided , thorough documentation available https://cmmr.github.io/rbiom . following entries track definitions understood: colors - pre-defined palette name custom set colors map . range - c(min,max) use scale values. label - Label track. Defaults name list element. side - Options \"top\" (default) \"left\". na.color - color use NA values. bins - Bin gradient many bins/steps. guide - list arguments guide_colorbar() guide_legend(). built-color palettes colorblind-friendly. Categorical palette names: \"okabe\", \"carto\", \"r4\", \"polychrome\", \"tol\", \"bright\", \"light\", \"muted\", \"vibrant\", \"tableau\", \"classic\", \"alphabet\", \"tableau20\", \"kelly\", \"fishy\". Numeric palette names: \"reds\", \"oranges\", \"greens\", \"purples\", \"grays\", \"acton\", \"bamako\", \"batlow\", \"bilbao\", \"buda\", \"davos\", \"devon\", \"grayC\", \"hawaii\", \"imola\", \"lajolla\", \"lapaz\", \"nuuk\", \"oslo\", \"tokyo\", \"turku\", \"bam\", \"berlin\", \"broc\", \"cork\", \"lisbon\", \"roma\", \"tofino\", \"vanimo\", \"vik\".","code":"## Categorical ---------------------------- tracks = \"Body Site\" tracks = list('Body Site' = \"bright\") tracks = list('Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"))  ## Numeric -------------------------------- tracks = \"Age\" tracks = list('Age' = \"reds\")  ## Multiple Tracks ------------------------ tracks = c(\"Body Site\", \"Age\") tracks = list('Body Site' = \"bright\", 'Age' = \"reds\") tracks = list(   'Body Site' = c('Stool' = \"blue\", 'Saliva' = \"green\"),   'Age'       = list('colors' = \"reds\") )"},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_heatmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display taxa abundances as a heatmap. — taxa_heatmap","text":"","code":"library(rbiom)          # Keep and rarefy the 10 most deeply sequenced samples.     hmp10 <- rarefy(hmp50, n = 10)          taxa_heatmap(hmp10, rank = \"Phylum\", tracks = \"Body Site\")           taxa_heatmap(hmp10, rank = \"Genus\", tracks = c(\"sex\", \"bo\"))           taxa_heatmap(hmp10, rank = \"Phylum\", tracks = list(       'Sex'       = list(colors = c(m = \"#0000FF\", f = \"violetred\")),        'Body Site' = list(colors = \"muted\", label = \"Source\") ))"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Map OTUs names to taxa names at a given rank. — taxa_map","title":"Map OTUs names to taxa names at a given rank. — taxa_map","text":"Map OTUs names taxa names given rank.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map OTUs names to taxa names at a given rank. — taxa_map","text":"","code":"taxa_map(   biom,   rank = NULL,   taxa = Inf,   unc = \"singly\",   lineage = FALSE,   other = FALSE )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map OTUs names to taxa names at a given rank. — taxa_map","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . rank NULL, entire biom$taxonomy data.frame returned, transformed per unc. Alternatively, single taxonomic rank (rank name integer position biom$ranks) returns named character vector mapping OTUs taxa names. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map OTUs names to taxa names at a given rank. — taxa_map","text":"tibble data.frame rank=NULL, character vector named OTU names.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map OTUs names to taxa names at a given rank. — taxa_map","text":"","code":"library(rbiom)     library(dplyr, warn.conflicts = FALSE)          # In $taxonomy, .otu is the first column (like a row identifier)  -----     hmp50$taxonomy %>% head(4) #> # A tibble: 4 × 7 #>   .otu     Kingdom  Phylum         Class          Order             Family Genus #>   <chr>    <fct>    <fct>          <fct>          <fct>             <fct>  <fct> #> 1 Unc01yki Bacteria Firmicutes     Bacilli        Lactobacillales   Lacto… Lact… #> 2 Unc53100 Bacteria Firmicutes     Bacilli        Lactobacillales   Strep… Stre… #> 3 LtbAci52 Bacteria Firmicutes     Bacilli        Lactobacillales   Lacto… Lact… #> 4 CnbTube3 Bacteria Actinobacteria Actinobacteria Corynebacteriales Coryn… Cory…          # In taxa_map, .otu is the last column (most precise rank)  -----------     taxa_map(hmp50) %>% head(4) #> # A tibble: 4 × 7 #>   Kingdom  Phylum         Class          Order             Family    Genus .otu  #>   <fct>    <fct>          <fct>          <fct>             <fct>     <fct> <chr> #> 1 Bacteria Firmicutes     Bacilli        Lactobacillales   Lactobac… Lact… Unc0… #> 2 Bacteria Firmicutes     Bacilli        Lactobacillales   Streptoc… Stre… Unc5… #> 3 Bacteria Firmicutes     Bacilli        Lactobacillales   Lactobac… Lact… LtbA… #> 4 Bacteria Actinobacteria Actinobacteria Corynebacteriales Coryneba… Cory… CnbT…          # Generate an OTU to Genus mapping  -----------------------------------     taxa_map(hmp50, \"Genus\") %>% head(4) #>          Unc01yki          Unc53100          LtbAci52          CnbTube3  #>     Lactobacillus     Streptococcus     Lactobacillus Corynebacterium 1  #> 251 Levels: Abiotrophia Acidaminococcus Acinetobacter ... Veillonella          # Sometimes taxonomic names are incomplete ----------------------------     otus <- c('GemAsacc', 'GcbBacte', 'Unc58411')     taxa_map(hmp50, unc = \"asis\") %>% filter(.otu %in% otus) %>% select(Phylum:.otu) #> # A tibble: 3 × 6 #>   Phylum          Class      Order          Family    Genus   .otu     #>   <fct>           <fct>      <fct>          <fct>     <fct>   <chr>    #> 1 Gracilibacteria c          o              f         g       GcbBacte #> 2 Tenericutes     Mollicutes Mollicutes RF9 f         g       Unc58411 #> 3 Firmicutes      Bacilli    Bacillales     Family XI Gemella GemAsacc          # rbiom can replace them with unique placeholders ---------------------     taxa_map(hmp50, unc = \"singly\") %>% filter(.otu %in% otus) %>% select(Class:.otu) #> # A tibble: 3 × 5 #>   Class         Order          Family        Genus         .otu     #>   <fct>         <fct>          <fct>         <fct>         <chr>    #> 1 Unc. GcbBacte Unc. GcbBacte  Unc. GcbBacte Unc. GcbBacte GcbBacte #> 2 Mollicutes    Mollicutes RF9 Unc. Unc58411 Unc. Unc58411 Unc58411 #> 3 Bacilli       Bacillales     Bacillales XI Gemella       GemAsacc          # Or collapse them into groups ----------------------------------------     taxa_map(hmp50, unc = \"grouped\") %>% filter(.otu %in% otus) %>% select(Class:Genus) #> # A tibble: 3 × 4 #>   Class                Order                Family               Genus           #>   <fct>                <fct>                <fct>                <fct>           #> 1 Unc. Gracilibacteria Unc. Gracilibacteria Unc. Gracilibacteria Unc. Graciliba… #> 2 Mollicutes           Mollicutes RF9       Unc. Mollicutes RF9  Unc. Mollicute… #> 3 Bacilli              Bacillales           Bacillales XI        Gemella"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxa abundances per sample. — taxa_table","title":"Taxa abundances per sample. — taxa_table","text":"taxa_matrix() - Accepts single rank returns matrix. taxa_table() - Can accept one rank returns tibble data.frame.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxa abundances per sample. — taxa_table","text":"","code":"taxa_table(   biom,   rank = -1,   taxa = 6,   lineage = FALSE,   md = \".all\",   unc = \"singly\",   other = FALSE,   transform = \"none\",   ties = \"random\",   seed = 0 )  taxa_matrix(   biom,   rank = -1,   taxa = NULL,   lineage = FALSE,   sparse = FALSE,   unc = \"singly\",   other = FALSE,   transform = \"none\",   ties = \"random\",   seed = 0 )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Taxa abundances per sample. — taxa_table","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE md Dataset field(s) include output data frame, '.' include metadata fields. Default: '.' unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" ties transform=\"rank\", rank identical values. Options : c(\"average\", \"first\", \"last\", \"random\", \"max\", \"min\"). See rank() details. Default: \"random\" seed Random seed permutations. Must non-negative integer. Default: 0 sparse TRUE, returns slam::simple_triplet_matrix(), otherwise returns normal R matrix object. Default: FALSE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Taxa abundances per sample. — taxa_table","text":"taxa_matrix() - numeric matrix taxa rows, samples columns. taxa_table() - tibble data frame column names .sample, .taxa, .abundance, requested md.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxa abundances per sample. — taxa_table","text":"","code":"library(rbiom)          hmp50$ranks #> [1] \".otu\"    \"Kingdom\" \"Phylum\"  \"Class\"   \"Order\"   \"Family\"  \"Genus\"            taxa_matrix(hmp50, 'Phylum')[1:4,1:6] #>                     HMP01 HMP02 HMP03 HMP04 HMP05 HMP06 #> Actinobacteria         18    60   126   120    30    71 #> Bacteroidetes         276   221   313   218   144   880 #> Cyanobacteria           0     0     0     0     0     0 #> Deinococcus Thermus     0     0     0     0     0     0          taxa_table(hmp50, 'Phylum') #> # A tibble: 300 × 8 #>    .rank  .sample .taxa          .abundance   Age   BMI `Body Site`   Sex    #>    <fct>  <chr>   <fct>               <dbl> <dbl> <dbl> <fct>         <fct>  #>  1 Phylum HMP01   Firmicutes           1208    22    20 Buccal mucosa Female #>  2 Phylum HMP01   Bacteroidetes         276    22    20 Buccal mucosa Female #>  3 Phylum HMP01   Actinobacteria         18    22    20 Buccal mucosa Female #>  4 Phylum HMP01   Proteobacteria        103    22    20 Buccal mucosa Female #>  5 Phylum HMP01   Fusobacteria           41    22    20 Buccal mucosa Female #>  6 Phylum HMP01   Tenericutes             0    22    20 Buccal mucosa Female #>  7 Phylum HMP02   Firmicutes            931    24    23 Buccal mucosa Male   #>  8 Phylum HMP02   Bacteroidetes         221    24    23 Buccal mucosa Male   #>  9 Phylum HMP02   Actinobacteria         60    24    23 Buccal mucosa Male   #> 10 Phylum HMP02   Proteobacteria        112    24    23 Buccal mucosa Male   #> # ℹ 290 more rows"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stacked.html","id":null,"dir":"Reference","previous_headings":"","what":"Display taxa abundances as a stacked bar graph. — taxa_stacked","title":"Display taxa abundances as a stacked bar graph. — taxa_stacked","text":"Display taxa abundances stacked bar graph.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stacked.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display taxa abundances as a stacked bar graph. — taxa_stacked","text":"","code":"taxa_stacked(   biom,   rank = -1,   taxa = 6,   colors = TRUE,   patterns = FALSE,   label.by = NULL,   order.by = NULL,   facet.by = NULL,   dist = \"euclidean\",   clust = \"complete\",   other = TRUE,   unc = \"singly\",   lineage = FALSE,   xlab.angle = 90,   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stacked.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display taxa abundances as a stacked bar graph. — taxa_stacked","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. colors, patterns character vector colors patterns use graph. named character vector can used map taxon names specific colors patterns. Set TRUE auto-select colors patterns, FALSE disable per-taxa colors patterns. Default: colors=TRUE, patterns=FALSE. label., order.metadata column use labeling /sorting samples across x-axis. Set label.='.sample' display sample names. order.=NULL, samples arranged based dist clust, . Default: label.=NULL, order.=NULL. facet.Dataset field(s) use faceting. Must categorical. Default: NULL dist, clust Distance (stats::dist()) clustering (stats::hclust()) methods use automatically arranging samples along x-axis put samples similar composition near one another. Default: dist=\"euclidean\", clust=\"complete\". Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE xlab.angle Angle labels bottom plot. Options \"auto\", '0', '30', '90'. Default: \"auto\". ... Parameters underlying functions. Prefixing parameter names layer name ensures particular parameter passed , , layer.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stacked.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Display taxa abundances as a stacked bar graph. — taxa_stacked","text":"ggplot2 plot. computed data points ggplot command available $data $code, respectively.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stacked.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Display taxa abundances as a stacked bar graph. — taxa_stacked","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          taxa_stacked(biom, rank=\"Phylum\")           taxa_stacked(biom, rank = \"genus\", facet.by = \"body site\")"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Test taxa abundances for associations with metadata. — taxa_stats","title":"Test taxa abundances for associations with metadata. — taxa_stats","text":"convenience wrapper taxa_table() + stats_table().","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test taxa abundances for associations with metadata. — taxa_stats","text":"","code":"taxa_stats(   biom,   regr = NULL,   stat.by = NULL,   rank = -1,   taxa = 6,   lineage = FALSE,   unc = \"singly\",   other = FALSE,   split.by = NULL,   transform = \"none\",   test = \"emmeans\",   fit = \"gam\",   at = NULL,   level = 0.95,   alt = \"!=\",   mu = 0,   p.adj = \"fdr\" )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test taxa abundances for associations with metadata. — taxa_stats","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . regr Dataset field x-axis (independent; predictive) values. Must numeric. Default: NULL stat.Dataset field statistical groups. Must categorical. Default: NULL rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. taxa taxa display. integer value show top n abundant taxa. value 0 <= n < 1 show taxa mean abundance greater (e.g. 0.1 implies >= 10%). character vector taxa names show named taxa. Default: 6. lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" Sum non-itemized taxa \"\" taxa. FALSE, returns taxa matched taxa argument. Specifying TRUE adds \"\" returned set. string can also given imply TRUE, value name use instead \"\". Default: FALSE split.Dataset field(s) data split prior calculations. Must categorical. Default: NULL transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" test Method computing p-values: 'wilcox', 'kruskal', 'emmeans', 'emtrends'. Default: 'emmeans' fit fit trendline. 'lm', 'log', 'gam'. Default: 'gam' Position(s) along x-axis means slopes evaluated. Default: NULL, samples 100 evenly spaced positions selects position p-value significant. level confidence level calculating confidence interval. Default: 0.95 alt Alternative hypothesis direction. Options '!=' (two-sided; equal mu), '<' (less mu), '>' (greater mu). Default: '!=' mu Reference value test . Default: 0 p.adj Method use multiple comparisons adjustment p-values. Run p.adjust.methods list available options. Default: \"fdr\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test taxa abundances for associations with metadata. — taxa_stats","text":"tibble data.frame fields table . tibble object provides $code operator print R code used generate statistics.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test taxa abundances for associations with metadata. — taxa_stats","text":"","code":"library(rbiom)          biom <- rarefy(hmp50)          taxa_stats(biom, stat.by = \"Body Site\", rank = \"Family\")[,1:6] #> # Model:    gam(.abundance ~ `Body Site`, method = \"REML\") #> # A tibble: 60 × 6 #>    .taxa            `Body Site`                .mean.diff .h1     .p.val  .adj.p #>    <fct>            <chr>                           <dbl> <fct>    <dbl>   <dbl> #>  1 Bacteroidaceae   Mid vagina - Stool              -610. != 0  2.60e-10 4.12e-9 #>  2 Bacteroidaceae   Saliva - Stool                  -609. != 0  2.66e-10 4.12e-9 #>  3 Bacteroidaceae   Anterior nares - Stool          -609. != 0  2.70e-10 4.12e-9 #>  4 Bacteroidaceae   Buccal mucosa - Stool           -608. != 0  2.79e-10 4.12e-9 #>  5 Streptococcaceae Buccal mucosa - Mid vagina       787. != 0  1.10e- 8 1.29e-7 #>  6 Streptococcaceae Anterior nares - Buccal m…      -766. != 0  1.78e- 8 1.75e-7 #>  7 Lactobacillaceae Mid vagina - Saliva             1048. != 0  3.15e- 8 2.07e-7 #>  8 Lactobacillaceae Buccal mucosa - Mid vagina     -1048. != 0  3.15e- 8 2.07e-7 #>  9 Lactobacillaceae Anterior nares - Mid vagi…     -1048. != 0  3.16e- 8 2.07e-7 #> 10 Streptococcaceae Buccal mucosa - Stool            787. != 0  4.18e- 8 2.46e-7 #> # ℹ 50 more rows"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_sums.html","id":null,"dir":"Reference","previous_headings":"","what":"Get summary taxa abundances. — taxa_sums","title":"Get summary taxa abundances. — taxa_sums","text":"Get summary taxa abundances.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_sums.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get summary taxa abundances. — taxa_sums","text":"","code":"taxa_sums(   biom,   rank = -1,   sort = NULL,   lineage = FALSE,   unc = \"singly\",   transform = \"none\" )  taxa_means(   biom,   rank = -1,   sort = NULL,   lineage = FALSE,   unc = \"singly\",   transform = \"none\" )  taxa_apply(   biom,   FUN,   rank = -1,   sort = NULL,   lineage = FALSE,   unc = \"singly\",   transform = \"none\",   ... )"},{"path":"https://cmmr.github.io/rbiom/reference/taxa_sums.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get summary taxa abundances. — taxa_sums","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . rank rank(s) taxa display. E.g. \"Phylum\", \"Genus\", \".otu\", etc. integer vector can also given, 1 highest rank, 2 second highest, -1 lowest rank, -2 second lowest, 0 OTU \"rank\". Run biom$ranks see options given rbiom object. Default: -1. sort Sort result. Options: NULL, \"asc\", \"desc\", NULL sort result. \"asc\" sort ascending order (smallest largest), \"desc\" descending order (largest smallest). Ignored result simple numeric vector. Default: NULL lineage Include ranks name taxa. instance, setting TRUE produce Bacteria; Actinobacteria; Coriobacteriia; Coriobacteriales. Otherwise taxa name simply Coriobacteriales. want set TRUE unc = \"asis\" taxa names (Incertae_Sedis) map multiple higher level ranks. Default: FALSE unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\" transform Transformation apply. Options : c(\"none\", \"rank\", \"log\", \"log1p\", \"sqrt\", \"percent\"). \"rank\" useful correcting non-normally distributions applying regression statistics. Default: \"none\" FUN function apply row taxa_matrix(). ... Optional arguments FUN.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/taxa_sums.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get summary taxa abundances. — taxa_sums","text":"taxa_sums taxa_means, named numeric vector. taxa_apply, named vector list results FUN. names taxa IDs.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/taxa_sums.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get summary taxa abundances. — taxa_sums","text":"","code":"library(rbiom)           taxa_sums(hmp50) %>% head(4) #>     Abiotrophia Acidaminococcus   Acinetobacter  Actinobacillus  #>             135              62              44             242           taxa_means(hmp50, 'Family') %>% head(5) #>  Acidaminococcaceae    Actinomycetaceae       Aerococcaceae      Alcaligenaceae  #>               14.58               16.92                2.86               11.28  #> Alicyclobacillaceae  #>                0.12           taxa_apply(hmp50, max) %>% head(5) #>     Abiotrophia Acidaminococcus   Acinetobacter  Actinobacillus     Actinomyces  #>              78              59              42             100             105           taxa_apply(hmp50, fivenum) %>% head(5) #> $Abiotrophia #> [1]  0  0  0  1 78 #>  #> $Acidaminococcus #> [1]  0  0  0  0 59 #>  #> $Acinetobacter #> [1]  0  0  0  0 42 #>  #> $Actinobacillus #> [1]   0   0   0   2 100 #>  #> $Actinomyces #> [1]   0   0   1  21 105 #>"},{"path":"https://cmmr.github.io/rbiom/reference/tree_subset.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a subtree by specifying tips to keep. — tree_subset","title":"Create a subtree by specifying tips to keep. — tree_subset","text":"Create subtree specifying tips keep.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/tree_subset.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a subtree by specifying tips to keep. — tree_subset","text":"","code":"tree_subset(tree, tips, underscores = FALSE)"},{"path":"https://cmmr.github.io/rbiom/reference/tree_subset.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a subtree by specifying tips to keep. — tree_subset","text":"tree phylo object, returned read_tree(). tips character, numeric, logical vector tips keep. underscores parsing tree, underscores kept ? default converted spaces (unless entire ID quoted). Default FALSE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/tree_subset.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a subtree by specifying tips to keep. — tree_subset","text":"phylo object subtree.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/tree_subset.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a subtree by specifying tips to keep. — tree_subset","text":"","code":"library(rbiom)          infile <- system.file(\"extdata\", \"newick.tre\", package = \"rbiom\")     tree <- read_tree(infile)     tree #>  #> Phylogenetic tree with 20 tips and 19 internal nodes. #>  #> Tip labels: #>   Pa5Bac29, AtlPorci, AciSp313, MxlBact8, MxlBacte, PseS1107, ... #>  #> Rooted; includes branch length(s).          subtree <- tree_subset(tree, tips = head(tree$tip.label))     subtree #>  #> Phylogenetic tree with 6 tips and 5 internal nodes. #>  #> Tip labels: #>   Pa5Bac29, AtlPorci, AciSp313, MxlBact8, MxlBacte, PseS1107 #>  #> Rooted; includes branch length(s)."},{"path":"https://cmmr.github.io/rbiom/reference/with.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate expressions on metadata. — with","title":"Evaluate expressions on metadata. — with","text":"() return result expression. within() return rbiom object.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/with.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate expressions on metadata. — with","text":"","code":"# S3 method for class 'rbiom' with(data, expr, ...)  # S3 method for class 'rbiom' within(data, expr, clone = TRUE, ...)"},{"path":"https://cmmr.github.io/rbiom/reference/with.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate expressions on metadata. — with","text":"data rbiom object, as_rbiom(). expr Passed base::() base::within(). ... used. clone Create copy biom modifying. FALSE, biom modified place side-effect. See speed ups use cases. Default: TRUE","code":""},{"path":"https://cmmr.github.io/rbiom/reference/with.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate expressions on metadata. — with","text":"See description.","code":""},{"path":[]},{"path":"https://cmmr.github.io/rbiom/reference/with.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate expressions on metadata. — with","text":"","code":"library(rbiom)           with(hmp50, table(`Body Site`, Sex)) #>                 Sex #> Body Site        Female Male #>   Anterior nares      5    5 #>   Buccal mucosa       5    5 #>   Mid vagina         10    0 #>   Saliva              5    5 #>   Stool               5    5          biom <- within(hmp50, {       age_bin = cut(Age, 5)       bmi_bin = cut(BMI, 5)     })     biom$metadata #> # A tibble: 50 × 7 #>    .sample   Age   BMI `Body Site`    Sex    bmi_bin     age_bin     #>  * <chr>   <dbl> <dbl> <fct>          <fct>  <fct>       <fct>       #>  1 HMP01      22    20 Buccal mucosa  Female (19,21.6]   (21,24.8]   #>  2 HMP02      24    23 Buccal mucosa  Male   (21.6,24.2] (21,24.8]   #>  3 HMP03      28    26 Saliva         Male   (24.2,26.8] (24.8,28.6] #>  4 HMP04      25    23 Saliva         Male   (21.6,24.2] (24.8,28.6] #>  5 HMP05      27    24 Buccal mucosa  Female (21.6,24.2] (24.8,28.6] #>  6 HMP06      32    25 Saliva         Male   (24.2,26.8] (28.6,32.4] #>  7 HMP07      26    22 Buccal mucosa  Male   (21.6,24.2] (24.8,28.6] #>  8 HMP08      27    26 Saliva         Female (24.2,26.8] (24.8,28.6] #>  9 HMP09      33    32 Saliva         Male   (29.4,32]   (32.4,36.2] #> 10 HMP10      22    20 Anterior nares Female (19,21.6]   (21,24.8]   #> # ℹ 40 more rows"},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":null,"dir":"Reference","previous_headings":"","what":"Save an rbiom object to a file. — write_biom","title":"Save an rbiom object to a file. — write_biom","text":"Automatically creates directories adds compression based file name. write_biom() - According BIOM format specification. write_xlsx() - Raw data summary tables Excel file format. See details. write_fasta() - Sequences fasta format. biom may also named character vector. write_tree() - Phylogenetic tree newick format. biom may also phylo object. write_counts(), write_metadata(), write_taxonomy() - Tab-separated values.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save an rbiom object to a file. — write_biom","text":"","code":"write_biom(biom, file, format = \"json\")  write_metadata(biom, file, quote = FALSE, sep = \"\\t\", ...)  write_counts(biom, file, quote = FALSE, sep = \"\\t\", ...)  write_taxonomy(biom, file, quote = FALSE, sep = \"\\t\", ...)  write_fasta(biom, file = NULL)  write_tree(biom, file = NULL)  write_xlsx(biom, file, depth = 0.1, n = NULL, seed = 0, unc = \"singly\")"},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save an rbiom object to a file. — write_biom","text":"biom rbiom object, as_rbiom(). value accepted as_rbiom() can also given . file Path output file. File names ending .gz .bz2 compressed accordingly. Setting file=NULL write_fasta(), write_tree(), write_biom(format='json'), returns string output written. write_biom(format='tab'), file=NULL returns tibble written. format Options \"tab\", \"json\", \"hdf5\", corresponding classic tabular format, BIOM format version 1.0 biom version 2.1, respectively. NOTE: write HDF5 formatted BIOM files, BioConductor R package rhdf5 must installed. Default: \"json\" quote, sep, ... Parameters passed write.table(). Default: quote=FALSE, sep=\"\\t\" depth, n Passed rarefy_cols(). write_xlsx() , depth=0 disables rarefaction. Default: depth=0.1, n=NULL seed Random seed use rarefying. See rarefy_cols() function details. Must non-negative integer. Default: 0 unc handle unclassified, uncultured, similarly ambiguous taxa names. Options : \"singly\" - Replaces OTU name. \"grouped\" - Replaces higher rank's name. \"drop\" - Excludes result. \"asis\" - check/modify taxa names. Abbreviations allowed. Default: \"singly\"","code":""},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save an rbiom object to a file. — write_biom","text":"normalized filepath written (invisibly), unless file=NULL (see file argument ).","code":""},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Save an rbiom object to a file. — write_biom","text":"write_xlsx(), attributes(biom) saved additional worksheets attribute data frame, matrix, dist -class object. attribute named 'Reads Per Step' treated specially merged usual 'Reads Per Sample' tab.","code":""},{"path":"https://cmmr.github.io/rbiom/reference/write_biom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save an rbiom object to a file. — write_biom","text":"","code":"library(rbiom)          write_tree(hmp50) %>% substr(1, 50) #> [1] \"(((((((((((((EschC738:0.03627,(((Unc92490:0.05748,\"          if (FALSE) {            hmp10        <- hmp50$clone()       hmp10$counts <- hmp10$counts[,1:10] %>% rarefy_cols()              attr(hmp10, \"Weighted UniFrac\")   <- bdiv_distmat(hmp10, 'unifrac')       attr(hmp10, \"Unweighted Jaccard\") <- bdiv_distmat(hmp10, 'jaccard', weighted=FALSE)              outfile <- write_xlsx(hmp10, tempfile(fileext = \".xlsx\"))     }"},{"path":"https://cmmr.github.io/rbiom/news/index.html","id":"rbiom-20139000","dir":"Changelog","previous_headings":"","what":"rbiom 2.0.13.9000","title":"rbiom 2.0.13.9000","text":"Option underscores allows keeping underscores tree IDs.","code":""},{"path":"https://cmmr.github.io/rbiom/news/index.html","id":"rbiom-2013","dir":"Changelog","previous_headings":"","what":"rbiom 2.0.13","title":"rbiom 2.0.13","text":"CRAN release: 2025-01-24 Major release significant new features. Plotting added. Statistics added. Caching added. Clearer naming scheme functions. Previous names still work deprecated. Generation human-readable ggplot2 code modifying plots outside rbiom. Provenance tracking BIOM objects derivatives.","code":""},{"path":"https://cmmr.github.io/rbiom/news/index.html","id":"rbiom-103","dir":"Changelog","previous_headings":"","what":"rbiom 1.0.3","title":"rbiom 1.0.3","text":"CRAN release: 2021-11-05 Corrects breaking changes ‘rhdf5’ package.","code":""},{"path":"https://cmmr.github.io/rbiom/news/index.html","id":"rbiom-102","dir":"Changelog","previous_headings":"","what":"rbiom 1.0.2","title":"rbiom 1.0.2","text":"CRAN release: 2020-05-29 Improved compatibility Debian Solaris. ‘rhdf5’ package now optional dependency. select() subset() functions now subset sequences .","code":""},{"path":"https://cmmr.github.io/rbiom/news/index.html","id":"rbiom-100","dir":"Changelog","previous_headings":"","what":"rbiom 1.0.0","title":"rbiom 1.0.0","text":"CRAN release: 2020-05-26 Initial Release","code":""}]
